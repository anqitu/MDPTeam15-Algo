Anqis-MacBook-Pro:MDPTeam15-Algo anqitu$ python run_controller_gui.py
Init window starting
Init window completed
Init complete!
SENDING RPHello from PC to RPi


SENDING ARHello from PC to Arduino


SENDING ANHello from PC to Android


RECEIVED PRi: ARArduino Setup Done
Data from Arduino: ['Arduino Setup Done']
arduino_recv_queue: ['Arduino Setup Done']
RECEIVED PRi: ANwaypoint10,11
Data from Android: ['waypoint10,11']
android_recv_queue: ['waypoint10,11']
Pop Andoird Command: waypoint10,11
arduino_recv_queue: ['Arduino Setup Done']
Set Waypoint: (8, 10)
RECEIVED PRi: ANca
Data from Android: ['ca']
android_recv_queue: ['ca']
Pop Andoird Command: ca
arduino_recv_queue: ['Arduino Setup Done']
Calibrating Side
Start CALIBRATION
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Getting cell status surrounding robot...
Robot Position @ (1, 1, 0)
Status of cells surrounding robot: {0: [2, 2, 2], 1: [2, 2, 2], 2: [1, 1, 1], 3: [1, 1, 1]}
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 1, 3)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Calibrating Side Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 1, 0)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Calibrating Done!
RECEIVED PRi: ANex
Data from Android: ['ex']
android_recv_queue: ['ex']
Pop Andoird Command: ex
arduino_recv_queue: []
Start EXPLORATION
SENDING AN{"exploreMap":"f8007000e0000000000000000000000000000000000000000000000000000000000000000003","obstacleMap":"000","robotPosition":"1,18,0","arrowPosition":""}

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 4, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 4, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 4, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 3
Arrow Not Possible @ Robot Position: (1, 1, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {48: 0, 34: 0, 35: 0, 36: 0, 46: 0, 38: 0, 37: 0, 63: 0, 61: 0, 62: 0, 47: 0}
RECEIVED PRi: ARQCV1: 0.04,10.35
Data from Arduino: ['QCV1: 0.04,10.35']
arduino_recv_queue: ['QCV1: 0.04,10.35']
RECEIVED PRi: ARQCV2: 0.02,10.32
ARQCV3: 0.34,77.72
ARQCV4: 0.63,54.46
ARQCV5: 0.22,38.77
ARQCV6: 0.12,58.27
Data from Arduino: ['QCV2: 0.02,10.32\n', 'QCV3: 0.34,77.72\n', 'QCV4: 0.63,54.46\n', 'QCV5: 0.22,38.77\n', 'QCV6: 0.12,58.27']
arduino_recv_queue: ['QCV1: 0.04,10.35', 'QCV2: 0.02,10.32\n', 'QCV3: 0.34,77.72\n', 'QCV4: 0.63,54.46\n', 'QCV5: 0.22,38.77\n', 'QCV6: 0.12,58.27']
SENDING AN{"exploreMap":"f8007000ff01c003800000000000000000000000000000000000000000000000000000000003","obstacleMap":"00000","robotPosition":"1,18,0","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (-1, 2, -1, 1, 0, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 3, 1, 3, 2, 3)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 2, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01c003800000000000000000000000000000000000000000000000000000000003","obstacleMap":"00000","robotPosition":"1,17,0","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01c003800000000000000000000000000000000000000000000000000000000003","obstacleMap":"00000","robotPosition":"1,2,0","ARrobotPosition":"1,17,0","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
RECEIVED PRi: ARQCV1: 0.02,10.59
ARQCV2: 0.01,10.29
ARQCV3: 0.13,55.04
ARQCV4: 0.28,51.20
ARQCV5: 0.07,38.47
ARQCV6: 0.64,114.49
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.02,10.59\n', 'QCV2: 0.01,10.29\n', 'QCV3: 0.13,55.04\n', 'QCV4: 0.28,51.20\n', 'QCV5: 0.07,38.47\n', 'QCV6: 0.64,114.49']
ie
arduino_recv_queue: ['QCV1: 0.02,10.59\n', 'QCV2: 0.01,10.29\n', 'QCV3: 0.13,55.04\n', 'QCV4: 0.28,51.20\n', 'QCV5: 0.07,38.47\n', 'QCV6: 0.64,114.49']
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 5, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 5, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (2, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 5, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 3, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 4
Arrow Not Possible @ Robot Position: (1, 2, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 76: 0, 77: 0, 78: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03800700000000000000000000000000000000000000000000000000000003","obstacleMap":"0000000","robotPosition":"1,17,0","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (-1, 3, -1, 2, 1, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 4, 1, 4, 2, 4)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 3, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03800700000000000000000000000000000000000000000000000000000003","obstacleMap":"0000000","robotPosition":"1,16,0","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03800700000000000000000000000000000000000000000000000000000003","obstacleMap":"0000000","robotPosition":"1,3,0","ARrobotPosition":"1,16,0","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 5, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 5, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 5, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (2, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 5
Arrow Not Possible @ Robot Position: (1, 3, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 91: 0, 92: 0, 93: 0}
RECEIVED PRi: ARQCV1: 0.01,10.65
Data from Arduino: ['QCV1: 0.01,10.65']
arduino_recv_queue: ['QCV1: 0.01,10.65']
RECEIVED PRi: ARQCV2: 0.02,10.54
ARQCV3: 0.03,42.76
ARQCV4: 0.36,45.41
ARQCV5: 0.12,37.29
ARQCV6: 0.09,97.08
Data from Arduino: ['QCV2: 0.02,10.54\n', 'QCV3: 0.03,42.76\n', 'QCV4: 0.36,45.41\n', 'QCV5: 0.12,37.29\n', 'QCV6: 0.09,97.08']
arduino_recv_queue: ['QCV1: 0.01,10.65', 'QCV2: 0.02,10.54\n', 'QCV3: 0.03,42.76\n', 'QCV4: 0.36,45.41\n', 'QCV5: 0.12,37.29\n', 'QCV6: 0.09,97.08']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07000e0000000000000000000000000000000000000000000000000003","obstacleMap":"000000000","robotPosition":"1,16,0","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (-1, 4, -1, 3, 2, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 5, 1, 5, 2, 5)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 4, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07000e0000000000000000000000000000000000000000000000000003","obstacleMap":"000000000","robotPosition":"1,15,0","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07000e0000000000000000000000000000000000000000000000000003","obstacleMap":"000000000","robotPosition":"1,4,0","ARrobotPosition":"1,15,0","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,1,
Data from Arduino: ['1,1,0,0,0,1,']
arduino_recv_queue: ['1,1,0,0,0,1,']
RECEIVED PRi: ARQCV1: 0.02,10.70
ARQCV2: 0.01,10.56
ARQCV3: 0.04,34.91
ARQCV4: 0.52,32.61
ARQCV5: 0.13,35.95
ARQCV6: 0.06,22.41
RECEIVED ARDUINO 1,1,0,0,0,1,
Data from Arduino: ['QCV1: 0.02,10.70\n', 'QCV2: 0.01,10.56\n', 'QCV3: 0.04,34.91\n', 'QCV4: 0.52,32.61\n', 'QCV5: 0.13,35.95\n', 'QCV6: 0.06,22.41']
Sensor 0
arduino_recv_queue: ['QCV1: 0.02,10.70\n', 'QCV2: 0.01,10.56\n', 'QCV3: 0.04,34.91\n', 'QCV4: 0.52,32.61\n', 'QCV5: 0.13,35.95\n', 'QCV6: 0.06,22.41']
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 7, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 7, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (2, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 7, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 6
Arrow Not Possible @ Robot Position: (1, 4, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {106: 0, 107: 0, 108: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07000e001c000000000000000000000000000000000000000000000003","obstacleMap":"0000000000","robotPosition":"1,15,0","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (-1, 5, -1, 4, 3, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 6, 1, 6, 2, 6)
North: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 4, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 0,6
Checking arrow @ 1,6
Arrow Not Possible @ Robot Position: (1, 4, 'EAST')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07000e001c000000000000000000000000000000000000000000000003","obstacleMap":"0000000000","robotPosition":"1,15,1","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07000e001c000000000000000000000000000000000000000000000003","obstacleMap":"0000000000","robotPosition":"1,4,1","ARrobotPosition":"1,15,1","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,1,0,0,4,
Data from Arduino: ['0,0,1,0,0,4,']
arduino_recv_queue: ['0,0,1,0,0,4,']
RECEIVED ARDUINO 0,0,1,0,0,4,
RECEIVED PRi: ARQCV1: 0.17,43.81
ARQCV2: 0.12,33.25
ARQCV3: 0.01,9.19
ARQCV4: 1.02,99.22
ARQCV5: 0.64,48.37
ARQCV6: 0.07,32.94
Sensor 0
Data from Arduino: ['QCV1: 0.17,43.81\n', 'QCV2: 0.12,33.25\n', 'QCV3: 0.01,9.19\n', 'QCV4: 1.02,99.22\n', 'QCV5: 0.64,48.37\n', 'QCV6: 0.07,32.94']
No Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.17,43.81\n', 'QCV2: 0.12,33.25\n', 'QCV3: 0.01,9.19\n', 'QCV4: 1.02,99.22\n', 'QCV5: 0.64,48.37\n', 'QCV6: 0.07,32.94']
Current Sesnsor Reading: x, y, count, total: (0, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (0, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 7, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (2, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 7, 0.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 5, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 5, 4.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 4, 0.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 3, 0.0, 4.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 0, 0, 4)
perm
br
ie
br
--------------------------------------------------
updated_cells (sensor_readings): {79: 1}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800e001c000000000000000000000000000000000000000000000003","obstacleMap":"0000000040","robotPosition":"1,15,1","arrowPosition":""}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 4, 0)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 4, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800e001c000000000000000000000000000000000000000000000003","obstacleMap":"0000000040","robotPosition":"1,15,0","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800e001c000000000000000000000000000000000000000000000003","obstacleMap":"0000000040","robotPosition":"1,4,0","ARrobotPosition":"1,15,0","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800e001c000000000000000000000000000000000000000000000003","obstacleMap":"0000000040","robotPosition":"1,15,0","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (-1, 5, -1, 4, 3, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 6, 1, 6, 2, 6)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 5, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800e001c000000000000000000000000000000000000000000000003","obstacleMap":"0000000040","robotPosition":"1,14,0","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800e001c000000000000000000000000000000000000000000000003","obstacleMap":"0000000040","robotPosition":"1,5,0","ARrobotPosition":"1,14,0","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,1,
Data from Arduino: ['1,1,0,0,0,1,']
arduino_recv_queue: ['1,1,0,0,0,1,']
RECEIVED ARDUINO 1,1,0,0,0,1,
RECEIVED PRi: ARQCV1: 0.01,10.97
ARQCV2: 0.01,10.85
ARQCV3: 0.15,29.57
ARQCV4: 0.24,41.33
ARQCV5: 0.05,36.22
ARQCV6: 0.02,23.84
Sensor 0
Data from Arduino: ['QCV1: 0.01,10.97\n', 'QCV2: 0.01,10.85\n', 'QCV3: 0.15,29.57\n', 'QCV4: 0.24,41.33\n', 'QCV5: 0.05,36.22\n', 'QCV6: 0.02,23.84']
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.01,10.97\n', 'QCV2: 0.01,10.85\n', 'QCV3: 0.15,29.57\n', 'QCV4: 0.24,41.33\n', 'QCV5: 0.05,36.22\n', 'QCV6: 0.02,23.84']
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (0, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 8, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 7, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 8, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 8, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 9
Arrow Not Possible @ Robot Position: (1, 5, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {121: 0, 122: 0, 123: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800e001c003800000000000000000000000000000000000000000003","obstacleMap":"00000000400","robotPosition":"1,14,0","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (-1, 6, -1, 5, 4, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 7, 1, 7, 2, 7)
North: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 5, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 0,7
Checking arrow @ 1,7
Arrow Not Possible @ Robot Position: (1, 5, 'EAST')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800e001c003800000000000000000000000000000000000000000003","obstacleMap":"00000000400","robotPosition":"1,14,1","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800e001c003800000000000000000000000000000000000000000003","obstacleMap":"00000000400","robotPosition":"1,5,1","ARrobotPosition":"1,14,1","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,1,0,5,
Data from Arduino: ['0,0,0,1,0,5,']
arduino_recv_queue: ['0,0,0,1,0,5,']
RECEIVED ARDUINO 0,0,0,1,0,5,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 7, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (0, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 8, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 7, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (2, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 8, 0.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 6, 0.0, 2.0)
br
Current Sesnsor Reading: x, y, count, total: (5, 6, 1, 2)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 6, 1.0, 2.0)
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 5, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 5, 8.0, 8.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 4, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 4, 0.0, 6.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 1, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (2, 0, 0, 4)
perm
ie
br
--------------------------------------------------
updated_cells (sensor_readings): {96: 1, 94: 0, 95: 0}
RECEIVED PRi: ARQCV1: 0.16,45.00
Data from Arduino: ['QCV1: 0.16,45.00']
arduino_recv_queue: ['QCV1: 0.16,45.00']
RECEIVED PRi: ARQCV2: 0.05,33.02
ARQCV3: 0.08,28.00
ARQCV4: 0.01,8.74
ARQCV5: 0.86,45.41
ARQCV6: 0.08,41.62
Data from Arduino: ['QCV2: 0.05,33.02\n', 'QCV3: 0.08,28.00\n', 'QCV4: 0.01,8.74\n', 'QCV5: 0.86,45.41\n', 'QCV6: 0.08,41.62']
arduino_recv_queue: ['QCV1: 0.16,45.00', 'QCV2: 0.05,33.02\n', 'QCV3: 0.08,28.00\n', 'QCV4: 0.01,8.74\n', 'QCV5: 0.86,45.41\n', 'QCV6: 0.08,41.62']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01c003800000000000000000000000000000000000000000003","obstacleMap":"000000004100","robotPosition":"1,14,1","arrowPosition":""}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 5, 0)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 5, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01c003800000000000000000000000000000000000000000003","obstacleMap":"000000004100","robotPosition":"1,14,0","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800fc01c003800000000000000000000000000000000000000000003","obstacleMap":"000000004100","robotPosition":"1,5,0","ARrobotPosition":"1,14,0","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01c003800000000000000000000000000000000000000000003","obstacleMap":"000000004100","robotPosition":"1,14,0","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (-1, 6, -1, 5, 4, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 7, 1, 7, 2, 7)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 6, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01c003800000000000000000000000000000000000000000003","obstacleMap":"000000004100","robotPosition":"1,13,0","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800fc01c003800000000000000000000000000000000000000000003","obstacleMap":"000000004100","robotPosition":"1,6,0","ARrobotPosition":"1,13,0","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,2,0,0,0,
Data from Arduino: ['1,1,2,0,0,0,']
arduino_recv_queue: ['1,1,2,0,0,0,']
RECEIVED ARDUINO 1,1,2,0,0,0,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 8, 0, 4)
RECEIVED PRi: ARQCV1: 0.01,11.03
ARQCV2: 0.02,11.09
ARQCV3: 0.02,20.22
ARQCV4: 0.24,31.52
ARQCV5: 0.04,37.29
ARQCV6: 0.22,92.23
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 8, 0.0, 8.0)
Data from Arduino: ['QCV1: 0.01,11.03\n', 'QCV2: 0.02,11.09\n', 'QCV3: 0.02,20.22\n', 'QCV4: 0.24,31.52\n', 'QCV5: 0.04,37.29\n', 'QCV6: 0.22,92.23']
Current Sesnsor Reading: x, y, count, total: (0, 9, 2.0, 2.0)
arduino_recv_queue: ['QCV1: 0.01,11.03\n', 'QCV2: 0.02,11.09\n', 'QCV3: 0.02,20.22\n', 'QCV4: 0.24,31.52\n', 'QCV5: 0.04,37.29\n', 'QCV6: 0.22,92.23']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 9, 2.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 8, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 9, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 8, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 9, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 7, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 12
Arrow Not Possible @ Robot Position: (1, 6, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {112: 0, 113: 0, 136: 1, 137: 0, 138: 0, 109: 0, 110: 0, 111: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03800700000000000000000000000000000000000000003","obstacleMap":"00000000410010","robotPosition":"1,13,0","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (-1, 7, -1, 6, 5, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 8, 1, 8, 2, 8)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 7, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03800700000000000000000000000000000000000000003","obstacleMap":"00000000410010","robotPosition":"1,12,0","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800fc01fe03800700000000000000000000000000000000000000003","obstacleMap":"00000000410010","robotPosition":"1,7,0","ARrobotPosition":"1,12,0","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,1,0,0,0,
Data from Arduino: ['1,1,1,0,0,0,']
arduino_recv_queue: ['1,1,1,0,0,0,']
RECEIVED ARDUINO 1,1,1,0,0,0,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 9, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 9, 6.0, 6.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 9, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 9, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (2, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 8, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 8, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 13
Arrow Not Possible @ Robot Position: (1, 7, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {128: 0, 152: 0, 153: 0, 124: 0, 125: 0, 126: 0, 127: 0}
RECEIVED PRi: ARQCV1: 0.02,11.27
Data from Arduino: ['QCV1: 0.02,11.27']
arduino_recv_queue: ['QCV1: 0.02,11.27']
RECEIVED PRi: ARQCV2: 0.02,11.27
ARQCV3: 0.01,10.16
ARQCV4: 0.02,29.24
ARQCV5: 0.01,32.39
ARQCV6: 0.09,51.97
Data from Arduino: ['QCV2: 0.02,11.27\n', 'QCV3: 0.01,10.16\n', 'QCV4: 0.02,29.24\n', 'QCV5: 0.01,32.39\n', 'QCV6: 0.09,51.97']
arduino_recv_queue: ['QCV1: 0.02,11.27', 'QCV2: 0.02,11.27\n', 'QCV3: 0.01,10.16\n', 'QCV4: 0.02,29.24\n', 'QCV5: 0.01,32.39\n', 'QCV6: 0.09,51.97']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc0700060000000000000000000000000000000000003","obstacleMap":"0000000041000080","robotPosition":"1,12,0","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (-1, 8, -1, 7, 6, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 9, 1, 9, 2, 9)
North: False
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 7, 1)
cells_left: [1, 2]
cells_right: [0, 0]
Checking arrow @ 0,9
Checking arrow @ 1,9
Mark Arrow Taken @ (0, 9, 'NORTH')
Mark Arrow Taken @ (1, 9, 'NORTH')
Arrow Possible @ Robot Position: (1, 7, 'EAST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP01
Data from RPi: ['01']
rpi_recv_queue: ['01']
RECEIVED RPI 01
Recognizing Image taken with robot position @ (1, 7, 'EAST')
Check Arrow @ (0, 9, 'NORTH')
Check Arrow @ (1, 9, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc0700060000000000000000000000000000000000003","obstacleMap":"0000000041000080","robotPosition":"1,12,1","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc0700060000000000000000000000000000000000003","obstacleMap":"0000000041000080","robotPosition":"1,7,1","ARrobotPosition":"1,12,1","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,0,
Data from Arduino: ['1,0,0,0,0,0,']
arduino_recv_queue: ['1,0,0,0,0,0,']
RECEIVED ARDUINO 1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
RECEIVED PRi: ARQCV1: 0.01,9.66
ARQCV2: 0.05,29.05
ARQCV3: 3.39,88.65
ARQCV4: 4.28,65.00
ARQCV5: 0.02,30.14
ARQCV6: 0.08,58.27
Current Sesnsor Reading: x, y, count, total: (0, 9, 4, 4)
Data from Arduino: ['QCV1: 0.01,9.66\n', 'QCV2: 0.05,29.05\n', 'QCV3: 3.39,88.65\n', 'QCV4: 4.28,65.00\n', 'QCV5: 0.02,30.14\n', 'QCV6: 0.08,58.27']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 9, 10.0, 10.0)
arduino_recv_queue: ['QCV1: 0.01,9.66\n', 'QCV2: 0.05,29.05\n', 'QCV3: 3.39,88.65\n', 'QCV4: 4.28,65.00\n', 'QCV5: 0.02,30.14\n', 'QCV6: 0.08,58.27']
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 9, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (2, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 0.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 8, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 8, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 7, 0.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 6, 0.0, 4.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (2, 3, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (2, 2, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (2, 1, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 14
Checking arrow @ 0,9
Checking arrow @ 1,9
Arrow Not Possible @ Robot Position: (1, 7, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc0700060000000000000000000000000000000000003","obstacleMap":"0000000041000080","robotPosition":"1,12,1","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (0, 9, 1, 9, 2, 9)
North: False
Checking Free towards FORWARD
Cell to check : (3, 8, 3, 7, 3, 6)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 1,9
Checking arrow @ 2,9
Arrow Not Possible @ Robot Position: (2, 7, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc0700060000000000000000000000000000000000003","obstacleMap":"0000000041000080","robotPosition":"2,12,1","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc0700060000000000000000000000000000000000003","obstacleMap":"0000000041000080","robotPosition":"2,7,1","ARrobotPosition":"2,12,1","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,2,1,
Data from Arduino: ['0,0,0,0,2,1,']
arduino_recv_queue: ['0,0,0,0,2,1,']
RECEIVED ARDUINO 0,0,0,0,2,1,
RECEIVED PRi: ARQCV1: 0.10,29.95
ARQCV2: 0.02,30.14
ARQCV3: 46.69,52.24
ARQCV4: 1.10,135.43
ARQCV5: 0.02,18.93
ARQCV6: 0.04,23.30
Sensor 0
No Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.10,29.95\n', 'QCV2: 0.02,30.14\n', 'QCV3: 46.69,52.24\n', 'QCV4: 1.10,135.43\n', 'QCV5: 0.02,18.93\n', 'QCV6: 0.04,23.30']
Current Sesnsor Reading: x, y, count, total: (1, 9, 0, 4)
arduino_recv_queue: ['QCV1: 0.10,29.95\n', 'QCV2: 0.02,30.14\n', 'QCV3: 46.69,52.24\n', 'QCV4: 1.10,135.43\n', 'QCV5: 0.02,18.93\n', 'QCV6: 0.04,23.30']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 9, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (1, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 8, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 7, 0.0, 3.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 6, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 6, 3.0, 4.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 15
Checking arrow @ 1,9
Checking arrow @ 2,9
Arrow Not Possible @ Robot Position: (2, 7, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {154: 0, 139: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc0780070000000000000000000000000000000000003","obstacleMap":"0000000041000080","robotPosition":"2,12,1","arrowPosition":""}

Checking Free towards LEFT
Cell to check : (1, 9, 2, 9, 3, 9)
North: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (2, 7, 0)
cells_left: [0, 1]
cells_right: [0, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 0,6
Checking arrow @ 0,7
Arrow Not Possible @ Robot Position: (2, 7, 'NORTH')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 0,7
Checking arrow @ 0,8
Arrow Not Possible @ Robot Position: (2, 8, 'NORTH')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc0780070000000000000000000000000000000000003","obstacleMap":"0000000041000080","robotPosition":"2,11,0","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc0780070000000000000000000000000000000000003","obstacleMap":"0000000041000080","robotPosition":"2,8,0","ARrobotPosition":"2,11,0","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR2,1,2,2,2,5,
Data from Arduino: ['2,1,2,2,2,5,']
arduino_recv_queue: ['2,1,2,2,2,5,']
RECEIVED ARDUINO 2,1,2,2,2,5,
RECEIVED PRi: ARQCV1: 0.01,21.17
ARQCV2: 0.01,10.97
ARQCV3: 0.01,21.48
ARQCV4: 0.01,20.79
ARQCV5: 0.09,22.11
ARQCV6: 0.09,40.97
Data from Arduino: ['QCV1: 0.01,21.17\n', 'QCV2: 0.01,10.97\n', 'QCV3: 0.01,21.48\n', 'QCV4: 0.01,20.79\n', 'QCV5: 0.09,22.11\n', 'QCV6: 0.09,40.97']
arduino_recv_queue: ['QCV1: 0.01,21.17\n', 'QCV2: 0.01,10.97\n', 'QCV3: 0.01,21.48\n', 'QCV4: 0.01,20.79\n', 'QCV5: 0.09,22.11\n', 'QCV6: 0.09,40.97']
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 7, 0, 4)
perm
ie
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 9, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 9, 14.0, 14.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 11, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 11, 2.0, 2.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (3, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 2.0, 2.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 2.0, 2.0)
br
--------------------------------------------------
Total move counts: 17
Checking arrow @ 0,7
Checking arrow @ 0,8
Arrow Not Possible @ Robot Position: (2, 8, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {144: 1, 167: 1, 168: 1, 169: 1, 140: 0, 141: 0, 142: 0, 143: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc07000e000000000000000000000000000000003","obstacleMap":"00000000410000808e","robotPosition":"2,11,0","arrowPosition":""}

Robot in efficiency limit....
Checking Free towards FORWARD
Cell to check : (1, 10, 2, 10, 3, 10)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 0,8
Checking arrow @ 0,9
Mark Arrow Taken @ (0, 8, 'WEST')
Mark Arrow Taken @ (0, 9, 'WEST')
Arrow Possible @ Robot Position: (2, 9, 'NORTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (2, 9, 'NORTH')
Check Arrow @ (0, 8, 'WEST')
Check Arrow @ (0, 9, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc07000e000000000000000000000000000000003","obstacleMap":"00000000410000808e","robotPosition":"2,10,0","arrowPosition":""}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc07000e000000000000000000000000000000003","obstacleMap":"00000000410000808e","robotPosition":"2,9,0","ARrobotPosition":"2,10,0","arrowPosition":"","ARarrowPosition":""}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR2,1,1,1,1,0,
Data from Arduino: ['2,1,1,1,1,0,']
arduino_recv_queue: ['2,1,1,1,1,0,']
RECEIVED ARDUINO 2,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
RECEIVED PRi: ARQCV1: 0.04,21.69
ARQCV2: 0.01,11.00
ARQCV3: 0.01,11.34
ARQCV4: 0.01,10.97
ARQCV5: 0.01,11.70
ARQCV6: 0.96,87.95
Current Sesnsor Reading: x, y, count, total: (0, 8, 0, 4)
Data from Arduino: ['QCV1: 0.04,21.69\n', 'QCV2: 0.01,11.00\n', 'QCV3: 0.01,11.34\n', 'QCV4: 0.01,10.97\n', 'QCV5: 0.01,11.70\n', 'QCV6: 0.96,87.95']
perm
arduino_recv_queue: ['QCV1: 0.04,21.69\n', 'QCV2: 0.01,11.00\n', 'QCV3: 0.01,11.34\n', 'QCV4: 0.01,10.97\n', 'QCV5: 0.01,11.70\n', 'QCV6: 0.96,87.95']
ie
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 4.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 11, 6.0, 6.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 11, 6.0, 6.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 6.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (6, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 10, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 10, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (8, 10, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 18
Checking arrow @ 0,8
Checking arrow @ 0,9
Arrow Not Possible @ Robot Position: (2, 9, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {151: 1, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc0ff80e000000000000000000000000000000003","obstacleMap":"0000000041000080c038","robotPosition":"2,10,0","arrowPosition":""}

Robot in efficiency limit....
Checking Free towards FORWARD
Cell to check : (1, 11, 2, 11, 3, 11)
North: False
Checking Free towards LEFT
Cell to check : (0, 10, 0, 9, 8, 0)
West: False
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (2, 9, 1)
cells_left: [1, 2]
cells_right: [1, 2]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 1,11
Checking arrow @ 2,11
Mark Arrow Taken @ (1, 11, 'NORTH')
Mark Arrow Taken @ (2, 11, 'NORTH')
Arrow Possible @ Robot Position: (2, 9, 'EAST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP01
Data from RPi: ['01']
rpi_recv_queue: ['01']
RECEIVED RPI 01
Recognizing Image taken with robot position @ (2, 9, 'EAST')
Check Arrow @ (1, 11, 'NORTH')
Check Arrow @ (2, 11, 'NORTH')
Detected Arrow @ (2, 11, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc0ff80e000000000000000000000000000000003","obstacleMap":"0000000041000080c038","robotPosition":"2,10,1","arrowPosition":"2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc0ff80e000000000000000000000000000000003","obstacleMap":"0000000041000080c038","robotPosition":"2,9,1","ARrobotPosition":"2,10,1","arrowPosition":"11,2,0","ARarrowPosition":"2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,1,
Data from Arduino: ['1,1,0,0,0,1,']
arduino_recv_queue: ['1,1,0,0,0,1,']
RECEIVED ARDUINO 1,1,0,0,0,1,
RECEIVED PRi: ARQCV1: 0.01,11.12
ARQCV2: 0.02,11.12
ARQCV3: 0.24,54.46
ARQCV4: 0.35,45.41
ARQCV5: 0.17,33.96
ARQCV6: 0.01,24.58
Data from Arduino: ['QCV1: 0.01,11.12\n', 'QCV2: 0.02,11.12\n', 'QCV3: 0.24,54.46\n', 'QCV4: 0.35,45.41\n', 'QCV5: 0.17,33.96\n', 'QCV6: 0.01,24.58']
arduino_recv_queue: ['QCV1: 0.01,11.12\n', 'QCV2: 0.02,11.12\n', 'QCV3: 0.24,54.46\n', 'QCV4: 0.35,45.41\n', 'QCV5: 0.17,33.96\n', 'QCV6: 0.01,24.58']
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 11, 10.0, 10.0)
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 10.0, 10.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 9, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 9, 0.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 8, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 5.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 19
Checking arrow @ 1,11
Checking arrow @ 2,11
Arrow Not Possible @ Robot Position: (2, 9, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc0ff80e000000000000000000000000000000003","obstacleMap":"0000000041000080c038","robotPosition":"2,10,1","arrowPosition":"2,8,0"}

Checking Free towards LEFT
Cell to check : (1, 11, 2, 11, 3, 11)
North: False
Checking Free towards FORWARD
Cell to check : (4, 10, 4, 9, 4, 8)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 2,11
Checking arrow @ 3,11
Mark Arrow Taken @ (2, 11, 'NORTH')
Mark Arrow Taken @ (3, 11, 'NORTH')
Arrow Possible @ Robot Position: (3, 9, 'EAST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP10
Data from RPi: ['10']
rpi_recv_queue: ['10']
RECEIVED RPI 10
Recognizing Image taken with robot position @ (3, 9, 'EAST')
Check Arrow @ (2, 11, 'NORTH')
Detected Arrow @ (2, 11, 'NORTH')
Check Arrow @ (3, 11, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc0ff80e000000000000000000000000000000003","obstacleMap":"0000000041000080c038","robotPosition":"3,10,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc0ff80e000000000000000000000000000000003","obstacleMap":"0000000041000080c038","robotPosition":"3,9,1","ARrobotPosition":"3,10,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,1,
Data from Arduino: ['1,0,0,0,0,1,']
arduino_recv_queue: ['1,0,0,0,0,1,']
RECEIVED PRi: ARQCV1: 0.03,11.37
ARQCV2: 0.07,33.25
ARQCV3: 0.09,49.80
ARQCV4: 0.32,43.81
RECEIVED ARDUINO 1,0,0,0,0,1,
Data from Arduino: ['QCV1: 0.03,11.37\n', 'QCV2: 0.07,33.25\n', 'QCV3: 0.09,49.80\n', 'QCV4: 0.32,43.81']
Sensor 0
arduino_recv_queue: ['QCV1: 0.03,11.37\n', 'QCV2: 0.07,33.25\n', 'QCV3: 0.09,49.80\n', 'QCV4: 0.32,43.81']
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 11, 10.0, 10.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 10, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 9, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 8, 0.0, 3.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 2]
--------------------------------------------------
Total move counts: 20
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 9, 1)
cells_left: [1, 2]
cells_right: [0, 0]
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (3, 9, 1)
Status of cells surrounding robot: {0: [0, 0, 0], 1: [0, 0, 0], 2: [0, 0, 0], 3: [1, 1, 0]}
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARQCV5: 0.06,37.87
Data from Arduino: ['QCV5: 0.06,37.87']
arduino_recv_queue: ['QCV5: 0.06,37.87']
RECEIVED PRi: ARQCV6: 0.01,24.53
Data from Arduino: ['QCV6: 0.01,24.53']
arduino_recv_queue: ['QCV6: 0.01,24.53']
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (3, 9, 0)
cells_left: [0, 0]
cells_right: [0, 1]
Calibrating Side Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (3, 9, 1)
cells_left: [1, 2]
cells_right: [0, 0]
Checking arrow @ 2,11
Checking arrow @ 3,11
Arrow Not Possible @ Robot Position: (3, 9, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {185: 0, 170: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc0ff80f000200000000000000000000000000003","obstacleMap":"0000000041000080c038","robotPosition":"3,10,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (2, 11, 3, 11, 4, 11)
North: False
Checking Free towards FORWARD
Cell to check : (5, 10, 5, 9, 5, 8)
East: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (3, 9, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 5,10
Checking arrow @ 5,9
Arrow Not Possible @ Robot Position: (3, 9, 'SOUTH')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc0ff80f000200000000000000000000000000003","obstacleMap":"0000000041000080c038","robotPosition":"3,10,2","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07800fc01fe03fc07fc0ff80f000200000000000000000000000000003","obstacleMap":"0000000041000080c038","robotPosition":"3,9,2","ARrobotPosition":"3,10,2","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,1,
Data from Arduino: ['0,0,0,0,0,1,']
arduino_recv_queue: ['0,0,0,0,0,1,']
RECEIVED ARDUINO 0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (6, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 10, 0.0, 5.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (6, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 8, 0.0, 5.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 7, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (4, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 6, 0.0, 10.0)
br
Current Sesnsor Reading: x, y, count, total: (4, 5, 1, 2)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 5, 1.0, 2.0)
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 6, 0.0, 2.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 6, 0.0, 2.0)
perm
br
Sensor 5
Unacceptable Reading
--------------------------------------------------
updated_cells (sensor_readings): {80: 1}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07c00fc01fe03fc07fc0ff80f000200000000000000000000000000003","obstacleMap":"0000000060800040601c","robotPosition":"3,10,2","arrowPosition":"2,8,0;2,8,0"}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.09,40.98
Data from Arduino: ['QCV1: 0.09,40.98']
arduino_recv_queue: ['QCV1: 0.09,40.98']
RECEIVED PRi: ARQCV2: 0.02,33.49
Data from Arduino: ['QCV2: 0.02,33.49']
arduino_recv_queue: ['QCV2: 0.02,33.49']
RECEIVED PRi: ARQCV3: 0.02,29.57
ARQCV4: 0.03,28.00
ARQCV5: 0.12,40.31
ARQCV6: 0.05,26.36
Data from Arduino: ['QCV3: 0.02,29.57\n', 'QCV4: 0.03,28.00\n', 'QCV5: 0.12,40.31\n', 'QCV6: 0.05,26.36']
arduino_recv_queue: ['QCV3: 0.02,29.57\n', 'QCV4: 0.03,28.00\n', 'QCV5: 0.12,40.31\n', 'QCV6: 0.05,26.36']
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (3, 9, 1)
cells_left: [1, 2]
cells_right: [0, 0]
Checking arrow @ 2,11
Checking arrow @ 3,11
Arrow Not Possible @ Robot Position: (3, 9, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07c00fc01fe03fc07fc0ff80f000200000000000000000000000000003","obstacleMap":"0000000060800040601c","robotPosition":"3,10,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07c00fc01fe03fc07fc0ff80f000200000000000000000000000000003","obstacleMap":"0000000060800040601c","robotPosition":"3,9,1","ARrobotPosition":"3,10,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07c00fc01fe03fc07fc0ff80f000200000000000000000000000000003","obstacleMap":"0000000060800040601c","robotPosition":"3,10,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (2, 11, 3, 11, 4, 11)
North: False
Checking Free towards FORWARD
Cell to check : (5, 10, 5, 9, 5, 8)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 3,11
Checking arrow @ 4,11
Arrow Not Possible @ Robot Position: (4, 9, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07c00fc01fe03fc07fc0ff80f000200000000000000000000000000003","obstacleMap":"0000000060800040601c","robotPosition":"4,10,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07c00fc01fe03fc07fc0ff80f000200000000000000000000000000003","obstacleMap":"0000000060800040601c","robotPosition":"4,9,1","ARrobotPosition":"4,10,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,1,
Data from Arduino: ['1,0,0,0,0,1,']
arduino_recv_queue: ['1,0,0,0,0,1,']
RECEIVED ARDUINO 1,0,0,0,0,1,
RECEIVED PRi: ARQCV1: 0.01,10.35
ARQCV2: 0.17,40.31
ARQCV3: 0.20,45.41
ARQCV4: 0.05,27.20
ARQCV5: 0.04,30.94
ARQCV6: 0.01,18.90
Sensor 0
Data from Arduino: ['QCV1: 0.01,10.35\n', 'QCV2: 0.17,40.31\n', 'QCV3: 0.20,45.41\n', 'QCV4: 0.05,27.20\n', 'QCV5: 0.04,30.94\n', 'QCV6: 0.01,18.90']
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.01,10.35\n', 'QCV2: 0.17,40.31\n', 'QCV3: 0.20,45.41\n', 'QCV4: 0.05,27.20\n', 'QCV5: 0.04,30.94\n', 'QCV6: 0.01,18.90']
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 14.0, 14.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 12, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 10, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (7, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 8, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (7, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 3.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 1, 2]
--------------------------------------------------
Total move counts: 25
Checking Whether Calibration Possible...
Robot Position @ (4, 9, 1)
cells_left: [1, 2]
cells_right: [0, 0]
Checking arrow @ 3,11
Checking arrow @ 4,11
Arrow Not Possible @ Robot Position: (4, 9, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {186: 0, 171: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07c00fc01fe03fc07fc0ff80f800300000000000000000000000000003","obstacleMap":"0000000060800040601c0","robotPosition":"4,10,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (3, 11, 4, 11, 5, 11)
North: False
Checking Free towards FORWARD
Cell to check : (6, 10, 6, 9, 6, 8)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 4,11
Checking arrow @ 5,11
Arrow Not Possible @ Robot Position: (5, 9, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07c00fc01fe03fc07fc0ff80f800300000000000000000000000000003","obstacleMap":"0000000060800040601c0","robotPosition":"5,10,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07c00fc01fe03fc07fc0ff80f800300000000000000000000000000003","obstacleMap":"0000000060800040601c0","robotPosition":"5,9,1","ARrobotPosition":"5,10,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,2,2,0,
Data from Arduino: ['0,0,0,2,2,0,']
arduino_recv_queue: ['0,0,0,2,2,0,']
RECEIVED ARDUINO 0,0,0,2,2,0,
RECEIVED PRi: ARQCV1: 0.39,119.19
ARQCV2: 0.15,45.82
ARQCV3: 0.48,68.15
ARQCV4: 0.02,18.22
ARQCV5: 0.02,19.77
ARQCV6: 0.15,69.66
Sensor 0
Data from Arduino: ['QCV1: 0.39,119.19\n', 'QCV2: 0.15,45.82\n', 'QCV3: 0.48,68.15\n', 'QCV4: 0.02,18.22\n', 'QCV5: 0.02,19.77\n', 'QCV6: 0.15,69.66']
No Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.39,119.19\n', 'QCV2: 0.15,45.82\n', 'QCV3: 0.48,68.15\n', 'QCV4: 0.02,18.22\n', 'QCV5: 0.02,19.77\n', 'QCV6: 0.15,69.66']
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 12, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 3.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 4.0, 4.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 2.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (6, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 26
Checking Whether Calibration Possible...
Robot Position @ (5, 9, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 4,11
Checking arrow @ 5,11
Arrow Not Possible @ Robot Position: (5, 9, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {129: 1, 82: 0, 187: 0, 172: 0, 97: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80fc00380000000000000000000000000003","obstacleMap":"00000000604000180c0380","robotPosition":"5,10,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (4, 11, 5, 11, 6, 11)
North: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (5, 9, 0)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 3,8
Checking arrow @ 3,9
Arrow Not Possible @ Robot Position: (5, 9, 'NORTH')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 3,9
Checking arrow @ 3,10
Arrow Not Possible @ Robot Position: (5, 10, 'NORTH')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80fc00380000000000000000000000000003","obstacleMap":"00000000604000180c0380","robotPosition":"5,9,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80fc00380000000000000000000000000003","obstacleMap":"00000000604000180c0380","robotPosition":"5,10,0","ARrobotPosition":"5,9,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,0,0,0,0,
Data from Arduino: ['0,1,0,0,0,0,']
arduino_recv_queue: ['0,1,0,0,0,0,']
RECEIVED ARDUINO 0,1,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 9, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 18.0, 18.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 13, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 13, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 13, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
RECEIVED PRi: ARQCV1: 0.05,42.39
ARQCV2: 0.01,11.00
ARQCV3: 0.08,59.30
ARQCV4: 0.82,48.37
ARQCV5: 0.21,39.98
ARQCV6: 0.03,51.70
Current Sesnsor Reading: x, y, count, total: (7, 11, 0, 4)
Data from Arduino: ['QCV1: 0.05,42.39\n', 'QCV2: 0.01,11.00\n', 'QCV3: 0.08,59.30\n', 'QCV4: 0.82,48.37\n', 'QCV5: 0.21,39.98\n', 'QCV6: 0.03,51.70']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 11, 0.0, 4.0)
arduino_recv_queue: ['QCV1: 0.05,42.39\n', 'QCV2: 0.01,11.00\n', 'QCV3: 0.08,59.30\n', 'QCV4: 0.82,48.37\n', 'QCV5: 0.21,39.98\n', 'QCV6: 0.03,51.70']
Current Sesnsor Reading: x, y, count, total: (8, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 11, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 11, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 11, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 11, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 11, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 28
Checking Whether Calibration Possible...
Robot Position @ (5, 10, 0)
cells_left: [0, 0]
cells_right: [1, 1]
Checking arrow @ 3,9
Checking arrow @ 3,10
Arrow Not Possible @ Robot Position: (5, 10, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {176: 0, 177: 0, 200: 0, 201: 0, 202: 0, 173: 0, 174: 0, 175: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0380070000000000000000000000003","obstacleMap":"00000000604000180c038000","robotPosition":"5,9,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (3, 11, 3, 10, 9, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 12, 5, 12, 6, 12)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 3,10
Checking arrow @ 3,11
Mark Arrow Taken @ (3, 10, 'WEST')
Mark Arrow Taken @ (3, 11, 'WEST')
Arrow Possible @ Robot Position: (5, 11, 'NORTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (5, 11, 'NORTH')
Check Arrow @ (3, 10, 'WEST')
Check Arrow @ (3, 11, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0380070000000000000000000000003","obstacleMap":"00000000604000180c038000","robotPosition":"5,8,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0380070000000000000000000000003","obstacleMap":"00000000604000180c038000","robotPosition":"5,11,0","ARrobotPosition":"5,8,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,1,
Data from Arduino: ['0,0,0,0,0,1,']
arduino_recv_queue: ['0,0,0,0,0,1,']
RECEIVED ARDUINO 0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 10, 0.0, 2.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 14, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 14, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 14, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 29
Checking Whether Calibration Possible...
Robot Position @ (5, 11, 0)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 3,10
Checking arrow @ 3,11
Arrow Not Possible @ Robot Position: (5, 11, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {184: 0, 216: 0, 217: 0, 215: 0, 183: 0}
RECEIVED PRi: ARQCV1: 0.06,44.20
ARQCV2: 0.09,37.58
ARQCV3: 0.04,47.02
ARQCV4: 0.94,43.43
ARQCV5: 0.06,39.98
ARQCV6: 0.01,18.51
Data from Arduino: ['QCV1: 0.06,44.20\n', 'QCV2: 0.09,37.58\n', 'QCV3: 0.04,47.02\n', 'QCV4: 0.94,43.43\n', 'QCV5: 0.06,39.98\n', 'QCV6: 0.01,18.51']
arduino_recv_queue: ['QCV1: 0.06,44.20\n', 'QCV2: 0.09,37.58\n', 'QCV3: 0.04,47.02\n', 'QCV4: 0.94,43.43\n', 'QCV5: 0.06,39.98\n', 'QCV6: 0.01,18.51']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0f8007000e000000000000000000003","obstacleMap":"00000000604000180c0380000","robotPosition":"5,8,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (3, 12, 3, 11, 10, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 13, 5, 13, 6, 13)
North: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (5, 11, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 4,13
Checking arrow @ 5,13
Arrow Not Possible @ Robot Position: (5, 11, 'EAST')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0f8007000e000000000000000000003","obstacleMap":"00000000604000180c0380000","robotPosition":"5,8,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0f8007000e000000000000000000003","obstacleMap":"00000000604000180c0380000","robotPosition":"5,11,1","ARrobotPosition":"5,8,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,2,0,0,0,
Data from Arduino: ['0,0,2,0,0,0,']
arduino_recv_queue: ['0,0,2,0,0,0,']
RECEIVED ARDUINO 0,0,2,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 13, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
RECEIVED PRi: ARQCV1: 0.29,108.57
ARQCV2: 0.07,39.98
ARQCV3: 0.03,18.84
ARQCV4: 0.25,37.29
ARQCV5: 0.04,39.72
ARQCV6: 0.15,82.75
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 14, 0.0, 4.0)
Data from Arduino: ['QCV1: 0.29,108.57\n', 'QCV2: 0.07,39.98\n', 'QCV3: 0.03,18.84\n', 'QCV4: 0.25,37.29\n', 'QCV5: 0.04,39.72\n', 'QCV6: 0.15,82.75']
br
arduino_recv_queue: ['QCV1: 0.29,108.57\n', 'QCV2: 0.07,39.98\n', 'QCV3: 0.03,18.84\n', 'QCV4: 0.25,37.29\n', 'QCV5: 0.04,39.72\n', 'QCV6: 0.15,82.75']
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 13, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 14, 0.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 2.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 11, 0.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 5.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 2.0)
br
--------------------------------------------------
updated_cells (sensor_readings): {188: 0, 189: 1}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe007000e000000000000000000003","obstacleMap":"00000000604000180c03800100","robotPosition":"5,8,1","arrowPosition":"2,8,0;2,8,0"}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (5, 11, 0)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 3,10
Checking arrow @ 3,11
Arrow Not Possible @ Robot Position: (5, 11, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe007000e000000000000000000003","obstacleMap":"00000000604000180c03800100","robotPosition":"5,8,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe007000e000000000000000000003","obstacleMap":"00000000604000180c03800100","robotPosition":"5,11,0","ARrobotPosition":"5,8,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe007000e000000000000000000003","obstacleMap":"00000000604000180c03800100","robotPosition":"5,8,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (3, 12, 3, 11, 10, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 13, 5, 13, 6, 13)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 3,11
Checking arrow @ 3,12
Arrow Not Possible @ Robot Position: (5, 12, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe007000e000000000000000000003","obstacleMap":"00000000604000180c03800100","robotPosition":"5,7,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe007000e000000000000000000003","obstacleMap":"00000000604000180c03800100","robotPosition":"5,12,0","ARrobotPosition":"5,7,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,1,
Data from Arduino: ['1,0,0,0,0,1,']
arduino_recv_queue: ['1,0,0,0,0,1,']
RECEIVED ARDUINO 1,0,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 22.0, 22.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 13, 0.0, 2.0)
br
RECEIVED PRi: ARQCV1: 0.01,11.31
ARQCV2: 0.03,34.45
ARQCV3: 0.16,37.06
ARQCV4: 0.31,42.39
ARQCV5: 0.02,38.77
ARQCV6: 0.01,18.55Sensor 2

No Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.01,11.31\n', 'QCV2: 0.03,34.45\n', 'QCV3: 0.16,37.06\n', 'QCV4: 0.31,42.39\n', 'QCV5: 0.02,38.77\n', 'QCV6: 0.01,18.55']
Current Sesnsor Reading: x, y, count, total: (4, 14, 0, 4)
arduino_recv_queue: ['QCV1: 0.01,11.31\n', 'QCV2: 0.03,34.45\n', 'QCV3: 0.16,37.06\n', 'QCV4: 0.31,42.39\n', 'QCV5: 0.02,38.77\n', 'QCV6: 0.01,18.55']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 14, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 32
Checking Whether Calibration Possible...
Robot Position @ (5, 12, 0)
cells_left: [1, 1]
cells_right: [0, 0]
Checking arrow @ 3,11
Checking arrow @ 3,12
Arrow Not Possible @ Robot Position: (5, 12, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {232: 0, 231: 0, 230: 0, 198: 0, 199: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01f000e001c00000000000000003","obstacleMap":"00000000604000180c038001000","robotPosition":"5,7,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (3, 13, 3, 12, 11, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 14, 5, 14, 6, 14)
North: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (5, 12, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 4,14
Checking arrow @ 5,14
Arrow Not Possible @ Robot Position: (5, 12, 'EAST')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01f000e001c00000000000000003","obstacleMap":"00000000604000180c038001000","robotPosition":"5,7,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01f000e001c00000000000000003","obstacleMap":"00000000604000180c038001000","robotPosition":"5,12,1","ARrobotPosition":"5,7,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,2,2,0,0,
Data from Arduino: ['0,0,2,2,0,0,']
arduino_recv_queue: ['0,0,2,2,0,0,']
RECEIVED PRi: ARQCV1: 0.18,66.62
Data from Arduino: ['QCV1: 0.18,66.62']
arduino_recv_queue: ['0,0,2,2,0,0,', 'QCV1: 0.18,66.62']
RECEIVED ARDUINO 0,0,2,2,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 14, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 14, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 4.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 11, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 11, 0.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 8, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 4.0)
br
--------------------------------------------------
updated_cells (sensor_readings): {203: 0, 204: 1}
RECEIVED PRi: ARQCV2: 0.08,35.95
Data from Arduino: ['QCV2: 0.08,35.95']
arduino_recv_queue: ['QCV1: 0.18,66.62', 'QCV2: 0.08,35.95']
RECEIVED PRi: ARQCV3: 0.01,18.54
Data from Arduino: ['QCV3: 0.01,18.54']
arduino_recv_queue: ['QCV1: 0.18,66.62', 'QCV2: 0.08,35.95', 'QCV3: 0.01,18.54']
RECEIVED PRi: ARQCV4: 0.02,17.56
ARQCV5: 0.05,38.47
Data from Arduino: ['QCV4: 0.02,17.56\n', 'QCV5: 0.05,38.47']
arduino_recv_queue: ['QCV1: 0.18,66.62', 'QCV2: 0.08,35.95', 'QCV3: 0.01,18.54', 'QCV4: 0.02,17.56\n', 'QCV5: 0.05,38.47']
RECEIVED PRi: ARQCV6: 0.22,85.88
Data from Arduino: ['QCV6: 0.22,85.88']
arduino_recv_queue: ['QCV1: 0.18,66.62', 'QCV2: 0.08,35.95', 'QCV3: 0.01,18.54', 'QCV4: 0.02,17.56\n', 'QCV5: 0.05,38.47', 'QCV6: 0.22,85.88']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01fc00e001c00000000000000003","obstacleMap":"00000000604000180c0380010200","robotPosition":"5,7,1","arrowPosition":"2,8,0;2,8,0"}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (5, 12, 0)
cells_left: [1, 1]
cells_right: [0, 0]
Checking arrow @ 3,11
Checking arrow @ 3,12
Arrow Not Possible @ Robot Position: (5, 12, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01fc00e001c00000000000000003","obstacleMap":"00000000604000180c0380010200","robotPosition":"5,7,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01fc00e001c00000000000000003","obstacleMap":"00000000604000180c0380010200","robotPosition":"5,12,0","ARrobotPosition":"5,7,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01fc00e001c00000000000000003","obstacleMap":"00000000604000180c0380010200","robotPosition":"5,7,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (3, 13, 3, 12, 11, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 14, 5, 14, 6, 14)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 3,12
Checking arrow @ 3,13
Arrow Not Possible @ Robot Position: (5, 13, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01fc00e001c00000000000000003","obstacleMap":"00000000604000180c0380010200","robotPosition":"5,6,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01fc00e001c00000000000000003","obstacleMap":"00000000604000180c0380010200","robotPosition":"5,13,0","ARrobotPosition":"5,6,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,2,0,0,0,
Data from Arduino: ['0,0,2,0,0,0,']
arduino_recv_queue: ['0,0,2,0,0,0,']
RECEIVED ARDUINO 0,0,2,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 12, 0.0, 8.0)
RECEIVED PRi: ARQCV1: 0.05,50.69
ARQCV2: 0.04,35.42
ARQCV3: 0.12,23.96
Current Sesnsor Reading: x, y, count, total: (2, 12, 0.0, 2.0)
Data from Arduino: ['QCV1: 0.05,50.69\n', 'QCV2: 0.04,35.42\n', 'QCV3: 0.12,23.96']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 4.0)
arduino_recv_queue: ['QCV1: 0.05,50.69\n', 'QCV2: 0.04,35.42\n', 'QCV3: 0.12,23.96']
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 14, 0.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 2.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
RECEIVED PRi: ARQCV4: 0.51,50.69
Current Sesnsor Reading: x, y, count, total: (6, 15, 0, 4)
Data from Arduino: ['QCV4: 0.51,50.69']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 8.0)
arduino_recv_queue: ['QCV1: 0.05,50.69\n', 'QCV2: 0.04,35.42\n', 'QCV3: 0.12,23.96', 'QCV4: 0.51,50.69']
Current Sesnsor Reading: x, y, count, total: (6, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 1)
RECEIVED PRi: ARQCV5: 0.10,37.29
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 1.0)
Data from Arduino: ['QCV5: 0.10,37.29']
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 1)
arduino_recv_queue: ['QCV1: 0.05,50.69\n', 'QCV2: 0.04,35.42\n', 'QCV3: 0.12,23.96', 'QCV4: 0.51,50.69', 'QCV5: 0.10,37.29']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 35
Checking Whether Calibration Possible...
Robot Position @ (5, 13, 0)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 3,12
Checking arrow @ 3,13
Arrow Not Possible @ Robot Position: (5, 13, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {214: 0, 213: 0, 246: 0, 247: 0, 218: 0, 219: 0, 220: 0, 221: 0, 222: 0, 245: 1}
RECEIVED PRi: ARQCV6: 0.09,71.05
Data from Arduino: ['QCV6: 0.09,71.05']
w
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01fc03ff01c00380000000000003","obstacleMap":"00000000604000180c038001020008","robotPosition":"5,6,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (3, 14, 3, 13, 12, 3)
West: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (5, 13, 3)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 6,11
Checking arrow @ 5,11
Arrow Not Possible @ Robot Position: (5, 13, 'WEST')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 5,11
Checking arrow @ 4,11
Arrow Not Possible @ Robot Position: (4, 13, 'WEST')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01fc03ff01c00380000000000003","obstacleMap":"00000000604000180c038001020008","robotPosition":"4,6,3","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe0fe01fc03ff01c00380000000000003","obstacleMap":"00000000604000180c038001020008","robotPosition":"4,13,3","ARrobotPosition":"4,6,3","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,0,0,0,1,
Data from Arduino: ['0,1,0,0,0,1,']
arduino_recv_queue: ['0,1,0,0,0,1,']
RECEIVED ARDUINO 0,1,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
RECEIVED PRi: ARQCV1: 0.19,64.21
ARQCV2: 0.01,8.48
ARQCV3: 0.18,36.78
ARQCV4: 0.39,37.87
ARQCV5: 0.11,39.09
ARQCV6: 0.01,21.07
Data from Arduino: ['QCV1: 0.19,64.21\n', 'QCV2: 0.01,8.48\n', 'QCV3: 0.18,36.78\n', 'QCV4: 0.39,37.87\n', 'QCV5: 0.11,39.09\n', 'QCV6: 0.01,21.07']
arduino_recv_queue: ['QCV1: 0.19,64.21\n', 'QCV2: 0.01,8.48\n', 'QCV3: 0.18,36.78\n', 'QCV4: 0.39,37.87\n', 'QCV5: 0.11,39.09\n', 'QCV6: 0.01,21.07']
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 26.0, 26.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 13, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 14, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 37
Checking Whether Calibration Possible...
Robot Position @ (4, 13, 3)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 5,11
Checking arrow @ 4,11
Arrow Not Possible @ Robot Position: (4, 13, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {212: 0, 197: 0, 182: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe1fe03fc07ff01c00380000000000003","obstacleMap":"00000000604000180c0380008080010","robotPosition":"4,6,3","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (3, 11, 4, 11, 5, 11)
South: False
Checking Free towards FORWARD
Cell to check : (2, 14, 2, 13, 12, 2)
West: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (4, 13, 0)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 2,12
Checking arrow @ 2,13
Arrow Not Possible @ Robot Position: (4, 13, 'NORTH')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe1fe03fc07ff01c00380000000000003","obstacleMap":"00000000604000180c0380008080010","robotPosition":"4,6,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe1fe03fc07ff01c00380000000000003","obstacleMap":"00000000604000180c0380008080010","robotPosition":"4,13,0","ARrobotPosition":"4,6,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,2,0,4,
Data from Arduino: ['0,0,0,2,0,4,']
arduino_recv_queue: ['0,0,0,2,0,4,']
RECEIVED ARDUINO 0,0,0,2,0,4,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 16, 0.0, 2.0)
br
Current Sesnsor Reading: x, y, count, total: (3, 17, 1, 2)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 17, 1.0, 2.0)
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 4.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 4.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 6.0)
br
Current Sesnsor Reading: x, y, count, total: (9, 14, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 4.0, 5.0)
br
--------------------------------------------------
updated_cells (sensor_readings): {220: 1, 259: 1, 244: 0, 229: 0}
RECEIVED PRi: ARQCV1: 0.05,39.40
Data from Arduino: ['QCV1: 0.05,39.40']
arduino_recv_queue: ['QCV1: 0.05,39.40']
RECEIVED PRi: ARQCV2: 0.06,33.96
ARQCV3: 0.02,28.52
ARQCV4: 0.03,22.22
ARQCV5: 0.05,38.77
ARQCV6: 0.08,35.05
Data from Arduino: ['QCV2: 0.06,33.96\n', 'QCV3: 0.02,28.52\n', 'QCV4: 0.03,22.22\n', 'QCV5: 0.05,38.77\n', 'QCV6: 0.08,35.05']
arduino_recv_queue: ['QCV1: 0.05,39.40', 'QCV2: 0.06,33.96\n', 'QCV3: 0.02,28.52\n', 'QCV4: 0.03,22.22\n', 'QCV5: 0.05,38.77\n', 'QCV6: 0.08,35.05']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe1fe03fc07ff03c00780080000000003","obstacleMap":"00000000604000180c03800080804048","robotPosition":"4,6,0","arrowPosition":"2,8,0;2,8,0"}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (4, 13, 3)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 5,11
Checking arrow @ 4,11
Arrow Not Possible @ Robot Position: (4, 13, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe1fe03fc07ff03c00780080000000003","obstacleMap":"00000000604000180c03800080804048","robotPosition":"4,6,3","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe1fe03fc07ff03c00780080000000003","obstacleMap":"00000000604000180c03800080804048","robotPosition":"4,13,3","ARrobotPosition":"4,6,3","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe1fe03fc07ff03c00780080000000003","obstacleMap":"00000000604000180c03800080804048","robotPosition":"4,6,3","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (3, 11, 4, 11, 5, 11)
South: False
Checking Free towards FORWARD
Cell to check : (2, 14, 2, 13, 12, 2)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 4,11
Checking arrow @ 3,11
Mark Arrow Taken @ (4, 11, 'SOUTH')
Mark Arrow Taken @ (3, 11, 'SOUTH')
Arrow Possible @ Robot Position: (3, 13, 'WEST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (3, 13, 'WEST')
Check Arrow @ (4, 11, 'SOUTH')
Check Arrow @ (3, 11, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe1fe03fc07ff03c00780080000000003","obstacleMap":"00000000604000180c03800080804048","robotPosition":"3,6,3","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe1fe03fc07ff03c00780080000000003","obstacleMap":"00000000604000180c03800080804048","robotPosition":"3,13,3","ARrobotPosition":"3,6,3","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,0,0,0,5,
Data from Arduino: ['0,1,0,0,0,5,']
arduino_recv_queue: ['0,1,0,0,0,5,']
RECEIVED ARDUINO 0,1,0,0,0,5,
RECEIVED PRi: ARQCV1: 0.24,74.74
ARQCV2: 0.01,8.77
ARQCV3: 0.12,31.73
ARQCV4: 0.26,29.38
ARQCV5: 0.02,34.21
ARQCV6: 0.12,44.73
Sensor 0
Data from Arduino: ['QCV1: 0.24,74.74\n', 'QCV2: 0.01,8.77\n', 'QCV3: 0.12,31.73\n', 'QCV4: 0.26,29.38\n', 'QCV5: 0.02,34.21\n', 'QCV6: 0.12,44.73']
No Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.24,74.74\n', 'QCV2: 0.01,8.77\n', 'QCV3: 0.12,31.73\n', 'QCV4: 0.26,29.38\n', 'QCV5: 0.02,34.21\n', 'QCV6: 0.12,44.73']
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 11, 14.0, 14.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (0, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 13, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (0, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 2.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 19, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 19, 2.0, 2.0)
br
--------------------------------------------------
Total move counts: 40
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 13, 3)
cells_left: [0, 0]
cells_right: [1, 0]
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (3, 13, 3)
Status of cells surrounding robot: {0: [0, 0, 0], 1: [0, 0, 0], 2: [0, 0, 0], 3: [0, 1, 1]}
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (3, 13, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front T
SENDING ART

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (3, 13, 3)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 4,11
Checking arrow @ 3,11
Arrow Not Possible @ Robot Position: (3, 13, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {288: 1, 273: 0, 258: 0, 211: 0, 228: 0, 181: 0, 243: 0, 196: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe3fe07fc0fff07c00f80180020004003","obstacleMap":"00000000604000180c0380004020080228","robotPosition":"3,6,3","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (2, 11, 3, 11, 4, 11)
South: False
Checking Free towards FORWARD
Cell to check : (1, 14, 1, 13, 12, 1)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 3,11
Checking arrow @ 2,11
Mark Arrow Taken @ (3, 11, 'SOUTH')
Mark Arrow Taken @ (2, 11, 'SOUTH')
Arrow Possible @ Robot Position: (2, 13, 'WEST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (2, 13, 'WEST')
Check Arrow @ (3, 11, 'SOUTH')
Check Arrow @ (2, 11, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe3fe07fc0fff07c00f80180020004003","obstacleMap":"00000000604000180c0380004020080228","robotPosition":"2,6,3","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe3fe07fc0fff07c00f80180020004003","obstacleMap":"00000000604000180c0380004020080228","robotPosition":"2,13,3","ARrobotPosition":"2,6,3","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,2,2,2,0,
Data from Arduino: ['1,1,2,2,2,0,']
arduino_recv_queue: ['1,1,2,2,2,0,']
RECEIVED PRi: ARQCV1: 0.02,10.08
ARQCV2: 0.03,10.14
ARQCV3: 0.01,23.24
ARQCV4: 0.02,21.69
ARQCV5: 0.02,23.86
ARQCV6: 0.05,48.07
Data from Arduino: ['QCV1: 0.02,10.08\n', 'QCV2: 0.03,10.14\n', 'QCV3: 0.01,23.24\n', 'QCV4: 0.02,21.69\n', 'QCV5: 0.02,23.86\n', 'QCV6: 0.05,48.07']
arduino_recv_queue: ['1,1,2,2,2,0,', 'QCV1: 0.02,10.08\n', 'QCV2: 0.03,10.14\n', 'QCV3: 0.01,23.24\n', 'QCV4: 0.02,21.69\n', 'QCV5: 0.02,23.86\n', 'QCV6: 0.05,48.07']
RECEIVED ARDUINO 1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 30.0, 30.0)
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 11, 14.0, 14.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 6.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 13, 0.0, 6.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 6.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (1, 18, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 18, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (1, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 43
Checking Whether Calibration Possible...
Robot Position @ (2, 13, 3)
cells_left: [1, 0]
cells_right: [1, 0]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 3,11
Checking arrow @ 2,11
Arrow Not Possible @ Robot Position: (2, 13, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {272: 0, 257: 0, 242: 0, 227: 0, 287: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe3fe07fc0fff0fc01f8038006000c003","obstacleMap":"00000000604000180c03800040200800844","robotPosition":"2,6,3","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (1, 11, 2, 11, 3, 11)
South: False
Checking Free towards FORWARD
Cell to check : (0, 14, 0, 13, 12, 0)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 2,11
Checking arrow @ 1,11
Mark Arrow Taken @ (2, 11, 'SOUTH')
Mark Arrow Taken @ (1, 11, 'SOUTH')
Arrow Possible @ Robot Position: (1, 13, 'WEST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (1, 13, 'WEST')
Check Arrow @ (2, 11, 'SOUTH')
Check Arrow @ (1, 11, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe3fe07fc0fff0fc01f8038006000c003","obstacleMap":"00000000604000180c03800040200800844","robotPosition":"1,6,3","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff80ffe3fe07fc0fff0fc01f8038006000c003","obstacleMap":"00000000604000180c03800040200800844","robotPosition":"1,13,3","ARrobotPosition":"1,6,3","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,1,1,1,0,
Data from Arduino: ['1,1,1,1,1,0,']
arduino_recv_queue: ['1,1,1,1,1,0,']
RECEIVED ARDUINO 1,1,1,1,1,0,
Sensor 0
RECEIVED PRi: ARQCV1: 0.03,10.21
ARQCV2: 0.01,10.21
ARQCV3: 0.01,12.68
ARQCV4: 0.01,12.34
ARQCV5: 0.01,13.29
ARQCV6: 0.06,49.97
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.03,10.21\n', 'QCV2: 0.01,10.21\n', 'QCV3: 0.01,12.68\n', 'QCV4: 0.01,12.34\n', 'QCV5: 0.01,13.29\n', 'QCV6: 0.06,49.97']
Current Sesnsor Reading: x, y, count, total: (2, 11, 4, 4)
arduino_recv_queue: ['QCV1: 0.03,10.21\n', 'QCV2: 0.01,10.21\n', 'QCV3: 0.01,12.68\n', 'QCV4: 0.01,12.34\n', 'QCV5: 0.01,13.29\n', 'QCV6: 0.06,49.97']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 11, 18.0, 18.0)
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 11, 4.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
ie
br
Sensor 3
Has Obstacle in Covered Range
ie
br
Sensor 4
Has Obstacle in Covered Range
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (0, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 17, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (0, 18, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 18, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (0, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 19, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 44
Checking arrow @ 2,11
Checking arrow @ 1,11
Arrow Not Possible @ Robot Position: (1, 13, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {256: 0, 241: 0, 226: 0, 166: 1, 286: 0, 271: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fc03f807800e001c003","obstacleMap":"00000000604000180c03c000201004001041","robotPosition":"1,6,3","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (0, 11, 1, 11, 2, 11)
South: False
Checking Free towards FORWARD
Cell to check : (-1, 14, -1, 13, 12, -1)
ie
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 13, 0)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 13, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fc03f807800e001c003","obstacleMap":"00000000604000180c03c000201004001041","robotPosition":"1,6,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fc03f807800e001c003","obstacleMap":"00000000604000180c03c000201004001041","robotPosition":"1,13,0","ARrobotPosition":"1,6,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
RECEIVED PRi: ARQCV1: 0.05,12.34
ARQCV2: 0.03,12.30
ARQCV3: 0.27,56.72
ARQCV4: 0.61,32.84
ARQCV5: 0.21,38.47
ARQCV6: 0.27,124.19
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.05,12.34\n', 'QCV2: 0.03,12.30\n', 'QCV3: 0.27,56.72\n', 'QCV4: 0.61,32.84\n', 'QCV5: 0.21,38.47\n', 'QCV6: 0.27,124.19']
ie
arduino_recv_queue: ['QCV1: 0.05,12.34\n', 'QCV2: 0.03,12.30\n', 'QCV3: 0.27,56.72\n', 'QCV4: 0.61,32.84\n', 'QCV5: 0.21,38.47\n', 'QCV6: 0.27,124.19']
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (0, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 0.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 0.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 9.0)
br
--------------------------------------------------
Total move counts: 45
Arrow Not Possible @ Robot Position: (1, 13, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fc03f807800e001c003","obstacleMap":"00000000604000180c03c000201004001041","robotPosition":"1,6,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (-1, 14, -1, 13, 12, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 15, 1, 15, 2, 15)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 14, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fc03f807800e001c003","obstacleMap":"00000000604000180c03c000201004001041","robotPosition":"1,5,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fc03f807800e001c003","obstacleMap":"00000000604000180c03c000201004001041","robotPosition":"1,14,0","ARrobotPosition":"1,5,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (0, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 17, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (2, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 17, 0.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (6, 15, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (7, 15, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 46
Arrow Not Possible @ Robot Position: (1, 14, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {233: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807800e001c003","obstacleMap":"00000000604000180c03c0002010040008208","robotPosition":"1,5,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (-1, 15, -1, 14, 13, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 16, 1, 16, 2, 16)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.04,12.64
ARQCV2: 0.03,12.64
ARQCV3: 0.06,47.02
Data from Arduino: ['QCV1: 0.04,12.64\n', 'QCV2: 0.03,12.64\n', 'QCV3: 0.06,47.02']
arduino_recv_queue: ['QCV1: 0.04,12.64\n', 'QCV2: 0.03,12.64\n', 'QCV3: 0.06,47.02']
RECEIVED PRi: ARQCV4: 0.44,41.67
ARQCV5: 0.07,37.87
ARQCV6: 0.44,95.41
Data from Arduino: ['QCV4: 0.44,41.67\n', 'QCV5: 0.07,37.87\n', 'QCV6: 0.44,95.41']
arduino_recv_queue: ['QCV4: 0.44,41.67\n', 'QCV5: 0.07,37.87\n', 'QCV6: 0.44,95.41']
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 15, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807800e001c003","obstacleMap":"00000000604000180c03c0002010040008208","robotPosition":"1,4,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807800e001c003","obstacleMap":"00000000604000180c03c0002010040008208","robotPosition":"1,15,0","ARrobotPosition":"1,4,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,4,
Data from Arduino: ['1,1,0,0,0,4,']
arduino_recv_queue: ['1,1,0,0,0,4,']
RECEIVED ARDUINO 1,1,0,0,0,4,
RECEIVED PRi: ARQCV1: 0.03,12.95
ARQCV2: 0.03,13.04
ARQCV3: 0.02,37.87
ARQCV4: 0.12,34.21
ARQCV5: 0.09,37.58
ARQCV6: 0.05,31.86
Data from Arduino: ['QCV1: 0.03,12.95\n', 'QCV2: 0.03,13.04\n', 'QCV3: 0.02,37.87\n', 'QCV4: 0.12,34.21\n', 'QCV5: 0.09,37.58\n', 'QCV6: 0.05,31.86']
Sensor 0
arduino_recv_queue: ['QCV1: 0.03,12.95\n', 'QCV2: 0.03,13.04\n', 'QCV3: 0.02,37.87\n', 'QCV4: 0.12,34.21\n', 'QCV5: 0.09,37.58\n', 'QCV6: 0.05,31.86']
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (0, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 18, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (1, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 18, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 17, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (2, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 18, 0.0, 6.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 16, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 4.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 4.0, 6.0)
br
--------------------------------------------------
Total move counts: 47
Arrow Not Possible @ Robot Position: (1, 15, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {247: 1}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807800e001c003","obstacleMap":"00000000604000180c03c000201004000a208","robotPosition":"1,4,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (-1, 16, -1, 15, 14, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 17, 1, 17, 2, 17)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 16, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807800e001c003","obstacleMap":"00000000604000180c03c000201004000a208","robotPosition":"1,3,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807800e001c003","obstacleMap":"00000000604000180c03c000201004000a208","robotPosition":"1,16,0","ARrobotPosition":"1,3,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
RECEIVED PRi: ARQCV1: 0.02,13.16
ARQCV2: 0.01,13.20
ARQCV3: 0.03,29.05
ARQCV4: 0.07,27.53
ARQCV5: 0.02,31.52
ARQCV6: 0.11,55.82
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.02,13.16\n', 'QCV2: 0.01,13.20\n', 'QCV3: 0.03,29.05\n', 'QCV4: 0.07,27.53\n', 'QCV5: 0.02,31.52\n', 'QCV6: 0.11,55.82']
ie
arduino_recv_queue: ['QCV1: 0.02,13.16\n', 'QCV2: 0.01,13.20\n', 'QCV3: 0.03,29.05\n', 'QCV4: 0.07,27.53\n', 'QCV5: 0.02,31.52\n', 'QCV6: 0.11,55.82']
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (0, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 19, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (1, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 18, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (2, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 19, 2.0, 4.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 17, 1.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 17, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 17, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 48
Arrow Not Possible @ Robot Position: (1, 16, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {259: 0, 260: 0, 261: 0, 262: 0, 263: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80e001c003","obstacleMap":"00000000604000180c03c000201004000a0008","robotPosition":"1,3,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (-1, 17, -1, 16, 15, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 18, 1, 18, 2, 18)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 17, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80e001c003","obstacleMap":"00000000604000180c03c000201004000a0008","robotPosition":"1,2,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80e001c003","obstacleMap":"00000000604000180c03c000201004000a0008","robotPosition":"1,17,0","ARrobotPosition":"1,2,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,2,2,2,0,
Data from Arduino: ['1,1,2,2,2,0,']
arduino_recv_queue: ['1,1,2,2,2,0,']
RECEIVED ARDUINO 1,1,2,2,2,0,
RECEIVED PRi: ARQCV1: 0.03,13.45
ARQCV2: 0.02,13.42
ARQCV3: 0.01,19.51
ARQCV4: 0.02,18.76
ARQCV5: 0.02,20.99
ARQCV6: 0.07,56.12
Sensor 0
Data from Arduino: ['QCV1: 0.03,13.45\n', 'QCV2: 0.02,13.42\n', 'QCV3: 0.01,19.51\n', 'QCV4: 0.02,18.76\n', 'QCV5: 0.02,20.99\n', 'QCV6: 0.07,56.12']
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.03,13.45\n', 'QCV2: 0.02,13.42\n', 'QCV3: 0.01,19.51\n', 'QCV4: 0.02,18.76\n', 'QCV5: 0.02,20.99\n', 'QCV6: 0.07,56.12']
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 19, 0.0, 7.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 19, 2.0, 8.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 18, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 18, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 18, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 49
Arrow Not Possible @ Robot Position: (1, 17, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {288: 0, 274: 0, 275: 0, 276: 0, 277: 0, 278: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01c003","obstacleMap":"00000000604000180c03c000201004000a00000","robotPosition":"1,2,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (-1, 18, -1, 17, 16, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 19, 1, 19, 2, 19)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 18, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01c003","obstacleMap":"00000000604000180c03c000201004000a00000","robotPosition":"1,1,0","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01c003","obstacleMap":"00000000604000180c03c000201004000a00000","robotPosition":"1,18,0","ARrobotPosition":"1,1,0","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,1,1,1,0,
Data from Arduino: ['1,1,1,1,1,0,']
arduino_recv_queue: ['1,1,1,1,1,0,']
RECEIVED ARDUINO 1,1,1,1,1,0,
RECEIVED PRi: ARQCV1: 0.02,13.63
ARQCV2: 0.02,13.77
ARQCV3: 0.05,9.62
ARQCV4: 0.01,9.57
ARQCV5: 0.01,10.29
ARQCV6: 0.04,57.62Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
ie
br
Sensor 3
Has Obstacle in Covered Range
ie
br
Sensor 4
Has Obstacle in Covered Range
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 19, 0.0, 2.0)

Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 2.0)
Data from Arduino: ['QCV1: 0.02,13.63\n', 'QCV2: 0.02,13.77\n', 'QCV3: 0.05,9.62\n', 'QCV4: 0.01,9.57\n', 'QCV5: 0.01,10.29\n', 'QCV6: 0.04,57.62']
Current Sesnsor Reading: x, y, count, total: (5, 19, 0.0, 1.0)
arduino_recv_queue: ['QCV1: 0.02,13.63\n', 'QCV2: 0.02,13.77\n', 'QCV3: 0.05,9.62\n', 'QCV4: 0.01,9.57\n', 'QCV5: 0.01,10.29\n', 'QCV6: 0.04,57.62']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 19, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 50
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 18, 0)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (1, 18, 0)
Status of cells surrounding robot: {0: [1, 1, 1], 1: [0, 0, 0], 2: [0, 0, 0], 3: [1, 1, 1]}
Calibrating Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 18, 3)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 18, 0)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 18, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {289: 0, 290: 0, 291: 0, 292: 0, 293: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"1,1,0","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (-1, 19, -1, 18, 17, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 20, 1, 20, 2, 20)
ie
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 18, 1)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"1,1,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"1,18,1","ARrobotPosition":"1,1,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED PRi: ARQCV1: 0.01,10.24
ARQCV2: 0.01,10.16
ARQCV3: 0.40,57.99
ARQCV4: 0.70,46.24
ARQCV5: 0.17,36.22
ARQCV6: 0.03,51.44RECEIVED ARDUINO 1,1,0,0,0,0,

Sensor 0
Data from Arduino: ['QCV1: 0.01,10.24\n', 'QCV2: 0.01,10.16\n', 'QCV3: 0.40,57.99\n', 'QCV4: 0.70,46.24\n', 'QCV5: 0.17,36.22\n', 'QCV6: 0.03,51.44']
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.01,10.24\n', 'QCV2: 0.01,10.16\n', 'QCV3: 0.40,57.99\n', 'QCV4: 0.70,46.24\n', 'QCV5: 0.17,36.22\n', 'QCV6: 0.03,51.44']
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 19, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 18, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 17, 1.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 4.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (2, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (2, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (2, 12, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 53
Arrow Not Possible @ Robot Position: (1, 18, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"1,1,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (0, 20, 1, 20, 2, 20)
ie
Checking Free towards FORWARD
Cell to check : (3, 19, 3, 18, 3, 17)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (2, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"2,1,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"2,18,1","ARrobotPosition":"2,1,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,1,
Data from Arduino: ['1,1,0,0,0,1,']
arduino_recv_queue: ['1,1,0,0,0,1,']
RECEIVED PRi: ARQCV1: 0.01,10.14
ARQCV2: 0.02,10.32
ARQCV3: 0.17,48.37
ARQCV4: 0.14,47.47
ARQCV5: 0.13,34.45
ARQCV6: 0.02,23.71
RECEIVED ARDUINO 1,1,0,0,0,1,
Data from Arduino: ['QCV1: 0.01,10.14\n', 'QCV2: 0.02,10.32\n', 'QCV3: 0.17,48.37\n', 'QCV4: 0.14,47.47\n', 'QCV5: 0.13,34.45\n', 'QCV6: 0.02,23.71']
Sensor 0
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.01,10.14\n', 'QCV2: 0.02,10.32\n', 'QCV3: 0.17,48.37\n', 'QCV4: 0.14,47.47\n', 'QCV5: 0.13,34.45\n', 'QCV6: 0.02,23.71']
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 19, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 18, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 3.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 0]
--------------------------------------------------
Total move counts: 54
Arrow Not Possible @ Robot Position: (2, 18, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"2,1,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (1, 20, 2, 20, 3, 20)
ie
Checking Free towards FORWARD
Cell to check : (4, 19, 4, 18, 4, 17)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (3, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"3,1,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"3,18,1","ARrobotPosition":"3,1,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,1,
Data from Arduino: ['1,1,0,0,0,1,']
arduino_recv_queue: ['1,1,0,0,0,1,']
RECEIVED ARDUINO 1,1,0,0,0,1,
Sensor 0
RECEIVED PRi: ARQCV1: 0.04,10.51
ARQCV2: 0.02,10.51
ARQCV3: 0.09,41.67
ARQCV4: 0.52,45.41
ARQCV5: 0.08,36.50
ARQCV6: 0.03,23.47
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.04,10.51\n', 'QCV2: 0.02,10.51\n', 'QCV3: 0.09,41.67\n', 'QCV4: 0.52,45.41\n', 'QCV5: 0.08,36.50\n', 'QCV6: 0.03,23.47']
ie
arduino_recv_queue: ['QCV1: 0.04,10.51\n', 'QCV2: 0.02,10.51\n', 'QCV3: 0.09,41.67\n', 'QCV4: 0.52,45.41\n', 'QCV5: 0.08,36.50\n', 'QCV6: 0.03,23.47']
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 19, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 3.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 55
Arrow Not Possible @ Robot Position: (3, 18, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"3,1,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (2, 20, 3, 20, 4, 20)
ie
Checking Free towards FORWARD
Cell to check : (5, 19, 5, 18, 5, 17)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (4, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"4,1,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"4,18,1","ARrobotPosition":"4,1,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (7, 19, 0.0, 2.0)
RECEIVED PRi: ARQCV1: 0.03,10.73
ARQCV2: 0.02,10.54
ARQCV3: 0.02,35.95
ARQCV4: 0.25,31.10
ARQCV5: 0.10,37.29
ARQCV6: 0.14,87.25
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 3.0)
Data from Arduino: ['QCV1: 0.03,10.73\n', 'QCV2: 0.02,10.54\n', 'QCV3: 0.02,35.95\n', 'QCV4: 0.25,31.10\n', 'QCV5: 0.10,37.29\n', 'QCV6: 0.14,87.25']
br
arduino_recv_queue: ['QCV1: 0.03,10.73\n', 'QCV2: 0.02,10.54\n', 'QCV3: 0.02,35.95\n', 'QCV4: 0.25,31.10\n', 'QCV5: 0.10,37.29\n', 'QCV6: 0.14,87.25']
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (7, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (7, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 56
Arrow Not Possible @ Robot Position: (4, 18, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"4,1,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (3, 20, 4, 20, 5, 20)
ie
Checking Free towards FORWARD
Cell to check : (6, 19, 6, 18, 6, 17)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (5, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"5,1,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807f80ff01fe03","obstacleMap":"00000000604000180c03c000201004000a000000","robotPosition":"5,18,1","ARrobotPosition":"5,1,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 18, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 17, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 4.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 57
Arrow Not Possible @ Robot Position: (5, 18, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {264: 0, 247: 0, 294: 0, 279: 0}
RECEIVED PRi: ARQCV1: 0.03,11.00
Data from Arduino: ['QCV1: 0.03,11.00']
arduino_recv_queue: ['QCV1: 0.03,11.00']
RECEIVED PRi: ARQCV2: 0.02,10.70
ARQCV3: 0.04,29.38
ARQCV4: 0.05,28.17
ARQCV5: 0.02,31.52
ARQCV6: 0.71,317.62
Data from Arduino: ['QCV2: 0.02,10.70\n', 'QCV3: 0.04,29.38\n', 'QCV4: 0.05,28.17\n', 'QCV5: 0.02,31.52\n', 'QCV6: 0.71,317.62']
arduino_recv_queue: ['QCV1: 0.03,11.00', 'QCV2: 0.02,10.70\n', 'QCV3: 0.04,29.38\n', 'QCV4: 0.05,28.17\n', 'QCV5: 0.02,31.52\n', 'QCV6: 0.71,317.62']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807fc0ff81ff03","obstacleMap":"00000000604000180c03c00020100400080000000","robotPosition":"5,1,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (4, 20, 5, 20, 6, 20)
ie
Checking Free towards FORWARD
Cell to check : (7, 19, 7, 18, 7, 17)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (6, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807fc0ff81ff03","obstacleMap":"00000000604000180c03c00020100400080000000","robotPosition":"6,1,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03f807fc0ff81ff03","obstacleMap":"00000000604000180c03c00020100400080000000","robotPosition":"6,18,1","ARrobotPosition":"6,1,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,2,2,2,0,
Data from Arduino: ['1,1,2,2,2,0,']
arduino_recv_queue: ['1,1,2,2,2,0,']
RECEIVED PRi: ARQCV1: 0.02,10.94
ARQCV2: 0.01,10.79
ARQCV3: 0.01,19.96
ARQCV4: 0.02,19.35
RECEIVED ARDUINO 1,1,2,2,2,0,
Data from Arduino: ['QCV1: 0.02,10.94\n', 'QCV2: 0.01,10.79\n', 'QCV3: 0.01,19.96\n', 'QCV4: 0.02,19.35']
Sensor 0
arduino_recv_queue: ['QCV1: 0.02,10.94\n', 'QCV2: 0.01,10.79\n', 'QCV3: 0.01,19.96\n', 'QCV4: 0.02,19.35']
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 19, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 18, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 18, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 2.0, 2.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 17, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 17, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 2.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 9.0)
br
--------------------------------------------------
Total move counts: 58
Arrow Not Possible @ Robot Position: (6, 18, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {280: 1, 265: 1, 248: 0, 295: 1}
RECEIVED PRi: ARQCV5: 0.02,20.69
Data from Arduino: ['QCV5: 0.02,20.69']
arduino_recv_queue: ['QCV1: 0.02,10.94\n', 'QCV2: 0.01,10.79\n', 'QCV3: 0.01,19.96\n', 'QCV4: 0.02,19.35', 'QCV5: 0.02,20.69']
RECEIVED PRi: ARQCV6: 5.19,502.26
Data from Arduino: ['QCV6: 5.19,502.26']
arduino_recv_queue: ['QCV1: 0.02,10.94\n', 'QCV2: 0.01,10.79\n', 'QCV3: 0.01,19.96\n', 'QCV4: 0.02,19.35', 'QCV5: 0.02,20.69', 'QCV6: 5.19,502.26']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03fc07fe0ffc1ff83","obstacleMap":"00000000604000180c03c000201004000800401004","robotPosition":"6,1,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (5, 20, 6, 20, 7, 20)
ie
Checking Free towards FORWARD
Cell to check : (8, 19, 8, 18, 8, 17)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (7, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03fc07fe0ffc1ff83","obstacleMap":"00000000604000180c03c000201004000800401004","robotPosition":"7,1,1","arrowPosition":"2,8,0;2,8,0"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1fe03fc07fe0ffc1ff83","obstacleMap":"00000000604000180c03c000201004000800401004","robotPosition":"7,18,1","ARrobotPosition":"7,1,1","arrowPosition":"11,2,0,11,2,0","ARarrowPosition":"2,8,0;2,8,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,1,1,1,4,
Data from Arduino: ['1,1,1,1,1,4,']
arduino_recv_queue: ['1,1,1,1,1,4,']
RECEIVED PRi: ARQCV1: 0.02,10.82
ARQCV2: 0.01,10.76
ARQCV3: 0.01,9.91
ARQCV4: 0.01,9.52
ARQCV5: 0.01,10.08
ARQCV6: 0.02,32.40
Data from Arduino: ['QCV1: 0.02,10.82\n', 'QCV2: 0.01,10.76\n', 'QCV3: 0.01,9.91\n', 'QCV4: 0.01,9.52\n', 'QCV5: 0.01,10.08\n', 'QCV6: 0.02,32.40']
arduino_recv_queue: ['1,1,1,1,1,4,', 'QCV1: 0.02,10.82\n', 'QCV2: 0.01,10.76\n', 'QCV3: 0.01,9.91\n', 'QCV4: 0.01,9.52\n', 'QCV5: 0.01,10.08\n', 'QCV6: 0.02,32.40']
RECEIVED ARDUINO 1,1,1,1,1,4,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 19, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 6.0, 6.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 18, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 6.0, 6.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 17, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 6.0, 6.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 6.0, 6.0)
br
--------------------------------------------------
Total move counts: 59
Arrow Not Possible @ Robot Position: (7, 18, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {249: 0, 234: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ff03fe07fe0ffc1ff83","obstacleMap":"00000000604000180c03c000201004000400100401","robotPosition":"7,1,1","arrowPosition":"2,8,0;2,8,0"}

Checking Free towards LEFT
Cell to check : (6, 20, 7, 20, 8, 20)
ie
Checking Free towards FORWARD
Cell to check : (9, 19, 9, 18, 9, 17)
East: False
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (7, 18, 2)
cells_left: [1, 2]
cells_right: [1, 2]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,19
Checking arrow @ 9,18
Mark Arrow Taken @ (9, 19, 'EAST')
Mark Arrow Taken @ (9, 18, 'EAST')
Arrow Possible @ Robot Position: (7, 18, 'SOUTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP01
Data from RPi: ['01']
rpi_recv_queue: ['01']
RECEIVED RPI 01
Recognizing Image taken with robot position @ (7, 18, 'SOUTH')
Check Arrow @ (9, 19, 'EAST')
Check Arrow @ (9, 18, 'EAST')
Detected Arrow @ (9, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ff03fe07fe0ffc1ff83","obstacleMap":"00000000604000180c03c000201004000400100401","robotPosition":"7,1,2","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ff03fe07fe0ffc1ff83","obstacleMap":"00000000604000180c03c000201004000400100401","robotPosition":"7,18,2","ARrobotPosition":"7,1,2","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 19, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 10.0, 10.0)
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 17, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 10.0, 10.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 15, 0.0, 6.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 4.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 13.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (2, 17, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (1, 17, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 60
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (7, 18, 2)
cells_left: [1, 2]
cells_right: [1, 2]
Calibrating Side
SENDING ARC

RECEIVED PRi: ARQCV1: 0.02,9.52
ARQCV2: 0.01,9.62
ARQCV3: 0.18,38.17
ARQCV4: 2.10,106.57
ARQCV5: 0.41,112.77
ARQCV6: 0.09,57.95
Data from Arduino: ['QCV1: 0.02,9.52\n', 'QCV2: 0.01,9.62\n', 'QCV3: 0.18,38.17\n', 'QCV4: 2.10,106.57\n', 'QCV5: 0.41,112.77\n', 'QCV6: 0.09,57.95']
arduino_recv_queue: ['QCV1: 0.02,9.52\n', 'QCV2: 0.01,9.62\n', 'QCV3: 0.18,38.17\n', 'QCV4: 2.10,106.57\n', 'QCV5: 0.41,112.77\n', 'QCV6: 0.09,57.95']
WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (7, 18, 2)
Status of cells surrounding robot: {0: [0, 0, 0], 1: [0, 0, 0], 2: [1, 1, 1], 3: [1, 1, 1]}
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (7, 18, 1)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Calibrating Side Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (7, 18, 2)
cells_left: [1, 2]
cells_right: [1, 2]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,19
Checking arrow @ 9,18
Arrow Not Possible @ Robot Position: (7, 18, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ff03fe07fe0ffc1ff83","obstacleMap":"00000000604000180c03c000201004000400100401","robotPosition":"7,1,2","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (9, 19, 9, 18, 9, 17)
East: False
Checking Free towards FORWARD
Cell to check : (6, 16, 7, 16, 8, 16)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,18
Checking arrow @ 9,17
Mark Arrow Taken @ (9, 18, 'EAST')
Mark Arrow Taken @ (9, 17, 'EAST')
Arrow Possible @ Robot Position: (7, 17, 'SOUTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (7, 17, 'SOUTH')
Check Arrow @ (9, 18, 'EAST')
Check Arrow @ (9, 17, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ff03fe07fe0ffc1ff83","obstacleMap":"00000000604000180c03c000201004000400100401","robotPosition":"7,2,2","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ff03fe07fe0ffc1ff83","obstacleMap":"00000000604000180c03c000201004000400100401","robotPosition":"7,17,2","ARrobotPosition":"7,2,2","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,1,
Data from Arduino: ['1,0,0,0,0,1,']
arduino_recv_queue: ['1,0,0,0,0,1,']
RECEIVED ARDUINO 1,0,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 18, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 10.0, 10.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 12.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 12.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 1, 0]
--------------------------------------------------
Total move counts: 63
Checking arrow @ 9,18
Checking arrow @ 9,17
Arrow Not Possible @ Robot Position: (7, 17, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {250: 0, 251: 0}
RECEIVED PRi: ARQCV1: 0.06,10.79
Data from Arduino: ['QCV1: 0.06,10.79']
arduino_recv_queue: ['QCV1: 0.06,10.79']
RECEIVED PRi: ARQCV2: 0.12,34.70
ARQCV3: 0.02,29.76
ARQCV4: 2.84,135.43
ARQCV5: 0.29,97.86
ARQCV6: 0.02,18.78
Data from Arduino: ['QCV2: 0.12,34.70\n', 'QCV3: 0.02,29.76\n', 'QCV4: 2.84,135.43\n', 'QCV5: 0.29,97.86\n', 'QCV6: 0.02,18.78']
arduino_recv_queue: ['QCV1: 0.06,10.79', 'QCV2: 0.12,34.70\n', 'QCV3: 0.02,29.76\n', 'QCV4: 2.84,135.43\n', 'QCV5: 0.29,97.86\n', 'QCV6: 0.02,18.78']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ff03ff87fe0ffc1ff83","obstacleMap":"00000000604000180c03c0002010040004000401004","robotPosition":"7,2,2","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (9, 18, 9, 17, 9, 16)
East: False
Checking Free towards FORWARD
Cell to check : (6, 15, 7, 15, 8, 15)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,17
Checking arrow @ 9,16
Arrow Not Possible @ Robot Position: (7, 16, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ff03ff87fe0ffc1ff83","obstacleMap":"00000000604000180c03c0002010040004000401004","robotPosition":"7,3,2","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ff03ff87fe0ffc1ff83","obstacleMap":"00000000604000180c03c0002010040004000401004","robotPosition":"7,16,2","ARrobotPosition":"7,3,2","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,2,0,0,0,
Data from Arduino: ['1,0,2,0,0,0,']
arduino_recv_queue: ['1,0,2,0,0,0,']
RECEIVED ARDUINO 1,0,2,0,0,0,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 17, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 14.0, 14.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 8.0, 8.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (7, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 7.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 2.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (3, 15, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 64
Checking arrow @ 9,17
Checking arrow @ 9,16
Arrow Not Possible @ Robot Position: (7, 16, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {235: 0, 236: 0}
RECEIVED PRi: ARQCV1: 0.02,10.79
ARQCV2: 0.06,35.69
ARQCV3: 0.08,18.62
ARQCV4: 0.63,349.46
ARQCV5: 0.27,74.74
ARQCV6: 0.08,56.43
Data from Arduino: ['QCV1: 0.02,10.79\n', 'QCV2: 0.06,35.69\n', 'QCV3: 0.08,18.62\n', 'QCV4: 0.63,349.46\n', 'QCV5: 0.27,74.74\n', 'QCV6: 0.08,56.43']
arduino_recv_queue: ['QCV1: 0.02,10.79\n', 'QCV2: 0.06,35.69\n', 'QCV3: 0.08,18.62\n', 'QCV4: 0.63,349.46\n', 'QCV5: 0.27,74.74\n', 'QCV6: 0.08,56.43']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ffc3ff87fe0ffc1ff83","obstacleMap":"00000000604000180c03c0002010040001000100401","robotPosition":"7,3,2","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (9, 17, 9, 16, 9, 15)
East: False
Checking Free towards FORWARD
Cell to check : (6, 14, 7, 14, 8, 14)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,16
Checking arrow @ 9,15
Arrow Not Possible @ Robot Position: (7, 15, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ffc3ff87fe0ffc1ff83","obstacleMap":"00000000604000180c03c0002010040001000100401","robotPosition":"7,4,2","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ffc3ff87fe0ffc1ff83","obstacleMap":"00000000604000180c03c0002010040001000100401","robotPosition":"7,15,2","ARrobotPosition":"7,4,2","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,1,0,0,0,
Data from Arduino: ['0,0,1,0,0,0,']
arduino_recv_queue: ['0,0,1,0,0,0,']
RECEIVED ARDUINO 0,0,1,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 4.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 3.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 13, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 12.0, 12.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (7, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 11.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (2, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (1, 14, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 65
Checking arrow @ 9,16
Checking arrow @ 9,15
Arrow Not Possible @ Robot Position: (7, 15, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {220: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ffc3ff87fe0ffc1ff83","obstacleMap":"00000000604000180c03c0002010000001000100401","robotPosition":"7,4,2","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (9, 16, 9, 15, 9, 14)
East: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.33,94.60
Data from Arduino: ['QCV1: 0.33,94.60']
arduino_recv_queue: ['QCV1: 0.33,94.60']
RECEIVED PRi: ARQCV2: 0.08,35.16
ARQCV3: 0.01,8.25
ARQCV4: 0.21,135.43
ARQCV5: 0.20,74.74
ARQCV6: 0.03,59.27
Data from Arduino: ['QCV2: 0.08,35.16\n', 'QCV3: 0.01,8.25\n', 'QCV4: 0.21,135.43\n', 'QCV5: 0.20,74.74\n', 'QCV6: 0.03,59.27']
arduino_recv_queue: ['QCV2: 0.08,35.16\n', 'QCV3: 0.01,8.25\n', 'QCV4: 0.21,135.43\n', 'QCV5: 0.20,74.74\n', 'QCV6: 0.03,59.27']
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (7, 15, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 6,17
Checking arrow @ 7,17
Arrow Not Possible @ Robot Position: (7, 15, 'EAST')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 7,17
Checking arrow @ 8,17
Arrow Not Possible @ Robot Position: (8, 15, 'EAST')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ffc3ff87fe0ffc1ff83","obstacleMap":"00000000604000180c03c0002010000001000100401","robotPosition":"8,4,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fc0ff81ffe3fe07fc0fff1ffc3ff87fe0ffc1ff83","obstacleMap":"00000000604000180c03c0002010000001000100401","robotPosition":"8,15,1","ARrobotPosition":"8,4,1","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,0,0,0,0,
Data from Arduino: ['0,1,0,0,0,0,']
arduino_recv_queue: ['0,1,0,0,0,0,']
RECEIVED ARDUINO 0,1,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 18, 0.0, 2.0)
RECEIVED PRi: ARQCV1: 0.05,44.20
ARQCV2: 0.01,10.45
ARQCV3: 0.38,59.98
ARQCV4: 0.33,56.11
ARQCV5: 0.05,37.87
ARQCV6: 0.41,100.41
perm
Data from Arduino: ['QCV1: 0.05,44.20\n', 'QCV2: 0.01,10.45\n', 'QCV3: 0.38,59.98\n', 'QCV4: 0.33,56.11\n', 'QCV5: 0.05,37.87\n', 'QCV6: 0.41,100.41']
br
arduino_recv_queue: ['QCV1: 0.05,44.20\n', 'QCV2: 0.01,10.45\n', 'QCV3: 0.38,59.98\n', 'QCV4: 0.33,56.11\n', 'QCV5: 0.05,37.87\n', 'QCV6: 0.41,100.41']
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 17, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 18.0, 18.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (11, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (11, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (11, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 11, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 11, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 10, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 10, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 67
Checking arrow @ 7,17
Checking arrow @ 8,17
Arrow Not Possible @ Robot Position: (8, 15, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {160: 0, 145: 0, 252: 0, 237: 0, 190: 0, 205: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fe0ffc1ffe3ff07fe0fff1ffe3ffc7fe0ffc1ff83","obstacleMap":"00000000604000180a00f000080200000008000401004","robotPosition":"8,4,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (7, 17, 8, 17, 9, 17)
North: False
Checking Free towards FORWARD
Cell to check : (10, 16, 10, 15, 10, 14)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 8,17
Checking arrow @ 9,17
Mark Arrow Taken @ (8, 17, 'NORTH')
Mark Arrow Taken @ (9, 17, 'NORTH')
Arrow Possible @ Robot Position: (9, 15, 'EAST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (9, 15, 'EAST')
Check Arrow @ (8, 17, 'NORTH')
Check Arrow @ (9, 17, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fe0ffc1ffe3ff07fe0fff1ffe3ffc7fe0ffc1ff83","obstacleMap":"00000000604000180a00f000080200000008000401004","robotPosition":"9,4,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07fe0ffc1ffe3ff07fe0fff1ffe3ffc7fe0ffc1ff83","obstacleMap":"00000000604000180a00f000080200000008000401004","robotPosition":"9,15,1","ARrobotPosition":"9,4,1","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,0,
Data from Arduino: ['0,0,0,0,0,0,']
arduino_recv_queue: ['0,0,0,0,0,0,']
RECEIVED ARDUINO 0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 18, 0.0, 2.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (12, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 16, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (12, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 15, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (10, 11, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 11, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (10, 10, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 68
Checking arrow @ 8,17
Checking arrow @ 9,17
Arrow Not Possible @ Robot Position: (9, 15, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {161: 0, 146: 0, 206: 0, 281: 0, 266: 0, 191: 0, 253: 0, 238: 0, 223: 0}
RECEIVED PRi: ARQCV1: 0.03,42.76
Data from Arduino: ['QCV1: 0.03,42.76']
arduino_recv_queue: ['QCV1: 0.03,42.76']
RECEIVED PRi: ARQCV2: 0.06,32.61
ARQCV3: 0.13,50.69
ARQCV4: 0.19,44.60
ARQCV5: 0.11,36.50
ARQCV6: 0.25,101.32
Data from Arduino: ['QCV2: 0.06,32.61\n', 'QCV3: 0.13,50.69\n', 'QCV4: 0.19,44.60\n', 'QCV5: 0.11,36.50\n', 'QCV6: 0.25,101.32']
arduino_recv_queue: ['QCV1: 0.03,42.76', 'QCV2: 0.06,32.61\n', 'QCV3: 0.13,50.69\n', 'QCV4: 0.19,44.60\n', 'QCV5: 0.11,36.50\n', 'QCV6: 0.25,101.32']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff0ffe1ffe3ff87ff0fff9fff3ffe7ff0ffe1ff83","obstacleMap":"000000006040001809003c0002004000000020000801002","robotPosition":"9,4,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (8, 17, 9, 17, 10, 17)
North: False
Checking Free towards FORWARD
Cell to check : (11, 16, 11, 15, 11, 14)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,17
Checking arrow @ 10,17
Arrow Not Possible @ Robot Position: (10, 15, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff0ffe1ffe3ff87ff0fff9fff3ffe7ff0ffe1ff83","obstacleMap":"000000006040001809003c0002004000000020000801002","robotPosition":"10,4,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff0ffe1ffe3ff87ff0fff9fff3ffe7ff0ffe1ff83","obstacleMap":"000000006040001809003c0002004000000020000801002","robotPosition":"10,15,1","ARrobotPosition":"10,4,1","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,0,
Data from Arduino: ['1,0,0,0,0,0,']
arduino_recv_queue: ['1,0,0,0,0,0,']
RECEIVED ARDUINO 1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 17, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 22.0, 22.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 18, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 16, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (13, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 15, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (13, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (11, 11, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (11, 10, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 10, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 9, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 69
Checking arrow @ 9,17
Checking arrow @ 10,17
Arrow Not Possible @ Robot Position: (10, 15, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {224: 0, 192: 0, 162: 0, 147: 0, 207: 0, 282: 0, 267: 0, 254: 0, 239: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffe3ffc7ff8fffdfffbfff7ff8fff1ff83","obstacleMap":"000000006040001808800f000080080000000080001001001","robotPosition":"10,4,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (9, 17, 10, 17, 11, 17)
North: False
Checking Free towards FORWARD
Cell to check : (12, 16, 12, 15, 12, 14)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.01,10.56
ARQCV2: 0.04,33.96
ARQCV3: 0.08,39.72
ARQCV4: 0.14,39.72
ARQCV5: 0.10,37.29
ARQCV6: 0.59,177.34
Data from Arduino: ['QCV1: 0.01,10.56\n', 'QCV2: 0.04,33.96\n', 'QCV3: 0.08,39.72\n', 'QCV4: 0.14,39.72\n', 'QCV5: 0.10,37.29\n', 'QCV6: 0.59,177.34']
arduino_recv_queue: ['QCV1: 0.01,10.56\n', 'QCV2: 0.04,33.96\n', 'QCV3: 0.08,39.72\n', 'QCV4: 0.14,39.72\n', 'QCV5: 0.10,37.29\n', 'QCV6: 0.59,177.34']
RECEIVED PRi: ARMoving Forward
ARM
Data from Arduino: ['Moving Forward\n', 'M']
arduino_recv_queue: ['Moving Forward\n', 'M']
RECEIVED ARDUINO M
Checking arrow @ 10,17
Checking arrow @ 11,17
Arrow Not Possible @ Robot Position: (11, 15, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffe3ffc7ff8fffdfffbfff7ff8fff1ff83","obstacleMap":"000000006040001808800f000080080000000080001001001","robotPosition":"11,4,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffe3ffc7ff8fffdfffbfff7ff8fff1ff83","obstacleMap":"000000006040001808800f000080080000000080001001001","robotPosition":"11,15,1","ARrobotPosition":"11,4,1","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,1,
Data from Arduino: ['0,0,0,0,0,1,']
arduino_recv_queue: ['0,0,0,0,0,1,']
RECEIVED PRi: ARQCV1: 0.13,39.98
ARQCV2: 0.03,33.96
Data from Arduino: ['QCV1: 0.13,39.98\n', 'QCV2: 0.03,33.96']
arduino_recv_queue: ['0,0,0,0,0,1,', 'QCV1: 0.13,39.98\n', 'QCV2: 0.03,33.96']
RECEIVED ARDUINO 0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 18, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (14, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 16, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (14, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 70
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 15, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (11, 15, 1)
Status of cells surrounding robot: {0: [0, 0, 0], 1: [2, 0, 0], 2: [0, 0, 0], 3: [0, 0, 0]}
Checking arrow @ 10,17
Checking arrow @ 11,17
Arrow Not Possible @ Robot Position: (11, 15, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {240: 0, 225: 0, 283: 0, 268: 0, 255: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffe3ffc7ff8ffffffffffffffcfff9ff83","obstacleMap":"000000006040001808800f00008008000000002000020010008","robotPosition":"11,4,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (10, 17, 11, 17, 12, 17)
North: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARQCV3: 0.03,31.31
ARQCV4: 0.17,30.14
ARQCV5: 0.03,32.39
ARQCV6: 0.02,25.52
Data from Arduino: ['QCV3: 0.03,31.31\n', 'QCV4: 0.17,30.14\n', 'QCV5: 0.03,32.39\n', 'QCV6: 0.02,25.52']
arduino_recv_queue: ['QCV3: 0.03,31.31\n', 'QCV4: 0.17,30.14\n', 'QCV5: 0.03,32.39\n', 'QCV6: 0.02,25.52']
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 15, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 13,16
Checking arrow @ 13,15
Arrow Not Possible @ Robot Position: (11, 15, 'SOUTH')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffe3ffc7ff8ffffffffffffffcfff9ff83","obstacleMap":"000000006040001808800f00008008000000002000020010008","robotPosition":"11,4,2","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffe3ffc7ff8ffffffffffffffcfff9ff83","obstacleMap":"000000006040001808800f00008008000000002000020010008","robotPosition":"11,15,2","ARrobotPosition":"11,4,2","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,0,
Data from Arduino: ['0,0,0,0,0,0,']
arduino_recv_queue: ['0,0,0,0,0,0,']
RECEIVED ARDUINO 0,0,0,0,0,0,
RECEIVED PRi: ARQCV1: 0.03,31.95
ARQCV2: 0.03,29.24
ARQCV3: 0.03,29.95
ARQCV4: 2.12,40.98
ARQCV5: 0.23,49.32
ARQCV6: 0.21,83.39Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 10.0)

Current Sesnsor Reading: x, y, count, total: (14, 16, 0.0, 2.0)
Data from Arduino: ['QCV1: 0.03,31.95\n', 'QCV2: 0.03,29.24\n', 'QCV3: 0.03,29.95\n', 'QCV4: 2.12,40.98\n', 'QCV5: 0.23,49.32\n', 'QCV6: 0.21,83.39']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 16, 0.0, 4.0)
arduino_recv_queue: ['QCV1: 0.03,31.95\n', 'QCV2: 0.03,29.24\n', 'QCV3: 0.03,29.95\n', 'QCV4: 2.12,40.98\n', 'QCV5: 0.23,49.32\n', 'QCV6: 0.21,83.39']
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 2.0)
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 1, 2)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 1.0, 2.0)
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (11, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 4.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0, 1)
perm
br
--------------------------------------------------
updated_cells (sensor_readings): {208: 0, 193: 0, 178: 1}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffcfff9ff83","obstacleMap":"000000006040001808800f00804002000000000400004002001","robotPosition":"11,4,2","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 15, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 10,17
Checking arrow @ 11,17
Arrow Not Possible @ Robot Position: (11, 15, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffcfff9ff83","obstacleMap":"000000006040001808800f00804002000000000400004002001","robotPosition":"11,4,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffcfff9ff83","obstacleMap":"000000006040001808800f00804002000000000400004002001","robotPosition":"11,15,1","ARrobotPosition":"11,4,1","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffcfff9ff83","obstacleMap":"000000006040001808800f00804002000000000400004002001","robotPosition":"11,4,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (10, 17, 11, 17, 12, 17)
North: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 15, 0)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 9,14
Checking arrow @ 9,15
Arrow Not Possible @ Robot Position: (11, 15, 'NORTH')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,15
Checking arrow @ 9,16
Arrow Not Possible @ Robot Position: (11, 16, 'NORTH')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffcfff9ff83","obstacleMap":"000000006040001808800f00804002000000000400004002001","robotPosition":"11,3,0","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffcfff9ff83","obstacleMap":"000000006040001808800f00804002000000000400004002001","robotPosition":"11,16,0","ARrobotPosition":"11,3,0","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,0,0,0,1,
Data from Arduino: ['0,1,0,0,0,1,']
arduino_recv_queue: ['0,1,0,0,0,1,']
RECEIVED ARDUINO 0,1,0,0,0,1,
RECEIVED PRi: ARQCV1: 0.36,90.08
ARQCV2: 0.00,7.24
ARQCV3: 0.02,30.34
ARQCV4: 0.10,29.57
ARQCV5: 0.02,31.95
Sensor 0
No Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.36,90.08\n', 'QCV2: 0.00,7.24\n', 'QCV3: 0.02,30.34\n', 'QCV4: 0.10,29.57\n', 'QCV5: 0.02,31.95']
Current Sesnsor Reading: x, y, count, total: (9, 15, 0, 4)
arduino_recv_queue: ['QCV1: 0.36,90.08\n', 'QCV2: 0.00,7.24\n', 'QCV3: 0.02,30.34\n', 'QCV4: 0.10,29.57\n', 'QCV5: 0.02,31.95']
perm
Current Sesnsor Reading: x, y, count, total: (8, 15, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 17, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 26.0, 26.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 18, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (11, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 18, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (12, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [2, 2]
--------------------------------------------------
Total move counts: 74
Checking Whether Calibration Possible...
Robot Position @ (11, 16, 0)
cells_left: [0, 0]
cells_right: [1, 0]
Getting cell status surrounding robot...
Robot Position @ (11, 16, 0)
Status of cells surrounding robot: {0: [0, 0, 0], 1: [2, 0, 0], 2: [0, 0, 0], 3: [0, 0, 1]}
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARQCV6: 0.02,27.59
Data from Arduino: ['QCV6: 0.02,27.59']
arduino_recv_queue: ['QCV6: 0.02,27.59']
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 16, 3)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front T
SENDING ART

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 16, 0)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 9,15
Checking arrow @ 9,16
Arrow Not Possible @ Robot Position: (11, 16, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {296: 0, 297: 0, 298: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffcfff9fff3","obstacleMap":"000000006040001808800f008040020000000004000040020010","robotPosition":"11,3,0","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (9, 17, 9, 16, 15, 9)
West: False
Checking Free towards FORWARD
Cell to check : (10, 18, 11, 18, 12, 18)
North: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 16, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 10,18
Checking arrow @ 11,18
Arrow Not Possible @ Robot Position: (11, 16, 'EAST')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffcfff9fff3","obstacleMap":"000000006040001808800f008040020000000004000040020010","robotPosition":"11,3,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffcfff9fff3","obstacleMap":"000000006040001808800f008040020000000004000040020010","robotPosition":"11,16,1","ARrobotPosition":"11,3,1","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,4,
Data from Arduino: ['0,0,0,0,0,4,']
arduino_recv_queue: ['0,0,0,0,0,4,']
RECEIVED PRi: ARQCV1: 0.01,30.94
ARQCV2: 0.06,28.17
ARQCV3: 0.01,29.05
ARQCV4: 0.06,27.83
ARQCV5: 0.08,30.54
ARQCV6: 0.05,34.33RECEIVED ARDUINO 0,0,0,0,0,4,

Sensor 0
Data from Arduino: ['QCV1: 0.01,30.94\n', 'QCV2: 0.06,28.17\n', 'QCV3: 0.01,29.05\n', 'QCV4: 0.06,27.83\n', 'QCV5: 0.08,30.54\n', 'QCV6: 0.05,34.33']
No Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.01,30.94\n', 'QCV2: 0.06,28.17\n', 'QCV3: 0.01,29.05\n', 'QCV4: 0.06,27.83\n', 'QCV5: 0.08,30.54\n', 'QCV6: 0.05,34.33']
Current Sesnsor Reading: x, y, count, total: (10, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (10, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 18, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (12, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 17, 0.0, 2.0)
br
ie
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (14, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 16, 0.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (14, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 4.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 6.0)
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 5.0, 6.0)
br
--------------------------------------------------
updated_cells (sensor_readings): {269: 0, 270: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffff9fff3","obstacleMap":"000000006040001808800f0080400200000000040000400080040","robotPosition":"11,3,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 16, 0)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 9,15
Checking arrow @ 9,16
Arrow Not Possible @ Robot Position: (11, 16, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffff9fff3","obstacleMap":"000000006040001808800f0080400200000000040000400080040","robotPosition":"11,3,0","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffff9fff3","obstacleMap":"000000006040001808800f0080400200000000040000400080040","robotPosition":"11,16,0","ARrobotPosition":"11,3,0","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffff9fff3","obstacleMap":"000000006040001808800f0080400200000000040000400080040","robotPosition":"11,3,0","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (9, 17, 9, 16, 15, 9)
West: False
Checking Free towards FORWARD
Cell to check : (10, 18, 11, 18, 12, 18)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,16
Checking arrow @ 9,17
Mark Arrow Taken @ (9, 16, 'WEST')
Mark Arrow Taken @ (9, 17, 'WEST')
Arrow Possible @ Robot Position: (11, 17, 'NORTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (11, 17, 'NORTH')
Check Arrow @ (9, 16, 'WEST')
Check Arrow @ (9, 17, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffff9fff3","obstacleMap":"000000006040001808800f0080400200000000040000400080040","robotPosition":"11,2,0","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffff9fff3","obstacleMap":"000000006040001808800f0080400200000000040000400080040","robotPosition":"11,17,0","ARrobotPosition":"11,2,0","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,2,2,2,1,
Data from Arduino: ['0,1,2,2,2,1,']
arduino_recv_queue: ['0,1,2,2,2,1,']
RECEIVED ARDUINO 0,1,2,2,2,1,
RECEIVED PRi: ARQCV1: 0.20,60.67
ARQCV2: 0.01,9.06
ARQCV3: 0.01,20.69
ARQCV4: 0.02,20.40
ARQCV5: 0.01,20.79
ARQCV6: 0.01,25.52
Sensor 0
Data from Arduino: ['QCV1: 0.20,60.67\n', 'QCV2: 0.01,9.06\n', 'QCV3: 0.01,20.69\n', 'QCV4: 0.02,20.40\n', 'QCV5: 0.01,20.79\n', 'QCV6: 0.01,25.52']
No Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.20,60.67\n', 'QCV2: 0.01,9.06\n', 'QCV3: 0.01,20.69\n', 'QCV4: 0.02,20.40\n', 'QCV5: 0.01,20.79\n', 'QCV6: 0.01,25.52']
Current Sesnsor Reading: x, y, count, total: (9, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 16, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 18, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 14.0, 14.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 8.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 6.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 8.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [2, 2]
--------------------------------------------------
Total move counts: 79
Checking Whether Calibration Possible...
Robot Position @ (11, 17, 0)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 9,16
Checking arrow @ 9,17
Arrow Not Possible @ Robot Position: (11, 17, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffff9fff3","obstacleMap":"000000006040001808800f0080400200000000040000400080040","robotPosition":"11,2,0","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (9, 18, 9, 17, 16, 9)
West: False
Checking Free towards FORWARD
Cell to check : (10, 19, 11, 19, 12, 19)
North: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 17, 1)
cells_left: [0, 1]
cells_right: [0, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 10,19
Checking arrow @ 11,19
Arrow Not Possible @ Robot Position: (11, 17, 'EAST')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffff9fff3","obstacleMap":"000000006040001808800f0080400200000000040000400080040","robotPosition":"11,2,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffff9fff3","obstacleMap":"000000006040001808800f0080400200000000040000400080040","robotPosition":"11,17,1","ARrobotPosition":"11,2,1","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR2,2,0,0,0,5,
Data from Arduino: ['2,2,0,0,0,5,']
arduino_recv_queue: ['2,2,0,0,0,5,']
RECEIVED ARDUINO 2,2,0,0,0,5,
Sensor 0
RECEIVED PRi: ARQCV1: 0.02,20.14
ARQCV2: 0.03,20.05
ARQCV3: 0.13,28.17
ARQCV4: 0.18,27.20
ARQCV5: 0.12,31.95
ARQCV6: 0.06,42.70
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.02,20.14\n', 'QCV2: 0.03,20.05\n', 'QCV3: 0.13,28.17\n', 'QCV4: 0.18,27.20\n', 'QCV5: 0.12,31.95\n', 'QCV6: 0.06,42.70']
br
arduino_recv_queue: ['QCV1: 0.02,20.14\n', 'QCV2: 0.03,20.05\n', 'QCV3: 0.13,28.17\n', 'QCV4: 0.18,27.20\n', 'QCV5: 0.12,31.95\n', 'QCV6: 0.06,42.70']
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 12.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 12.0)
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 18, 0.0, 2.0)
br
ie
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 17, 0.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (14, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 16, 0.0, 8.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 12.0)
br
Current Sesnsor Reading: x, y, count, total: (12, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (12, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 7.0, 8.0)
br
--------------------------------------------------
updated_cells (sensor_readings): {284: 0, 285: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffffffff3","obstacleMap":"000000006040001808800f0080400200000000040000400080010","robotPosition":"11,2,1","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 17, 0)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 9,16
Checking arrow @ 9,17
Arrow Not Possible @ Robot Position: (11, 17, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffffffff3","obstacleMap":"000000006040001808800f0080400200000000040000400080010","robotPosition":"11,2,0","arrowPosition":"2,8,0;2,8,0;9,1,1"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffffffff3","obstacleMap":"000000006040001808800f0080400200000000040000400080010","robotPosition":"11,17,0","ARrobotPosition":"11,2,0","arrowPosition":"11,2,0,11,2,0,18,9,1","ARarrowPosition":"2,8,0;2,8,0;9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffffffff3","obstacleMap":"000000006040001808800f0080400200000000040000400080010","robotPosition":"11,2,0","arrowPosition":"2,8,0;2,8,0;9,1,1"}

Checking Free towards LEFT
Cell to check : (9, 18, 9, 17, 16, 9)
West: False
Checking Free towards FORWARD
Cell to check : (10, 19, 11, 19, 12, 19)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,17
Checking arrow @ 9,18
Mark Arrow Taken @ (9, 17, 'WEST')
Mark Arrow Taken @ (9, 18, 'WEST')
Arrow Possible @ Robot Position: (11, 18, 'NORTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP01
Data from RPi: ['01']
rpi_recv_queue: ['01']
RECEIVED RPI 01
Recognizing Image taken with robot position @ (11, 18, 'NORTH')
Check Arrow @ (9, 17, 'WEST')
Check Arrow @ (9, 18, 'WEST')
Detected Arrow @ (9, 18, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffffffff3","obstacleMap":"000000006040001808800f0080400200000000040000400080010","robotPosition":"11,1,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffffffff3","obstacleMap":"000000006040001808800f0080400200000000040000400080010","robotPosition":"11,18,0","ARrobotPosition":"11,1,0","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,1,1,1,1,
Data from Arduino: ['1,1,1,1,1,1,']
arduino_recv_queue: ['1,1,1,1,1,1,']
RECEIVED ARDUINO 1,1,1,1,1,1,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 17, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 30.0, 30.0)
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 19, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 14.0, 14.0)
br
Sensor 2
Has Obstacle in Covered Range
ie
br
Sensor 3
Has Obstacle in Covered Range
ie
br
Sensor 4
Has Obstacle in Covered Range
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [2, 2]
--------------------------------------------------
Total move counts: 82
Checking Whether Calibration Possible...
Robot Position @ (11, 18, 0)
cells_left: [1, 0]
cells_right: [1, 0]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.01,10.06
Data from Arduino: ['QCV1: 0.01,10.06']
arduino_recv_queue: ['QCV1: 0.01,10.06']
RECEIVED PRi: ARQCV2: 0.02,10.11
ARQCV3: 0.01,10.26
ARQCV4: 0.02,10.16
ARQCV5: 0.01,11.24
ARQCV6: 0.02,25.11
Data from Arduino: ['QCV2: 0.02,10.11\n', 'QCV3: 0.01,10.26\n', 'QCV4: 0.02,10.16\n', 'QCV5: 0.01,11.24\n', 'QCV6: 0.02,25.11']
arduino_recv_queue: ['QCV2: 0.02,10.11\n', 'QCV3: 0.01,10.26\n', 'QCV4: 0.02,10.16\n', 'QCV5: 0.01,11.24\n', 'QCV6: 0.02,25.11']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,17
Checking arrow @ 9,18
Arrow Not Possible @ Robot Position: (11, 18, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffffffff3","obstacleMap":"000000006040001808800f0080400200000000040000400080010","robotPosition":"11,1,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (9, 19, 9, 18, 17, 9)
West: False
Checking Free towards FORWARD
Cell to check : (10, 20, 11, 20, 12, 20)
ie
Checking Free towards LEFT
Cell to check : (9, 19, 9, 18, 17, 9)
West: False
Checking Free towards FORWARD
Cell to check : (10, 20, 11, 20, 12, 20)
ie
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 18, 1)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (11, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffffffff3","obstacleMap":"000000006040001808800f0080400200000000040000400080010","robotPosition":"11,1,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcffffffffffffffffffffff3","obstacleMap":"000000006040001808800f0080400200000000040000400080010","robotPosition":"11,18,1","ARrobotPosition":"11,1,1","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
RECEIVED PRi: ARQCV1: 0.02,10.16
ARQCV2: 0.01,10.24
ARQCV3: 0.14,28.34
ARQCV4: 0.12,27.69
ARQCV5: 0.13,31.73
ARQCV6: 0.08,51.18
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.02,10.16\n', 'QCV2: 0.01,10.24\n', 'QCV3: 0.14,28.34\n', 'QCV4: 0.12,27.69\n', 'QCV5: 0.13,31.73\n', 'QCV6: 0.08,51.18']
ie
arduino_recv_queue: ['QCV1: 0.02,10.16\n', 'QCV2: 0.01,10.24\n', 'QCV3: 0.14,28.34\n', 'QCV4: 0.12,27.69\n', 'QCV5: 0.13,31.73\n', 'QCV6: 0.08,51.18']
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 19, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 18, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 18, 0.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 17, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (14, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 17, 0.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 11.0)
br
--------------------------------------------------
Total move counts: 83
Arrow Not Possible @ Robot Position: (11, 18, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {299: 0, 300: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcfffffffffffffffffffffff","obstacleMap":"000000006040001808800f00804002000000000400004000800100","robotPosition":"11,1,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (10, 20, 11, 20, 12, 20)
ie
Checking Free towards FORWARD
Cell to check : (13, 19, 13, 18, 13, 17)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (12, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcfffffffffffffffffffffff","obstacleMap":"000000006040001808800f00804002000000000400004000800100","robotPosition":"12,1,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffe7ffcfffffffffffffffffffffff","obstacleMap":"000000006040001808800f00804002000000000400004000800100","robotPosition":"12,18,1","ARrobotPosition":"12,1,1","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,2,2,2,0,
Data from Arduino: ['1,1,2,2,2,0,']
arduino_recv_queue: ['1,1,2,2,2,0,']
RECEIVED ARDUINO 1,1,2,2,2,0,
RECEIVED PRi: ARQCV1: 0.02,10.35
ARQCV2: 0.02,10.29
ARQCV3: 0.02,19.60
ARQCV4: 0.02,18.76
ARQCV5: 0.02,21.07
ARQCV6: 0.05,50.67
Sensor 0
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.02,10.35\n', 'QCV2: 0.02,10.29\n', 'QCV3: 0.02,19.60\n', 'QCV4: 0.02,18.76\n', 'QCV5: 0.02,21.07\n', 'QCV6: 0.05,50.67']
ie
arduino_recv_queue: ['QCV1: 0.02,10.35\n', 'QCV2: 0.02,10.29\n', 'QCV3: 0.02,19.60\n', 'QCV4: 0.02,18.76\n', 'QCV5: 0.02,21.07\n', 'QCV6: 0.05,50.67']
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 19, 0.0, 6.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 18, 0.0, 8.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 17, 0.0, 10.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 22.0)
Current Sesnsor Reading: x, y, count, total: (13, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (13, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (13, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 84
Arrow Not Possible @ Robot Position: (12, 18, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {209: 0, 194: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3fff7ffefffffffffffffffffffffff","obstacleMap":"000000006040001808800f00804001000000000100001000200040","robotPosition":"12,1,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (11, 20, 12, 20, 13, 20)
ie
Checking Free towards FORWARD
Cell to check : (14, 19, 14, 18, 14, 17)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 18, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3fff7ffefffffffffffffffffffffff","obstacleMap":"000000006040001808800f00804001000000000100001000200040","robotPosition":"13,1,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3fff7ffefffffffffffffffffffffff","obstacleMap":"000000006040001808800f00804001000000000100001000200040","robotPosition":"13,18,1","ARrobotPosition":"13,1,1","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,1,1,1,0,
Data from Arduino: ['1,1,1,1,1,0,']
arduino_recv_queue: ['1,1,1,1,1,0,']
RECEIVED ARDUINO 1,1,1,1,1,0,
RECEIVED PRi: ARQCV1: 0.03,10.59
ARQCV2: 0.02,10.51
ARQCV3: 0.01,9.54
ARQCV4: 0.01,9.29
ARQCV5: 0.01,10.18
ARQCV6: 0.04,50.42Sensor 0

Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.03,10.59\n', 'QCV2: 0.02,10.51\n', 'QCV3: 0.01,9.54\n', 'QCV4: 0.01,9.29\n', 'QCV5: 0.01,10.18\n', 'QCV6: 0.04,50.42']
ie
arduino_recv_queue: ['QCV1: 0.03,10.59\n', 'QCV2: 0.02,10.51\n', 'QCV3: 0.01,9.54\n', 'QCV4: 0.01,9.29\n', 'QCV5: 0.01,10.18\n', 'QCV6: 0.04,50.42']
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
ie
br
Sensor 3
Has Obstacle in Covered Range
ie
br
Sensor 4
Has Obstacle in Covered Range
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 16, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (14, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (14, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 85
Arrow Not Possible @ Robot Position: (13, 18, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {210: 0, 195: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,1,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (12, 20, 13, 20, 14, 20)
ie
Checking Free towards FORWARD
Cell to check : (15, 19, 15, 18, 15, 17)
ie
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 18, 2)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 18, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,1,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,18,2","ARrobotPosition":"13,1,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,1,
Data from Arduino: ['1,1,0,0,0,1,']
arduino_recv_queue: ['1,1,0,0,0,1,']
RECEIVED ARDUINO 1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
RECEIVED PRi: ARQCV1: 0.01,9.41
ARQCV2: 0.01,9.46
ARQCV3: 0.25,57.99
ARQCV4: 0.64,32.17
ARQCV5: 0.28,35.69
ARQCV6: 0.02,25.59
No Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.01,9.41\n', 'QCV2: 0.01,9.46\n', 'QCV3: 0.25,57.99\n', 'QCV4: 0.64,32.17\n', 'QCV5: 0.28,35.69\n', 'QCV6: 0.02,25.59']
Current Sesnsor Reading: x, y, count, total: (14, 16, 0, 4)
arduino_recv_queue: ['QCV1: 0.01,9.41\n', 'QCV2: 0.01,9.46\n', 'QCV3: 0.25,57.99\n', 'QCV4: 0.64,32.17\n', 'QCV5: 0.28,35.69\n', 'QCV6: 0.02,25.59']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 16, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (14, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 8.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 26.0)
Current Sesnsor Reading: x, y, count, total: (13, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 14.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 15, 0.0, 2.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 86
Arrow Not Possible @ Robot Position: (13, 18, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,1,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 19, 15, 18, 15, 17)
ie
Checking Free towards FORWARD
Cell to check : (12, 16, 13, 16, 14, 16)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 17, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,2,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,17,2","ARrobotPosition":"13,2,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 7.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 13.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 2.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 16, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 16, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 16, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 87
Arrow Not Possible @ Robot Position: (13, 17, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
RECEIVED PRi: ARQCV1: 0.01,9.43
Data from Arduino: ['QCV1: 0.01,9.43']
arduino_recv_queue: ['QCV1: 0.01,9.43']
RECEIVED PRi: ARQCV2: 0.01,9.48
ARQCV3: 0.12,47.92
ARQCV4: 0.54,34.45
ARQCV5: 0.07,36.78
ARQCV6: 0.15,63.84
Data from Arduino: ['QCV2: 0.01,9.48\n', 'QCV3: 0.12,47.92\n', 'QCV4: 0.54,34.45\n', 'QCV5: 0.07,36.78\n', 'QCV6: 0.15,63.84']
arduino_recv_queue: ['QCV1: 0.01,9.43', 'QCV2: 0.01,9.48\n', 'QCV3: 0.12,47.92\n', 'QCV4: 0.54,34.45\n', 'QCV5: 0.07,36.78\n', 'QCV6: 0.15,63.84']
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,2,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 18, 15, 17, 15, 16)
ie
Checking Free towards FORWARD
Cell to check : (12, 15, 13, 15, 14, 15)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 16, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,3,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,16,2","ARrobotPosition":"13,3,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 15.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 15, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 15, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 15, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 88
Arrow Not Possible @ Robot Position: (13, 16, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,3,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 17, 15, 16, 15, 15)
ie
Checking Free towards FORWARD
Cell to check : (12, 14, 13, 14, 14, 14)
South: True
RECEIVED PRi: ARQCV1: 0.03,9.62
Forward Free
Data from Arduino: ['QCV1: 0.03,9.62']
arduino_recv_queue: ['QCV1: 0.03,9.62']
SENDING ARW
RECEIVED PRi: ARQCV2: 0.01,9.50
ARQCV3: 0.05,38.17
ARQCV4: 0.24,34.21
ARQCV5: 0.04,38.47
ARQCV6: 0.15,82.75
Data from Arduino: ['QCV2: 0.01,9.50\n', 'QCV3: 0.05,38.17\n', 'QCV4: 0.24,34.21\n', 'QCV5: 0.04,38.47\n', 'QCV6: 0.15,82.75']
arduino_recv_queue: ['QCV1: 0.03,9.62', 'QCV2: 0.01,9.50\n', 'QCV3: 0.05,38.17\n', 'QCV4: 0.24,34.21\n', 'QCV5: 0.04,38.47\n', 'QCV6: 0.15,82.75']

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 15, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,4,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,15,2","ARrobotPosition":"13,4,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
RECEIVED PRi: ARQCV1: 0.03,9.69
ARQCV2: 0.01,9.57
ARQCV3: 0.03,29.24
ARQCV4: 0.02,28.00
ARQCV5: 0.03,31.52
ARQCV6: 0.23,132.45
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.03,9.69\n', 'QCV2: 0.01,9.57\n', 'QCV3: 0.03,29.24\n', 'QCV4: 0.02,28.00\n', 'QCV5: 0.03,31.52\n', 'QCV6: 0.23,132.45']
ie
arduino_recv_queue: ['QCV1: 0.03,9.69\n', 'QCV2: 0.01,9.57\n', 'QCV3: 0.03,29.24\n', 'QCV4: 0.02,28.00\n', 'QCV5: 0.03,31.52\n', 'QCV6: 0.23,132.45']
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 19.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 13.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 89
Arrow Not Possible @ Robot Position: (13, 15, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,4,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 16, 15, 15, 15, 14)
ie
Checking Free towards FORWARD
Cell to check : (12, 13, 13, 13, 14, 13)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 14, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,5,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1fff3ffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f008040008000000000400004000800100","robotPosition":"13,14,2","ARrobotPosition":"13,5,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,2,2,2,4,
Data from Arduino: ['1,1,2,2,2,4,']
arduino_recv_queue: ['1,1,2,2,2,4,']
RECEIVED ARDUINO 1,1,2,2,2,4,
Sensor 0
Has Obstacle in Covered Range
ie
br
RECEIVED PRi: ARQCV1: 0.03,9.78
ARQCV2: 0.01,9.52
ARQCV3: 0.01,19.60
ARQCV4: 0.02,18.84
ARQCV5: 0.01,20.14
ARQCV6: 0.02,33.84
Sensor 1
Data from Arduino: ['QCV1: 0.03,9.78\n', 'QCV2: 0.01,9.52\n', 'QCV3: 0.01,19.60\n', 'QCV4: 0.02,18.84\n', 'QCV5: 0.01,20.14\n', 'QCV6: 0.02,33.84']
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.03,9.78\n', 'QCV2: 0.01,9.52\n', 'QCV3: 0.01,19.60\n', 'QCV4: 0.02,18.84\n', 'QCV5: 0.01,20.14\n', 'QCV6: 0.02,33.84']
ie
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (13, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 2.0, 2.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (12, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 9.0, 10.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 16.0, 16.0)
br
--------------------------------------------------
Total move counts: 90
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 14, 2)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (13, 14, 2)
Status of cells surrounding robot: {0: [0, 0, 0], 1: [0, 0, 0], 2: [0, 0, 0], 3: [1, 1, 1]}
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 14, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 14, 2)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 14, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {179: 1, 180: 1}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"13,5,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 15, 15, 14, 15, 13)
ie
Checking Free towards FORWARD
Cell to check : (12, 12, 13, 12, 14, 12)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 13, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"13,6,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"13,13,2","ARrobotPosition":"13,6,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,1,1,1,4,
Data from Arduino: ['1,1,1,1,1,4,']
arduino_recv_queue: ['1,1,1,1,1,4,']
RECEIVED ARDUINO 1,1,1,1,1,4,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 6.0, 6.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 6.0, 6.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 13.0, 14.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 8.0, 8.0)
br
--------------------------------------------------
Total move counts: 93
Arrow Not Possible @ Robot Position: (13, 13, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"13,6,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 14, 15, 13, 15, 12)
ie
Checking Free towards FORWARD
Cell to check : (12, 11, 13, 11, 14, 11)
South: False
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.02,9.71
Data from Arduino: ['QCV1: 0.02,9.71']
arduino_recv_queue: ['QCV1: 0.02,9.71']
RECEIVED PRi: ARQCV2: 0.02,9.83
ARQCV3: 0.01,9.46
ARQCV4: 0.01,9.19
ARQCV5: 0.01,9.88
ARQCV6: 0.02,33.40
Data from Arduino: ['QCV2: 0.02,9.83\n', 'QCV3: 0.01,9.46\n', 'QCV4: 0.01,9.19\n', 'QCV5: 0.01,9.88\n', 'QCV6: 0.02,33.40']
arduino_recv_queue: ['QCV2: 0.02,9.83\n', 'QCV3: 0.01,9.46\n', 'QCV4: 0.01,9.19\n', 'QCV5: 0.01,9.88\n', 'QCV6: 0.02,33.40']
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 13, 3)
cells_left: [1, 2]
cells_right: [1, 2]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 14,11
Checking arrow @ 13,11
Mark Arrow Taken @ (14, 11, 'SOUTH')
Mark Arrow Taken @ (13, 11, 'SOUTH')
Arrow Possible @ Robot Position: (13, 13, 'WEST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (13, 13, 'WEST')
Check Arrow @ (14, 11, 'SOUTH')
Check Arrow @ (13, 11, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"13,6,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"13,13,3","ARrobotPosition":"13,6,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 10.0, 10.0)
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 17.0, 18.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 10.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 14.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 2.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 18, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 94
Checking arrow @ 14,11
Checking arrow @ 13,11
Arrow Not Possible @ Robot Position: (13, 13, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"13,6,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (12, 11, 13, 11, 14, 11)
South: False
Checking Free towards FORWARD
Cell to check : (11, 14, 11, 13, 12, 11)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.01,9.19
Data from Arduino: ['QCV1: 0.01,9.19']
arduino_recv_queue: ['QCV1: 0.01,9.19']
RECEIVED PRi: ARQCV2: 0.01,9.28
ARQCV3: 0.18,36.78
ARQCV4: 0.35,32.61
ARQCV5: 0.29,71.78
ARQCV6: 0.08,52.72
Data from Arduino: ['QCV2: 0.01,9.28\n', 'QCV3: 0.18,36.78\n', 'QCV4: 0.35,32.61\n', 'QCV5: 0.29,71.78\n', 'QCV6: 0.08,52.72']
arduino_recv_queue: ['QCV2: 0.01,9.28\n', 'QCV3: 0.18,36.78\n', 'QCV4: 0.35,32.61\n', 'QCV5: 0.29,71.78\n', 'QCV6: 0.08,52.72']
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 13,11
Checking arrow @ 12,11
Mark Arrow Taken @ (13, 11, 'SOUTH')
Mark Arrow Taken @ (12, 11, 'SOUTH')
Arrow Possible @ Robot Position: (12, 13, 'WEST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (12, 13, 'WEST')
Check Arrow @ (13, 11, 'SOUTH')
Check Arrow @ (12, 11, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"12,6,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"12,13,3","ARrobotPosition":"12,6,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,0,
Data from Arduino: ['1,0,0,0,0,0,']
arduino_recv_queue: ['1,0,0,0,0,0,']
RECEIVED PRi: ARQCV1: 0.03,9.41
ARQCV2: 0.28,38.77
ARQCV3: 0.03,29.24
ARQCV4: 0.13,27.69
ARQCV5: 0.16,53.33
ARQCV6: 0.02,51.97
Data from Arduino: ['QCV1: 0.03,9.41\n', 'QCV2: 0.28,38.77\n', 'QCV3: 0.03,29.24\n', 'QCV4: 0.13,27.69\n', 'QCV5: 0.16,53.33\n', 'QCV6: 0.02,51.97']
RECEIVED ARDUINO 1,0,0,0,0,0,
arduino_recv_queue: ['QCV1: 0.03,9.41\n', 'QCV2: 0.28,38.77\n', 'QCV3: 0.03,29.24\n', 'QCV4: 0.13,27.69\n', 'QCV5: 0.16,53.33\n', 'QCV6: 0.02,51.97']
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 10.0, 10.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (11, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 10, 0.0, 3.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 8.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 10.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 2.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 19, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 95
Checking arrow @ 13,11
Checking arrow @ 12,11
Arrow Not Possible @ Robot Position: (12, 13, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"12,6,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (11, 11, 12, 11, 13, 11)
South: False
Checking Free towards FORWARD
Cell to check : (10, 14, 10, 13, 12, 10)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 12,11
Checking arrow @ 11,11
Arrow Not Possible @ Robot Position: (11, 13, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"11,6,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"11,13,3","ARrobotPosition":"11,6,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,2,2,0,0,
Data from Arduino: ['1,0,2,2,0,0,']
arduino_recv_queue: ['1,0,2,2,0,0,']
RECEIVED ARDUINO 1,0,2,2,0,0,
Sensor 0
RECEIVED PRi: ARQCV1: 0.02,9.39
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.02,9.39']
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
arduino_recv_queue: ['QCV1: 0.02,9.39']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 21.0, 22.0)
RECEIVED PRi: ARQCV2: 0.09,44.20
ARQCV3: 0.01,20.05
ARQCV4: 0.02,19.18
ARQCV5: 0.09,44.60
ARQCV6: 0.03,50.93
br
Data from Arduino: ['QCV2: 0.09,44.20\n', 'QCV3: 0.01,20.05\n', 'QCV4: 0.02,19.18\n', 'QCV5: 0.09,44.60\n', 'QCV6: 0.03,50.93']
Sensor 1
arduino_recv_queue: ['QCV1: 0.02,9.39', 'QCV2: 0.09,44.20\n', 'QCV3: 0.01,20.05\n', 'QCV4: 0.02,19.18\n', 'QCV5: 0.09,44.60\n', 'QCV6: 0.03,50.93']
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 11, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 3.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 10.0, 10.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 18.0, 18.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 96
Checking arrow @ 12,11
Checking arrow @ 11,11
Arrow Not Possible @ Robot Position: (11, 13, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"11,6,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (10, 11, 11, 11, 12, 11)
South: False
Checking Free towards FORWARD
Cell to check : (9, 14, 9, 13, 12, 9)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 11,11
Checking arrow @ 10,11
Arrow Not Possible @ Robot Position: (10, 13, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"10,6,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"10,13,3","ARrobotPosition":"10,6,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,1,1,0,1,
Data from Arduino: ['0,0,1,1,0,1,']
arduino_recv_queue: ['0,0,1,1,0,1,']
RECEIVED ARDUINO 0,0,1,1,0,1,
Sensor 0
No Obstacle in Covered Range
RECEIVED PRi: ARQCV1: 0.19,74.74
ARQCV2: 0.08,49.32
ARQCV3: 0.01,9.81
ARQCV4: 0.01,9.43
ARQCV5: 0.08,41.67
ARQCV6: 0.01,26.08Current Sesnsor Reading: x, y, count, total: (11, 11, 0, 4)

Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 0.0, 10.0)
Data from Arduino: ['QCV1: 0.19,74.74\n', 'QCV2: 0.08,49.32\n', 'QCV3: 0.01,9.81\n', 'QCV4: 0.01,9.43\n', 'QCV5: 0.08,41.67\n', 'QCV6: 0.01,26.08']
Current Sesnsor Reading: x, y, count, total: (11, 10, 0.0, 2.0)
arduino_recv_queue: ['QCV1: 0.19,74.74\n', 'QCV2: 0.08,49.32\n', 'QCV3: 0.01,9.81\n', 'QCV4: 0.01,9.43\n', 'QCV5: 0.08,41.67\n', 'QCV6: 0.01,26.08']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 10, 0.0, 5.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 11, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 10, 0.0, 3.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 12, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 14.0, 14.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 13, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 22.0, 22.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 2.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 97
Checking arrow @ 11,11
Checking arrow @ 10,11
Arrow Not Possible @ Robot Position: (10, 13, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"10,6,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (9, 11, 10, 11, 11, 11)
South: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (10, 13, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 12,14
Checking arrow @ 12,13
Arrow Not Possible @ Robot Position: (10, 13, 'SOUTH')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 12,13
Checking arrow @ 12,12
Arrow Not Possible @ Robot Position: (10, 12, 'SOUTH')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"10,7,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"10,12,2","ARrobotPosition":"10,7,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,0,0,0,0,
Data from Arduino: ['0,1,0,0,0,0,']
arduino_recv_queue: ['0,1,0,0,0,0,']
RECEIVED ARDUINO 0,1,0,0,0,0,
Sensor 0
RECEIVED PRi: ARQCV1: 0.05,40.98
ARQCV2: 0.01,9.08
ARQCV3: 0.46,70.84
ARQCV4: 0.43,94.60
ARQCV5: 0.10,38.77
ARQCV6: 0.09,55.22
No Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.05,40.98\n', 'QCV2: 0.01,9.08\n', 'QCV3: 0.46,70.84\n', 'QCV4: 0.43,94.60\n', 'QCV5: 0.10,38.77\n', 'QCV6: 0.09,55.22']
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 4)
arduino_recv_queue: ['QCV1: 0.05,40.98\n', 'QCV2: 0.01,9.08\n', 'QCV3: 0.46,70.84\n', 'QCV4: 0.43,94.60\n', 'QCV5: 0.10,38.77\n', 'QCV6: 0.09,55.22']
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 25.0, 26.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 10, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (11, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 9, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (10, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 10, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 11, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 11, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (6, 11, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 99
Checking arrow @ 12,13
Checking arrow @ 12,12
Arrow Not Possible @ Robot Position: (10, 12, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"10,7,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (12, 13, 12, 12, 12, 11)
East: False
Checking Free towards FORWARD
Cell to check : (9, 10, 10, 10, 11, 10)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 12,12
Checking arrow @ 12,11
Mark Arrow Taken @ (12, 12, 'EAST')
Mark Arrow Taken @ (12, 11, 'EAST')
Arrow Possible @ Robot Position: (10, 11, 'SOUTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (10, 11, 'SOUTH')
Check Arrow @ (12, 12, 'EAST')
Check Arrow @ (12, 11, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"10,8,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03fe07ff8fff1ffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040001808800f00e010002000000000100001000200040","robotPosition":"10,11,2","ARrobotPosition":"10,8,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,0,
Data from Arduino: ['0,0,0,0,0,0,']
arduino_recv_queue: ['0,0,0,0,0,0,']
RECEIVED ARDUINO 0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 2.0)
perm
br
Sensor 1
No Obstacle in Covered Range
RECEIVED PRi: ARQCV1: 0.02,39.72
ARQCV2: 0.05,33.25
ARQCV3: 0.73,69.92
ARQCV4: 0.22,83.61
ARQCV5: 0.05,37.29
ARQCV6: 0.08,76.43
Current Sesnsor Reading: x, y, count, total: (12, 10, 0, 4)
Data from Arduino: ['QCV1: 0.02,39.72\n', 'QCV2: 0.05,33.25\n', 'QCV3: 0.73,69.92\n', 'QCV4: 0.22,83.61\n', 'QCV5: 0.05,37.29\n', 'QCV6: 0.08,76.43']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 10, 0.0, 4.0)
arduino_recv_queue: ['QCV1: 0.02,39.72\n', 'QCV2: 0.05,33.25\n', 'QCV3: 0.73,69.92\n', 'QCV4: 0.22,83.61\n', 'QCV5: 0.05,37.29\n', 'QCV6: 0.08,76.43']
Current Sesnsor Reading: x, y, count, total: (13, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (11, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 8, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (10, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 8, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (7, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (6, 10, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 10, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 100
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 11, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (10, 11, 2)
Status of cells surrounding robot: {0: [0, 0, 0], 1: [0, 0, 1], 2: [0, 0, 0], 3: [0, 1, 0]}
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (10, 11, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front M
SENDING ARM

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (10, 11, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 12,12
Checking arrow @ 12,11
Arrow Not Possible @ Robot Position: (10, 11, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {132: 0, 130: 0, 163: 0, 164: 0, 131: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03ffc7ff8fffdffffffffffffffffffffffffffffffffff","obstacleMap":"00000000604000110110007807008001000000000080000800100020","robotPosition":"10,8,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (12, 12, 12, 11, 12, 10)
East: False
Checking Free towards FORWARD
Cell to check : (9, 9, 10, 9, 11, 9)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 12,11
Checking arrow @ 12,10
Arrow Not Possible @ Robot Position: (10, 10, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03ffc7ff8fffdffffffffffffffffffffffffffffffffff","obstacleMap":"00000000604000110110007807008001000000000080000800100020","robotPosition":"10,9,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fe03ffc7ff8fffdffffffffffffffffffffffffffffffffff","obstacleMap":"00000000604000110110007807008001000000000080000800100020","robotPosition":"10,10,2","ARrobotPosition":"10,9,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,1,
Data from Arduino: ['1,0,0,0,0,1,']
arduino_recv_queue: ['1,0,0,0,0,1,']
RECEIVED PRi: ARQCV1: 0.01,10.42
ARQCV2: 0.03,32.84
ARQCV3: 0.32,59.30
ARQCV4: 0.28,77.72
ARQCV5: 0.07,36.22
ARQCV6: 0.03,23.78
Data from Arduino: ['QCV1: 0.01,10.42\n', 'QCV2: 0.03,32.84\n', 'QCV3: 0.32,59.30\n', 'QCV4: 0.28,77.72\n', 'QCV5: 0.07,36.22\n', 'QCV6: 0.03,23.78']
arduino_recv_queue: ['1,0,0,0,0,1,', 'QCV1: 0.01,10.42\n', 'QCV2: 0.03,32.84\n', 'QCV3: 0.32,59.30\n', 'QCV4: 0.28,77.72\n', 'QCV5: 0.07,36.22\n', 'QCV6: 0.03,23.78']
RECEIVED ARDUINO 1,0,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 29.0, 30.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 9, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 8, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (11, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 7, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 8, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 103
Checking Whether Calibration Possible...
Robot Position @ (10, 10, 2)
cells_left: [1, 1]
cells_right: [0, 0]
Checking arrow @ 12,11
Checking arrow @ 12,10
Arrow Not Possible @ Robot Position: (10, 10, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {116: 0, 115: 0, 148: 0, 149: 0, 117: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fee3ffc7ffefffdffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040000220208003c038040008000000000400004000800100","robotPosition":"10,9,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (12, 11, 12, 10, 12, 9)
East: False
Checking Free towards FORWARD
Cell to check : (9, 8, 10, 8, 11, 8)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 12,10
Checking arrow @ 12,9
Arrow Not Possible @ Robot Position: (10, 9, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe01fee3ffc7ffefffdffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040000220208003c038040008000000000400004000800100","robotPosition":"10,10,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe01fee3ffc7ffefffdffffffffffffffffffffffffffffffffff","obstacleMap":"000000006040000220208003c038040008000000000400004000800100","robotPosition":"10,9,2","ARrobotPosition":"10,10,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,1,
Data from Arduino: ['0,0,0,0,0,1,']
arduino_recv_queue: ['0,0,0,0,0,1,']
RECEIVED ARDUINO 0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 4.0)
br
RECEIVED PRi: ARQCV1: 0.10,46.59
Sensor 1
Data from Arduino: ['QCV1: 0.10,46.59']
No Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.10,46.59']
Current Sesnsor Reading: x, y, count, total: (12, 8, 0, 4)
RECEIVED PRi: ARQCV2: 0.03,32.84
ARQCV3: 0.23,68.15
ARQCV4: 0.14,79.98
ARQCV5: 0.11,35.69
ARQCV6: 0.02,23.65
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 8, 0.0, 4.0)
Data from Arduino: ['QCV2: 0.03,32.84\n', 'QCV3: 0.23,68.15\n', 'QCV4: 0.14,79.98\n', 'QCV5: 0.11,35.69\n', 'QCV6: 0.02,23.65']
Current Sesnsor Reading: x, y, count, total: (13, 8, 0.0, 2.0)
arduino_recv_queue: ['QCV1: 0.10,46.59', 'QCV2: 0.03,32.84\n', 'QCV3: 0.23,68.15\n', 'QCV4: 0.14,79.98\n', 'QCV5: 0.11,35.69\n', 'QCV6: 0.02,23.65']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 8, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 7, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (11, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 6, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 104
Checking Whether Calibration Possible...
Robot Position @ (10, 9, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 12,10
Checking arrow @ 12,9
Arrow Not Possible @ Robot Position: (10, 9, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {102: 0, 100: 0, 133: 0, 134: 0, 101: 0}
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe71fee3fff7ffefffdffffffffffffffffffffffffffffffffff","obstacleMap":"0000000060400000410104001e01c020004000000000200002000400080","robotPosition":"10,10,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (12, 10, 12, 9, 12, 8)
East: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (10, 9, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 9,11
Checking arrow @ 10,11
Arrow Not Possible @ Robot Position: (10, 9, 'EAST')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 10,11
Checking arrow @ 11,11
Arrow Not Possible @ Robot Position: (11, 9, 'EAST')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe03fc07d00fe71fee3fff7ffefffdffffffffffffffffffffffffffffffffff","obstacleMap":"0000000060400000410104001e01c020004000000000200002000400080","robotPosition":"11,10,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07d00fe71fee3fff7ffefffdffffffffffffffffffffffffffffffffff","obstacleMap":"0000000060400000410104001e01c020004000000000200002000400080","robotPosition":"11,9,1","ARrobotPosition":"11,10,1","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,0,0,0,0,
Data from Arduino: ['0,1,0,0,0,0,']
arduino_recv_queue: ['0,1,0,0,0,0,']
RECEIVED ARDUINO 0,1,0,0,0,0,
RECEIVED PRi: ARQCV1: 0.52,155.47
ARQCV2: 0.01,8.98
ARQCV3: 0.04,30.94
ARQCV4: 0.06,31.31
ARQCV5: 0.01,32.39
Sensor 0
Data from Arduino: ['QCV1: 0.52,155.47\n', 'QCV2: 0.01,8.98\n', 'QCV3: 0.04,30.94\n', 'QCV4: 0.06,31.31\n', 'QCV5: 0.01,32.39']
No Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.52,155.47\n', 'QCV2: 0.01,8.98\n', 'QCV3: 0.04,30.94\n', 'QCV4: 0.06,31.31\n', 'QCV5: 0.01,32.39']
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 33.0, 34.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 10, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 9, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (14, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 9, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 8, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (14, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 8, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (12, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 106
Checking Whether Calibration Possible...
Robot Position @ (11, 9, 1)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 10,11
Checking arrow @ 11,11
Arrow Not Possible @ Robot Position: (11, 9, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {165: 0, 118: 0, 103: 0, 88: 0, 73: 0, 58: 0, 135: 0, 150: 0}
SENDING AN{"exploreMap":"f8007000ff01fe13fc27d04fe79fef3fffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000002040408001e01c020004000000000200002000400080","robotPosition":"11,10,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (10, 11, 11, 11, 12, 11)
North: False
Checking Free towards FORWARD
Cell to check : (13, 10, 13, 9, 13, 8)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARQCV6: 0.17,71.44
Data from Arduino: ['QCV6: 0.17,71.44']
arduino_recv_queue: ['QCV6: 0.17,71.44']
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['QCV6: 0.17,71.44', 'Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 11,11
Checking arrow @ 12,11
Mark Arrow Taken @ (11, 11, 'NORTH')
Mark Arrow Taken @ (12, 11, 'NORTH')
Arrow Possible @ Robot Position: (12, 9, 'EAST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (12, 9, 'EAST')
Check Arrow @ (11, 11, 'NORTH')
Check Arrow @ (12, 11, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe13fc27d04fe79fef3fffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000002040408001e01c020004000000000200002000400080","robotPosition":"12,10,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe13fc27d04fe79fef3fffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000002040408001e01c020004000000000200002000400080","robotPosition":"12,9,1","ARrobotPosition":"12,10,1","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,2,2,2,1,
Data from Arduino: ['0,1,2,2,2,1,']
arduino_recv_queue: ['0,1,2,2,2,1,']
RECEIVED ARDUINO 0,1,2,2,2,1,
Sensor 0
No Obstacle in Covered Range
RECEIVED PRi: ARQCV1: 0.19,126.84
ARQCV2: 0.01,8.45
ARQCV3: 0.01,21.89
ARQCV4: 0.02,21.59
ARQCV5: 0.02,21.89
ARQCV6: 0.04,18.67
Current Sesnsor Reading: x, y, count, total: (11, 11, 0, 4)
perm
Data from Arduino: ['QCV1: 0.19,126.84\n', 'QCV2: 0.01,8.45\n', 'QCV3: 0.01,21.89\n', 'QCV4: 0.02,21.59\n', 'QCV5: 0.02,21.89\n', 'QCV6: 0.04,18.67']
Current Sesnsor Reading: x, y, count, total: (11, 12, 0.0, 2.0)
arduino_recv_queue: ['QCV1: 0.19,126.84\n', 'QCV2: 0.01,8.45\n', 'QCV3: 0.01,21.89\n', 'QCV4: 0.02,21.59\n', 'QCV5: 0.02,21.89\n', 'QCV6: 0.04,18.67']
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 14.0, 14.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 10, 0.0, 6.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 9, 0.0, 6.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 8, 0.0, 6.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 107
Checking Whether Calibration Possible...
Robot Position @ (12, 9, 1)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 11,11
Checking arrow @ 12,11
Arrow Not Possible @ Robot Position: (12, 9, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe13fc27d04fe79fef3fffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000002040408001e01c020004000000000200002000400080","robotPosition":"12,10,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (11, 11, 12, 11, 13, 11)
North: False
Checking Free towards FORWARD
Cell to check : (14, 10, 14, 9, 14, 8)
East: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (12, 9, 2)
cells_left: [0, 1]
cells_right: [0, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 14,10
Checking arrow @ 14,9
Arrow Not Possible @ Robot Position: (12, 9, 'SOUTH')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe13fc27d04fe79fef3fffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000002040408001e01c020004000000000200002000400080","robotPosition":"12,10,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe13fc27d04fe79fef3fffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000002040408001e01c020004000000000200002000400080","robotPosition":"12,9,2","ARrobotPosition":"12,10,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR2,2,1,0,0,1,
Data from Arduino: ['2,2,1,0,0,1,']
arduino_recv_queue: ['2,2,1,0,0,1,']
RECEIVED ARDUINO 2,2,1,0,0,1,
RECEIVED PRi: ARQCV1: 0.02,20.99
ARQCV2: 0.05,20.69
ARQCV3: 0.01,10.76
ARQCV4: 0.38,69.92
ARQCV5: 0.29,42.76
ARQCV6: 0.06,24.20
Sensor 0
Data from Arduino: ['QCV1: 0.02,20.99\n', 'QCV2: 0.05,20.69\n', 'QCV3: 0.01,10.76\n', 'QCV4: 0.38,69.92\n', 'QCV5: 0.29,42.76\n', 'QCV6: 0.06,24.20']
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.02,20.99\n', 'QCV2: 0.05,20.69\n', 'QCV3: 0.01,10.76\n', 'QCV4: 0.38,69.92\n', 'QCV5: 0.29,42.76\n', 'QCV6: 0.06,24.20']
br
Current Sesnsor Reading: x, y, count, total: (14, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 10, 0.0, 10.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 8, 0.0, 10.0)
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 7, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 4.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 7, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (11, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 6, 0.0, 4.0)
br
Sensor 5
Unacceptable Reading
--------------------------------------------------
updated_cells (sensor_readings): {119: 1}
SENDING AN{"exploreMap":"f8007000ff01fe13fc27d04fe79fefbfffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000201020204000f00e010002000000000100001000200040","robotPosition":"12,10,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (12, 9, 1)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 11,11
Checking arrow @ 12,11
Arrow Not Possible @ Robot Position: (12, 9, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe13fc27d04fe79fefbfffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000201020204000f00e010002000000000100001000200040","robotPosition":"12,10,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe13fc27d04fe79fefbfffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000201020204000f00e010002000000000100001000200040","robotPosition":"12,9,1","ARrobotPosition":"12,10,1","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe13fc27d04fe79fefbfffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000201020204000f00e010002000000000100001000200040","robotPosition":"12,10,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (11, 11, 12, 11, 13, 11)
North: False
Checking Free towards FORWARD
Cell to check : (14, 10, 14, 9, 14, 8)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 12,11
Checking arrow @ 13,11
Mark Arrow Taken @ (12, 11, 'NORTH')
Mark Arrow Taken @ (13, 11, 'NORTH')
Arrow Possible @ Robot Position: (13, 9, 'EAST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (13, 9, 'EAST')
Check Arrow @ (12, 11, 'NORTH')
Check Arrow @ (13, 11, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe13fc27d04fe79fefbfffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000201020204000f00e010002000000000100001000200040","robotPosition":"13,10,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe13fc27d04fe79fefbfffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000000001808000201020204000f00e010002000000000100001000200040","robotPosition":"13,9,1","ARrobotPosition":"13,10,1","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 2]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,1,1,1,0,
Data from Arduino: ['1,1,1,1,1,0,']
arduino_recv_queue: ['1,1,1,1,1,0,']
RECEIVED PRi: ARQCV1: 0.01,9.00
ARQCV2: 0.01,8.43
ARQCV3: 0.07,11.97
ARQCV4: 0.02,11.40
ARQCV5: 0.01,12.01
Data from Arduino: ['QCV1: 0.01,9.00\n', 'QCV2: 0.01,8.43\n', 'QCV3: 0.07,11.97\n', 'QCV4: 0.02,11.40\n', 'QCV5: 0.01,12.01']
arduino_recv_queue: ['1,1,1,1,1,0,', 'QCV1: 0.01,9.00\n', 'QCV2: 0.01,8.43\n', 'QCV3: 0.07,11.97\n', 'QCV4: 0.02,11.40\n', 'QCV5: 0.01,12.01']
RECEIVED ARDUINO 1,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 37.0, 38.0)
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 14.0, 14.0)
br
Sensor 2
Has Obstacle in Covered Range
ie
br
Sensor 3
Has Obstacle in Covered Range
ie
br
Sensor 4
Has Obstacle in Covered Range
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (14, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 110
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 9, 1)
cells_left: [1, 0]
cells_right: [1, 0]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARQCV6: 0.14,79.83
Data from Arduino: ['QCV6: 0.14,79.83']
arduino_recv_queue: ['QCV6: 0.14,79.83']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (13, 9, 1)
Status of cells surrounding robot: {0: [1, 1, 1], 1: [0, 1, 0], 2: [0, 0, 0], 3: [1, 1, 1]}
Calibrating Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 9, 0)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 9, 1)
cells_left: [1, 0]
cells_right: [1, 0]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 12,11
Checking arrow @ 13,11
Arrow Not Possible @ Robot Position: (13, 9, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {120: 0, 105: 0, 90: 0, 75: 0, 60: 0}
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"13,10,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (12, 11, 13, 11, 14, 11)
North: False
Checking Free towards FORWARD
Cell to check : (15, 10, 15, 9, 15, 8)
ie
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 9, 2)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 9, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"13,10,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"13,9,2","ARrobotPosition":"13,10,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 0]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,1,0,4,
Data from Arduino: ['1,1,0,1,0,4,']
arduino_recv_queue: ['1,1,0,1,0,4,']
RECEIVED ARDUINO 1,1,0,1,0,4,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 4.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 7, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 8.0, 8.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 7, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 6.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 8, 0, 4)
RECEIVED PRi: ARQCV1: 0.04,10.51
perm
Data from Arduino: ['QCV1: 0.04,10.51']
Current Sesnsor Reading: x, y, count, total: (10, 8, 0, 4)
arduino_recv_queue: ['QCV1: 0.04,10.51']
perm
RECEIVED PRi: ARQCV2: 0.03,10.48
ARQCV3: 0.51,82.36
ARQCV4: 0.01,9.12
ARQCV5: 0.22,40.98
ARQCV6: 0.02,33.17
Current Sesnsor Reading: x, y, count, total: (9, 8, 0, 4)
perm
Data from Arduino: ['QCV2: 0.03,10.48\n', 'QCV3: 0.51,82.36\n', 'QCV4: 0.01,9.12\n', 'QCV5: 0.22,40.98\n', 'QCV6: 0.02,33.17']
arduino_recv_queue: ['QCV1: 0.04,10.51', 'QCV2: 0.03,10.48\n', 'QCV3: 0.51,82.36\n', 'QCV4: 0.01,9.12\n', 'QCV5: 0.22,40.98\n', 'QCV6: 0.02,33.17']
Current Sesnsor Reading: x, y, count, total: (8, 8, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 6.0, 6.0)
br
--------------------------------------------------
Total move counts: 113
Arrow Not Possible @ Robot Position: (13, 9, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"13,10,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 10, 15, 9, 15, 8)
ie
Checking Free towards FORWARD
Cell to check : (12, 7, 13, 7, 14, 7)
South: False
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 9, 3)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 14,7
Checking arrow @ 13,7
Mark Arrow Taken @ (14, 7, 'SOUTH')
Mark Arrow Taken @ (13, 7, 'SOUTH')
Arrow Possible @ Robot Position: (13, 9, 'WEST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (13, 9, 'WEST')
Check Arrow @ (14, 7, 'SOUTH')
Check Arrow @ (13, 7, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"13,10,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"13,9,3","ARrobotPosition":"13,10,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 0]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,1,
Data from Arduino: ['0,0,0,0,0,1,']
arduino_recv_queue: ['0,0,0,0,0,1,']
RECEIVED ARDUINO 0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 7, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (14, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 6.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 7, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 8.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 8, 0.0, 2.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 9, 0.0, 2.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 10, 0.0, 2.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
RECEIVED PRi: ARQCV1: 0.35,79.98
br
Data from Arduino: ['QCV1: 0.35,79.98']
blind_range_obstacle_status: [1, 0, 0]
arduino_recv_queue: ['QCV1: 0.35,79.98']
--------------------------------------------------
RECEIVED PRi: ARQCV2: 0.10,39.72
ARQCV3: 0.13,37.87
ARQCV4: 0.44,32.84
ARQCV5: 0.20,55.51
ARQCV6: 0.02,20.37
Total move counts: 114
Data from Arduino: ['QCV2: 0.10,39.72\n', 'QCV3: 0.13,37.87\n', 'QCV4: 0.44,32.84\n', 'QCV5: 0.20,55.51\n', 'QCV6: 0.02,20.37']
Checking arrow @ 14,7
Checking arrow @ 13,7
arduino_recv_queue: ['QCV1: 0.35,79.98', 'QCV2: 0.10,39.72\n', 'QCV3: 0.13,37.87\n', 'QCV4: 0.44,32.84\n', 'QCV5: 0.20,55.51\n', 'QCV6: 0.02,20.37']
Arrow Not Possible @ Robot Position: (13, 9, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"13,10,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (12, 7, 13, 7, 14, 7)
South: False
Checking Free towards FORWARD
Cell to check : (11, 10, 11, 9, 8, 11)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 13,7
Checking arrow @ 12,7
Arrow Not Possible @ Robot Position: (12, 9, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"12,10,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"12,9,3","ARrobotPosition":"12,10,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 0]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,0,
Data from Arduino: ['1,0,0,0,0,0,']
arduino_recv_queue: ['1,0,0,0,0,0,']
RECEIVED ARDUINO 1,0,0,0,0,0,
RECEIVED PRi: ARQCV1: 0.01,9.25
ARQCV2: 0.06,39.40
ARQCV3: 0.02,29.24
ARQCV4: 0.12,26.73
ARQCV5: 0.04,55.51
ARQCV6: 0.12,85.88
Sensor 0
Data from Arduino: ['QCV1: 0.01,9.25\n', 'QCV2: 0.06,39.40\n', 'QCV3: 0.02,29.24\n', 'QCV4: 0.12,26.73\n', 'QCV5: 0.04,55.51\n', 'QCV6: 0.12,85.88']
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.01,9.25\n', 'QCV2: 0.06,39.40\n', 'QCV3: 0.02,29.24\n', 'QCV4: 0.12,26.73\n', 'QCV5: 0.04,55.51\n', 'QCV6: 0.12,85.88']
Current Sesnsor Reading: x, y, count, total: (13, 7, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 12.0, 12.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 7, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (11, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 6, 0.0, 6.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 2.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 9, 0.0, 2.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 10, 0.0, 2.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 13, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 115
Checking arrow @ 13,7
Checking arrow @ 12,7
Arrow Not Possible @ Robot Position: (12, 9, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"12,10,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (11, 7, 12, 7, 13, 7)
South: False
Checking Free towards FORWARD
Cell to check : (10, 10, 10, 9, 8, 10)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 12,7
Checking arrow @ 11,7
Arrow Not Possible @ Robot Position: (11, 9, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"11,10,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"11,9,3","ARrobotPosition":"11,10,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 0]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,2,2,0,0,
Data from Arduino: ['0,0,2,2,0,0,']
arduino_recv_queue: ['0,0,2,2,0,0,']
RECEIVED ARDUINO 0,0,2,2,0,0,
RECEIVED PRi: ARQCV1: 0.28,65.00
ARQCV2: 0.04,34.21
ARQCV3: 0.02,19.60
ARQCV4: 0.02,18.76
ARQCV5: 0.06,56.11
ARQCV6: 0.14,79.24Sensor 0

No Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.28,65.00\n', 'QCV2: 0.04,34.21\n', 'QCV3: 0.02,19.60\n', 'QCV4: 0.02,18.76\n', 'QCV5: 0.06,56.11\n', 'QCV6: 0.14,79.24']
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 4)
arduino_recv_queue: ['QCV1: 0.28,65.00\n', 'QCV2: 0.04,34.21\n', 'QCV3: 0.02,19.60\n', 'QCV4: 0.02,18.76\n', 'QCV5: 0.06,56.11\n', 'QCV6: 0.14,79.24']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 7, 0.0, 20.0)
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 10.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 8, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 8.0, 8.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 9, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 6.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 11.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (10, 15, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 116
Checking arrow @ 12,7
Checking arrow @ 11,7
Arrow Not Possible @ Robot Position: (11, 9, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"11,10,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (10, 7, 11, 7, 12, 7)
South: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 9, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 13,10
Checking arrow @ 13,9
Arrow Not Possible @ Robot Position: (11, 9, 'SOUTH')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 13,9
Checking arrow @ 13,8
Arrow Not Possible @ Robot Position: (11, 8, 'SOUTH')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"11,11,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe17fc2fd05fe7bfefffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060100002008101020007807008001000000000080000800100020","robotPosition":"11,8,2","ARrobotPosition":"11,11,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 0]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,0,0,0,0,
Data from Arduino: ['0,1,0,0,0,0,']
arduino_recv_queue: ['0,1,0,0,0,0,']
RECEIVED ARDUINO 0,1,0,0,0,0,
RECEIVED PRi: ARQCV1: 0.01,30.14
ARQCV2: 0.01,9.52
ARQCV3: 0.35,54.46
ARQCV4: 0.71,52.24
ARQCV5: 0.04,37.58
ARQCV6: 0.18,85.88
Sensor 0
Data from Arduino: ['QCV1: 0.01,30.14\n', 'QCV2: 0.01,9.52\n', 'QCV3: 0.35,54.46\n', 'QCV4: 0.71,52.24\n', 'QCV5: 0.04,37.58\n', 'QCV6: 0.18,85.88']
No Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.01,30.14\n', 'QCV2: 0.01,9.52\n', 'QCV3: 0.35,54.46\n', 'QCV4: 0.71,52.24\n', 'QCV5: 0.04,37.58\n', 'QCV6: 0.18,85.88']
Current Sesnsor Reading: x, y, count, total: (13, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 9, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 7, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 16.0, 16.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 6, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (11, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 5, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 5, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 7, 0.0, 4.0)
br
--------------------------------------------------
Total move counts: 118
Checking arrow @ 13,9
Checking arrow @ 13,8
Arrow Not Possible @ Robot Position: (11, 8, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {114: 0, 86: 0, 87: 0}
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd1dfe7bfffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060040000401020204000f00e010002000000000100001000200040","robotPosition":"11,11,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (13, 9, 13, 8, 13, 7)
East: False
Checking Free towards FORWARD
Cell to check : (10, 6, 11, 6, 12, 6)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 13,8
Checking arrow @ 13,7
Mark Arrow Taken @ (13, 8, 'EAST')
Mark Arrow Taken @ (13, 7, 'EAST')
Arrow Possible @ Robot Position: (11, 7, 'SOUTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (11, 7, 'SOUTH')
Check Arrow @ (13, 8, 'EAST')
Check Arrow @ (13, 7, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe17fc2fd1dfe7bfffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060040000401020204000f00e010002000000000100001000200040","robotPosition":"11,12,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe17fc2fd1dfe7bfffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000060040000401020204000f00e010002000000000100001000200040","robotPosition":"11,7,2","ARrobotPosition":"11,12,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 0]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 0, 0, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,5,
Data from Arduino: ['0,0,0,0,0,5,']
arduino_recv_queue: ['0,0,0,0,0,5,']
RECEIVED ARDUINO 0,0,0,0,0,5,
Sensor 0
No Obstacle in Covered Range
RECEIVED PRi: ARQCV1: 0.03,30.54
ARQCV2: 0.05,28.69
ARQCV3: 0.15,56.72
ARQCV4: 0.54,63.44
ARQCV5: 0.04,37.06
ARQCV6: 0.02,43.98
Current Sesnsor Reading: x, y, count, total: (13, 8, 0, 4)
Data from Arduino: ['QCV1: 0.03,30.54\n', 'QCV2: 0.05,28.69\n', 'QCV3: 0.15,56.72\n', 'QCV4: 0.54,63.44\n', 'QCV5: 0.04,37.06\n', 'QCV6: 0.02,43.98']
perm
arduino_recv_queue: ['QCV1: 0.03,30.54\n', 'QCV2: 0.05,28.69\n', 'QCV3: 0.15,56.72\n', 'QCV4: 0.54,63.44\n', 'QCV5: 0.04,37.06\n', 'QCV6: 0.02,43.98']
Current Sesnsor Reading: x, y, count, total: (14, 8, 0.0, 2.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 8.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 5, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (11, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 4, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 5, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 4, 0.0, 2.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (8, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 6, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 6, 5.0, 6.0)
br
--------------------------------------------------
Total move counts: 119
Checking arrow @ 13,8
Checking arrow @ 13,7
Arrow Not Possible @ Robot Position: (11, 7, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {104: 0, 72: 0, 98: 0, 99: 0, 71: 0}
SENDING AN{"exploreMap":"f8007000ff01fe17fcefd1dfffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000000001801000002008101020007807008001000000000080000800100020","robotPosition":"11,12,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (13, 8, 13, 7, 13, 6)
East: False
Checking Free towards FORWARD
Cell to check : (10, 5, 11, 5, 12, 5)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 13,7
Checking arrow @ 13,6
Arrow Not Possible @ Robot Position: (11, 6, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe17fcefd1dfffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000000001801000002008101020007807008001000000000080000800100020","robotPosition":"11,13,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe17fcefd1dfffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000000001801000002008101020007807008001000000000080000800100020","robotPosition":"11,6,2","ARrobotPosition":"11,13,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 2, 0, 2, 2, 2, 0, 0, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,5,
Data from Arduino: ['1,0,0,0,0,5,']
arduino_recv_queue: ['1,0,0,0,0,5,']
RECEIVED ARDUINO 1,0,0,0,0,5,
RECEIVED PRi: ARQCV1: 0.01,9.52
ARQCV2: 0.02,28.00
ARQCV3: 0.14,46.59
Sensor 0
Data from Arduino: ['QCV1: 0.01,9.52\n', 'QCV2: 0.02,28.00\n', 'QCV3: 0.14,46.59']
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.01,9.52\n', 'QCV2: 0.02,28.00\n', 'QCV3: 0.14,46.59']
Current Sesnsor Reading: x, y, count, total: (13, 7, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 20.0, 20.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 3.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (12, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (11, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 3, 0.0, 2.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 5, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 5, 2.0, 2.0)
br
--------------------------------------------------
Total move counts: 120
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 6, 2)
cells_left: [1, 0]
cells_right: [0, 0]
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (11, 6, 2)
Status of cells surrounding robot: {0: [0, 0, 0], 1: [0, 0, 0], 2: [0, 0, 0], 3: [1, 0, 0]}
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARQCV4: 0.31,48.37
Data from Arduino: ['QCV4: 0.31,48.37']
arduino_recv_queue: ['QCV4: 0.31,48.37']
RECEIVED PRi: ARQCV5: 0.04,31.31
ARQCV6: 0.03,44.18
Data from Arduino: ['QCV5: 0.04,31.31\n', 'QCV6: 0.03,44.18']
arduino_recv_queue: ['QCV5: 0.04,31.31\n', 'QCV6: 0.03,44.18']
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 6, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 6, 2)
cells_left: [1, 0]
cells_right: [0, 0]
Checking arrow @ 13,7
Checking arrow @ 13,6
Arrow Not Possible @ Robot Position: (11, 6, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {81: 1, 83: 0, 84: 0, 85: 0, 57: 0, 56: 0, 89: 0}
SENDING AN{"exploreMap":"f8007000ff01fe77fcefffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"11,13,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (13, 7, 13, 6, 13, 5)
East: False
Checking Free towards FORWARD
Cell to check : (10, 4, 11, 4, 12, 4)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 13,6
Checking arrow @ 13,5
Arrow Not Possible @ Robot Position: (11, 5, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff01fe77fcefffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"11,14,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff01fe77fcefffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"00000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"11,5,2","ARrobotPosition":"11,14,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,2,0,
Data from Arduino: ['0,0,0,0,2,0,']
arduino_recv_queue: ['0,0,0,0,2,0,']
RECEIVED ARDUINO 0,0,0,0,2,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 10.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 3.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (12, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 2, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (11, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 2, 0.0, 2.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 3, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 2, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 2.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 123
Checking Whether Calibration Possible...
Robot Position @ (11, 5, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 13,6
Checking arrow @ 13,5
Arrow Not Possible @ Robot Position: (11, 5, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {69: 0, 70: 0, 41: 1, 74: 0, 43: 0, 42: 0}
SENDING AN{"exploreMap":"f8007000ff39fe77ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000200000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"11,14,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (13, 6, 13, 5, 13, 4)
East: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.11,30.14
ARQCV2: 0.02,27.69
ARQCV3: 0.07,46.59
ARQCV4: 0.26,42.76
ARQCV5: 0.03,20.89
ARQCV6: 0.21,84.68
ARTurning Left
Data from Arduino: ['QCV1: 0.11,30.14\n', 'QCV2: 0.02,27.69\n', 'QCV3: 0.07,46.59\n', 'QCV4: 0.26,42.76\n', 'QCV5: 0.03,20.89\n', 'QCV6: 0.21,84.68\n', 'Turning Left']
arduino_recv_queue: ['QCV1: 0.11,30.14\n', 'QCV2: 0.02,27.69\n', 'QCV3: 0.07,46.59\n', 'QCV4: 0.26,42.76\n', 'QCV5: 0.03,20.89\n', 'QCV6: 0.21,84.68\n', 'Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (11, 5, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 10,7
Checking arrow @ 11,7
Arrow Not Possible @ Robot Position: (11, 5, 'EAST')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 11,7
Checking arrow @ 12,7
Arrow Not Possible @ Robot Position: (12, 5, 'EAST')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f8007000ff39fe77ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000200000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"12,14,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8007000ff39fe77ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000200000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"12,5,1","ARrobotPosition":"12,14,1","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,2,2,2,5,
Data from Arduino: ['0,1,2,2,2,5,']
arduino_recv_queue: ['0,1,2,2,2,5,']
RECEIVED ARDUINO 0,1,2,2,2,5,
Sensor 0
RECEIVED PRi: ARQCV1: 0.43,218.75
ARQCV2: 0.01,8.07
No Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.43,218.75\n', 'QCV2: 0.01,8.07']
Current Sesnsor Reading: x, y, count, total: (11, 7, 0, 4)
arduino_recv_queue: ['QCV1: 0.43,218.75\n', 'QCV2: 0.01,8.07']
perm
Current Sesnsor Reading: x, y, count, total: (11, 8, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 7, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 24.0, 24.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 14.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 7.0)
ie
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 0, 0.0, 4.0)
ie
br
--------------------------------------------------
Total move counts: 125
Checking Whether Calibration Possible...
Robot Position @ (12, 5, 1)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 11,7
Checking arrow @ 12,7
Arrow Not Possible @ Robot Position: (12, 5, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {59: 0, 44: 0, 29: 0, 14: 0}
RECEIVED PRi: ARQCV3: 0.02,20.69
ARQCV4: 0.01,20.05
ARQCV5: 0.02,20.40
ARQCV6: 0.04,44.93
Data from Arduino: ['QCV3: 0.02,20.69\n', 'QCV4: 0.01,20.05\n', 'QCV5: 0.02,20.40\n', 'QCV6: 0.04,44.93']
arduino_recv_queue: ['QCV1: 0.43,218.75\n', 'QCV2: 0.01,8.07', 'QCV3: 0.02,20.69\n', 'QCV4: 0.01,20.05\n', 'QCV5: 0.02,20.40\n', 'QCV6: 0.04,44.93']
SENDING AN{"exploreMap":"f8017002ff3dfe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000800000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"12,14,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (11, 7, 12, 7, 13, 7)
North: False
Checking Free towards FORWARD
Cell to check : (14, 6, 14, 5, 14, 4)
East: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 12,7
Checking arrow @ 13,7
Mark Arrow Taken @ (12, 7, 'NORTH')
Mark Arrow Taken @ (13, 7, 'NORTH')
Arrow Possible @ Robot Position: (13, 5, 'EAST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (13, 5, 'EAST')
Check Arrow @ (12, 7, 'NORTH')
Check Arrow @ (13, 7, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8017002ff3dfe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000800000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"13,14,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8017002ff3dfe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000800000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"13,5,1","ARrobotPosition":"13,14,1","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,1,1,1,0,
Data from Arduino: ['0,0,1,1,1,0,']
arduino_recv_queue: ['0,0,1,1,1,0,']
RECEIVED ARDUINO 0,0,1,1,1,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 8, 0.0, 2.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 7, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (14, 8, 0.0, 2.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
ie
br
Sensor 3
Has Obstacle in Covered Range
ie
br
Sensor 4
Has Obstacle in Covered Range
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (14, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 2, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (14, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 1, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 0, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 0, 0.0, 1.0)
ie
br
--------------------------------------------------
Total move counts: 126
Checking Whether Calibration Possible...
Robot Position @ (13, 5, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 12,7
Checking arrow @ 13,7
Arrow Not Possible @ Robot Position: (13, 5, 'EAST')
--------------------------------------------------
updated_cells (sensor_readings): {45: 0, 30: 0, 15: 0}
RECEIVED PRi: ARQCV1: 0.09,51.20
ARQCV2: 0.08,31.73
ARQCV3: 0.01,10.88
ARQCV4: 0.01,10.03
ARQCV5: 0.02,9.95
ARQCV6: 0.03,45.75
Data from Arduino: ['QCV1: 0.09,51.20\n', 'QCV2: 0.08,31.73\n', 'QCV3: 0.01,10.88\n', 'QCV4: 0.01,10.03\n', 'QCV5: 0.02,9.95\n', 'QCV6: 0.03,45.75']
arduino_recv_queue: ['QCV1: 0.09,51.20\n', 'QCV2: 0.08,31.73\n', 'QCV3: 0.01,10.88\n', 'QCV4: 0.01,10.03\n', 'QCV5: 0.02,9.95\n', 'QCV6: 0.03,45.75']
SENDING AN{"exploreMap":"f801f003ff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000020000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,14,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (12, 7, 13, 7, 14, 7)
North: False
Checking Free towards FORWARD
Cell to check : (15, 6, 15, 5, 15, 4)
ie
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 5, 2)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 5, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f801f003ff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000020000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,14,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f801f003ff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000020000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,5,2","ARrobotPosition":"13,14,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (14, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 2, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 2, 0.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (12, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 2, 0.0, 4.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 4, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (8, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 4, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 3.0)
br
--------------------------------------------------
Total move counts: 127
Checking Whether Calibration Possible...
Robot Position @ (13, 5, 2)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.01,10.00
Data from Arduino: ['QCV1: 0.01,10.00']
arduino_recv_queue: ['QCV1: 0.01,10.00']
RECEIVED PRi: ARQCV2: 0.01,10.14
ARQCV3: 0.29,48.84
ARQCV4: 0.50,42.03
ARQCV5: 0.16,36.78
ARQCV6: 0.11,67.44
Data from Arduino: ['QCV2: 0.01,10.14\n', 'QCV3: 0.29,48.84\n', 'QCV4: 0.50,42.03\n', 'QCV5: 0.16,36.78\n', 'QCV6: 0.11,67.44']
arduino_recv_queue: ['QCV1: 0.01,10.00', 'QCV2: 0.01,10.14\n', 'QCV3: 0.29,48.84\n', 'QCV4: 0.50,42.03\n', 'QCV5: 0.16,36.78\n', 'QCV6: 0.11,67.44']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 5, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f801f003ff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000020000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,14,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 6, 15, 5, 15, 4)
ie
Checking Free towards FORWARD
Cell to check : (12, 3, 13, 3, 14, 3)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 4, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f801f003ff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000020000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,15,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f801f003ff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000020000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,4,2","ARrobotPosition":"13,15,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,0,
Data from Arduino: ['1,1,0,0,0,0,']
arduino_recv_queue: ['1,1,0,0,0,0,']
RECEIVED ARDUINO 1,1,0,0,0,0,
RECEIVED PRi: ARQCV1: 0.03,10.21
ARQCV2: 0.02,10.26
ARQCV3: 0.08,40.64
ARQCV4: 0.25,31.10
ARQCV5: 0.08,39.09
ARQCV6: 0.26,101.32Sensor 0

Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.03,10.21\n', 'QCV2: 0.02,10.26\n', 'QCV3: 0.08,40.64\n', 'QCV4: 0.25,31.10\n', 'QCV5: 0.08,39.09\n', 'QCV6: 0.26,101.32']
ie
br
Sensor 1
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.03,10.21\n', 'QCV2: 0.02,10.26\n', 'QCV3: 0.08,40.64\n', 'QCV4: 0.25,31.10\n', 'QCV5: 0.08,39.09\n', 'QCV6: 0.26,101.32']
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 1, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 2, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (13, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 1, 0.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 1, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (10, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 3, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (8, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 3, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 3, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 128
Arrow Not Possible @ Robot Position: (13, 4, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {28: 0, 54: 0, 55: 0}
SENDING AN{"exploreMap":"f801f007ff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000010000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"13,15,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 5, 15, 4, 15, 3)
ie
Checking Free towards FORWARD
Cell to check : (12, 2, 13, 2, 14, 2)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 3, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f801f007ff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000010000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"13,16,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f801f007ff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"000010000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"13,3,2","ARrobotPosition":"13,16,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,1,
Data from Arduino: ['1,1,0,0,0,1,']
arduino_recv_queue: ['1,1,0,0,0,1,']
RECEIVED ARDUINO 1,1,0,0,0,1,
Sensor 0
RECEIVED PRi: ARQCV1: 0.03,10.45
ARQCV2: 0.01,10.35
ARQCV3: 0.03,32.84
ARQCV4: 0.11,30.14
ARQCV5: 0.02,34.21
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.03,10.45\n', 'QCV2: 0.01,10.35\n', 'QCV3: 0.03,32.84\n', 'QCV4: 0.11,30.14\n', 'QCV5: 0.02,34.21']
ie
arduino_recv_queue: ['QCV1: 0.03,10.45\n', 'QCV2: 0.01,10.35\n', 'QCV3: 0.03,32.84\n', 'QCV4: 0.11,30.14\n', 'QCV5: 0.02,34.21']
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 0, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 1, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (13, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 0, 0.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 1, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (12, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 0, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 1, 2]
--------------------------------------------------
Total move counts: 129
Arrow Not Possible @ Robot Position: (13, 3, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {13: 0}
RECEIVED PRi: ARQCV6: 0.02,18.59
Data from Arduino: ['QCV6: 0.02,18.59']
arduino_recv_queue: ['QCV1: 0.03,10.45\n', 'QCV2: 0.01,10.35\n', 'QCV3: 0.03,32.84\n', 'QCV4: 0.11,30.14\n', 'QCV5: 0.02,34.21', 'QCV6: 0.02,18.59']
SENDING AN{"exploreMap":"f803f007ff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,16,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 4, 15, 3, 15, 2)
ie
Checking Free towards FORWARD
Cell to check : (12, 1, 13, 1, 14, 1)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 2, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f803f007ff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,17,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f803f007ff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,2,2","ARrobotPosition":"13,17,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,2,2,2,1,
Data from Arduino: ['1,1,2,2,2,1,']
arduino_recv_queue: ['1,1,2,2,2,1,']
RECEIVED ARDUINO 1,1,2,2,2,1,
Sensor 0
RECEIVED PRi: ARQCV1: 0.02,10.40
ARQCV2: 0.02,10.56
ARQCV3: 0.02,23.00
ARQCV4: 0.02,21.38
ARQCV5: 0.02,23.86
ARQCV6: 0.02,18.47
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.02,10.40\n', 'QCV2: 0.02,10.56\n', 'QCV3: 0.02,23.00\n', 'QCV4: 0.02,21.38\n', 'QCV5: 0.02,23.86\n', 'QCV6: 0.02,18.47']
ie
arduino_recv_queue: ['QCV1: 0.02,10.40\n', 'QCV2: 0.02,10.56\n', 'QCV3: 0.02,23.00\n', 'QCV4: 0.02,21.38\n', 'QCV5: 0.02,23.86\n', 'QCV6: 0.02,18.47']
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 0, 0.0, 7.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 0, 0.0, 10.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 0, 0.0, 6.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 130
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 2, 2)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (13, 2, 2)
Status of cells surrounding robot: {0: [0, 0, 0], 1: [2, 0, 0], 2: [0, 0, 0], 3: [1, 1, 1]}
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 2, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 2, 2)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 2, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f803f007ff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,17,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 3, 15, 2, 15, 1)
ie
Checking Free towards FORWARD
Cell to check : (12, 0, 13, 0, 14, 0)
South: True
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 2, 3)
cells_left: [0, 1]
cells_right: [0, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 14,0
Checking arrow @ 13,0
Arrow Not Possible @ Robot Position: (13, 2, 'WEST')
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f803f007ff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,17,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f803f007ff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"0000080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,2,3","ARrobotPosition":"13,17,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR2,2,2,2,0,0,
Data from Arduino: ['2,2,2,2,0,0,']
arduino_recv_queue: ['2,2,2,2,0,0,']
RECEIVED ARDUINO 2,2,2,2,0,0,
Sensor 0
RECEIVED PRi: ARQCV1: 0.07,21.80
ARQCV2: 0.05,22.22
ARQCV3: 0.02,18.54
ARQCV4: 0.01,17.08
ARQCV5: 0.35,88.65
ARQCV6: 0.07,60.94
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.07,21.80\n', 'QCV2: 0.05,22.22\n', 'QCV3: 0.02,18.54\n', 'QCV4: 0.01,17.08\n', 'QCV5: 0.35,88.65\n', 'QCV6: 0.07,60.94']
br
arduino_recv_queue: ['QCV1: 0.07,21.80\n', 'QCV2: 0.05,22.22\n', 'QCV3: 0.02,18.54\n', 'QCV4: 0.01,17.08\n', 'QCV5: 0.35,88.65\n', 'QCV6: 0.07,60.94']
Current Sesnsor Reading: x, y, count, total: (14, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 0, 0.0, 11.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 0, 0.0, 10.0)
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 1, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 1, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 2, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 2, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 4.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (10, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 3, 0.0, 10.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (12, 8, 0, 1)
perm
br
--------------------------------------------------
updated_cells (sensor_readings): {26: 1, 27: 0}
SENDING AN{"exploreMap":"f803f01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"004002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"13,17,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Turn Left to get back to original track
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 2, 2)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 2, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
SENDING AN{"exploreMap":"f803f01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"004002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"13,17,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f803f01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"004002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"13,2,2","ARrobotPosition":"13,17,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f803f01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"004002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"13,17,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 3, 15, 2, 15, 1)
ie
Checking Free towards FORWARD
Cell to check : (12, 0, 13, 0, 14, 0)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 1, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f803f01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"004002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"13,18,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f803f01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"004002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"13,1,2","ARrobotPosition":"13,18,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,1,1,1,1,
Data from Arduino: ['1,1,1,1,1,1,']
arduino_recv_queue: ['1,1,1,1,1,1,']
RECEIVED ARDUINO 1,1,1,1,1,1,
RECEIVED PRi: ARQCV1: 0.01,9.57
ARQCV2: 0.01,9.43
ARQCV3: 0.01,13.24
ARQCV4: 0.01,12.19
ARQCV5: 0.01,13.07
Sensor 0
Data from Arduino: ['QCV1: 0.01,9.57\n', 'QCV2: 0.01,9.43\n', 'QCV3: 0.01,13.24\n', 'QCV4: 0.01,12.19\n', 'QCV5: 0.01,13.07']
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.01,9.57\n', 'QCV2: 0.01,9.43\n', 'QCV3: 0.01,13.24\n', 'QCV4: 0.01,12.19\n', 'QCV5: 0.01,13.07']
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Sensor 2
Has Obstacle in Covered Range
ie
br
Sensor 3
Has Obstacle in Covered Range
ie
br
Sensor 4
Has Obstacle in Covered Range
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 135
Arrow Not Possible @ Robot Position: (13, 1, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f803f01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"004002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"13,18,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (15, 2, 15, 1, 15, 0)
ie
Checking Free towards FORWARD
Cell to check : (12, -1, 13, -1, 14, -1)
ie
Checking Free towards LEFT
Cell to check : (15, 2, 15, 1, 15, 0)
ie
Checking Free towards FORWARD
Cell to check : (12, -1, 13, -1, 14, -1)
ie
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARQCV6: 0.02,19.06
Data from Arduino: ['QCV6: 0.02,19.06']
arduino_recv_queue: ['QCV6: 0.02,19.06']
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (13, 1, 3)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (13, 1, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f803f01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"004002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"13,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f803f01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"004002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"13,1,3","ARrobotPosition":"13,18,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,2,2,2,0,
Data from Arduino: ['1,1,2,2,2,0,']
arduino_recv_queue: ['1,1,2,2,2,0,']
RECEIVED ARDUINO 1,1,2,2,2,0,
RECEIVED PRi: ARQCV1: 0.05,12.37
ARQCV2: 0.03,12.37
ARQCV3: 0.10,19.77
ARQCV4: 0.05,19.27
ARQCV5: 0.08,21.38
ARQCV6: 0.09,60.30
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
Data from Arduino: ['QCV1: 0.05,12.37\n', 'QCV2: 0.03,12.37\n', 'QCV3: 0.10,19.77\n', 'QCV4: 0.05,19.27\n', 'QCV5: 0.08,21.38\n', 'QCV6: 0.09,60.30']
ie
arduino_recv_queue: ['QCV1: 0.05,12.37\n', 'QCV2: 0.03,12.37\n', 'QCV3: 0.10,19.77\n', 'QCV4: 0.05,19.27\n', 'QCV5: 0.08,21.38\n', 'QCV6: 0.09,60.30']
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 0, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 0, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 1, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 1, 4.0, 4.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 2, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (10, 2, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 6.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 6, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 136
Arrow Not Possible @ Robot Position: (13, 1, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {11: 1, 12: 0}
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"13,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (12, -1, 13, -1, 14, -1)
ie
Checking Free towards FORWARD
Cell to check : (11, 2, 11, 1, 0, 11)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (12, 1, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,1,3","ARrobotPosition":"12,18,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,1,1,1,0,
Data from Arduino: ['1,1,1,1,1,0,']
arduino_recv_queue: ['1,1,1,1,1,0,']
RECEIVED ARDUINO 1,1,1,1,1,0,
RECEIVED PRi: ARQCV1: 0.02,12.79
ARQCV2: 0.04,13.00
ARQCV3: 0.02,9.64
ARQCV4: 0.01,9.59
ARQCV5: 0.01,10.67
ARQCV6: 0.18,85.35
Sensor 0
Has Obstacle in Covered Range
ie
br
Sensor 1
Has Obstacle in Covered Range
ie
br
Data from Arduino: ['QCV1: 0.02,12.79\n', 'QCV2: 0.04,13.00\n', 'QCV3: 0.02,9.64\n', 'QCV4: 0.01,9.59\n', 'QCV5: 0.01,10.67\n', 'QCV6: 0.18,85.35']
Sensor 2
arduino_recv_queue: ['QCV1: 0.02,12.79\n', 'QCV2: 0.04,13.00\n', 'QCV3: 0.02,9.64\n', 'QCV4: 0.01,9.59\n', 'QCV5: 0.01,10.67\n', 'QCV6: 0.18,85.35']
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 0, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 0, 6.0, 6.0)
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 1, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 1, 8.0, 8.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 2, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 10.0, 10.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (11, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 5, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 6, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 137
Arrow Not Possible @ Robot Position: (12, 1, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (11, -1, 12, -1, 13, -1)
ie
Checking Free towards FORWARD
Cell to check : (10, 2, 10, 1, 0, 10)
West: False
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (12, 1, 0)
cells_left: [1, 2]
cells_right: [1, 2]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 10,0
Checking arrow @ 10,1
Mark Arrow Taken @ (10, 0, 'WEST')
Mark Arrow Taken @ (10, 1, 'WEST')
Arrow Possible @ Robot Position: (12, 1, 'NORTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (12, 1, 'NORTH')
Check Arrow @ (10, 0, 'WEST')
Check Arrow @ (10, 1, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,18,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,1,0","ARrobotPosition":"12,18,0","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,1,0,0,0,1,
Data from Arduino: ['1,1,0,0,0,1,']
arduino_recv_queue: ['1,1,0,0,0,1,']
RECEIVED ARDUINO 1,1,0,0,0,1,
Sensor 0
RECEIVED PRi: ARQCV1: 0.01,9.59
ARQCV2: 0.01,9.71
ARQCV3: 0.83,90.08
ARQCV4: 0.67,82.36
ARQCV5: 0.36,35.16
ARQCV6: 0.02,18.78Has Obstacle in Covered Range

Current Sesnsor Reading: x, y, count, total: (10, 0, 4, 4)
Data from Arduino: ['QCV1: 0.01,9.59\n', 'QCV2: 0.01,9.71\n', 'QCV3: 0.83,90.08\n', 'QCV4: 0.67,82.36\n', 'QCV5: 0.36,35.16\n', 'QCV6: 0.02,18.78']
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 0, 10.0, 10.0)
arduino_recv_queue: ['QCV1: 0.01,9.59\n', 'QCV2: 0.01,9.71\n', 'QCV3: 0.83,90.08\n', 'QCV4: 0.67,82.36\n', 'QCV5: 0.36,35.16\n', 'QCV6: 0.02,18.78']
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 2, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 14.0, 14.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 0.0, 22.0)
Current Sesnsor Reading: x, y, count, total: (11, 4, 0.0, 2.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 2.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 4, 0.0, 2.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [0]
--------------------------------------------------
Total move counts: 138
Checking arrow @ 10,0
Checking arrow @ 10,1
Arrow Not Possible @ Robot Position: (12, 1, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,18,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (10, 2, 10, 1, 0, 10)
West: False
Checking Free towards FORWARD
Cell to check : (11, 3, 12, 3, 13, 3)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 10,1
Checking arrow @ 10,2
Mark Arrow Taken @ (10, 1, 'WEST')
Mark Arrow Taken @ (10, 2, 'WEST')
Arrow Possible @ Robot Position: (12, 2, 'NORTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (12, 2, 'NORTH')
Check Arrow @ (10, 1, 'WEST')
Check Arrow @ (10, 2, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,17,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,2,0","ARrobotPosition":"12,17,0","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,1,
Data from Arduino: ['1,0,0,0,0,1,']
arduino_recv_queue: ['1,0,0,0,0,1,']
RECEIVED PRi: ARQCV1: 0.03,9.81
ARQCV2: 0.26,58.64
ARQCV3: 0.37,112.77
ARQCV4: 0.35,78.83
ARQCV5: 0.06,36.50
ARQCV6: 0.02,18.55
Data from Arduino: ['QCV1: 0.03,9.81\n', 'QCV2: 0.26,58.64\n', 'QCV3: 0.37,112.77\n', 'QCV4: 0.35,78.83\n', 'QCV5: 0.06,36.50\n', 'QCV6: 0.02,18.55']
arduino_recv_queue: ['1,0,0,0,0,1,', 'QCV1: 0.03,9.81\n', 'QCV2: 0.26,58.64\n', 'QCV3: 0.37,112.77\n', 'QCV4: 0.35,78.83\n', 'QCV5: 0.06,36.50\n', 'QCV6: 0.02,18.55']
RECEIVED ARDUINO 1,0,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 1, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 1, 12.0, 12.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 3, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (9, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 3, 0.0, 3.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 5, 0.0, 2.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 2.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 5, 0.0, 2.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [0]
--------------------------------------------------
Total move counts: 139
Checking arrow @ 10,1
Checking arrow @ 10,2
Arrow Not Possible @ Robot Position: (12, 2, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,17,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (10, 3, 10, 2, 1, 10)
West: False
Checking Free towards FORWARD
Cell to check : (11, 4, 12, 4, 13, 4)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 10,2
Checking arrow @ 10,3
Arrow Not Possible @ Robot Position: (12, 3, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,16,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,3,0","ARrobotPosition":"12,16,0","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,1,
Data from Arduino: ['1,0,0,0,0,1,']
arduino_recv_queue: ['1,0,0,0,0,1,']
RECEIVED PRi: ARQCV1: 0.05,12.60
ARQCV2: 0.17,57.99
ARQCV3: 0.43,90.08
ARQCV4: 0.12,67.46
ARQCV5: 0.02,28.69
ARQCV6: 0.03,18.78
Data from Arduino: ['QCV1: 0.05,12.60\n', 'QCV2: 0.17,57.99\n', 'QCV3: 0.43,90.08\n', 'QCV4: 0.12,67.46\n', 'QCV5: 0.02,28.69\n', 'QCV6: 0.03,18.78']
arduino_recv_queue: ['1,0,0,0,0,1,', 'QCV1: 0.05,12.60\n', 'QCV2: 0.17,57.99\n', 'QCV3: 0.43,90.08\n', 'QCV4: 0.12,67.46\n', 'QCV5: 0.02,28.69\n', 'QCV6: 0.03,18.78']
RECEIVED ARDUINO 1,0,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 2, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 18.0, 18.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 4, 0.0, 7.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 6, 0.0, 2.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 2.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 6, 0.0, 2.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [0]
--------------------------------------------------
Total move counts: 140
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (12, 3, 0)
cells_left: [1, 2]
cells_right: [0, 0]
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (12, 3, 0)
Status of cells surrounding robot: {0: [0, 0, 0], 1: [0, 0, 0], 2: [0, 0, 0], 3: [1, 0, 0]}
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (12, 3, 3)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (12, 3, 0)
cells_left: [1, 2]
cells_right: [0, 0]
Checking arrow @ 10,2
Checking arrow @ 10,3
Arrow Not Possible @ Robot Position: (12, 3, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,16,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (10, 4, 10, 3, 2, 10)
West: False
Checking Free towards FORWARD
Cell to check : (11, 5, 12, 5, 13, 5)
North: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 10,3
Checking arrow @ 10,4
Arrow Not Possible @ Robot Position: (12, 4, 'NORTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,15,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,4,0","ARrobotPosition":"12,15,0","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,2,1,
Data from Arduino: ['0,0,0,0,2,1,']
arduino_recv_queue: ['0,0,0,0,2,1,']
RECEIVED ARDUINO 0,0,0,0,2,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 3, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (9, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 3, 0.0, 5.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 5, 0.0, 6.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 7, 0.0, 2.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 7, 0.0, 2.0)
perm
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 7, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 26.0, 26.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [0]
--------------------------------------------------
Total move counts: 143
Checking Whether Calibration Possible...
Robot Position @ (12, 4, 0)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 10,3
Checking arrow @ 10,4
Arrow Not Possible @ Robot Position: (12, 4, 'NORTH')
--------------------------------------------------
updated_cells (sensor_readings): {}
RECEIVED PRi: ARQCV1: 0.49,119.19
ARQCV2: 0.04,32.84
ARQCV3: 1.31,259.90
ARQCV4: 0.04,55.04
ARQCV5: 0.01,17.49
ARQCV6: 0.03,19.13
Data from Arduino: ['QCV1: 0.49,119.19\n', 'QCV2: 0.04,32.84\n', 'QCV3: 1.31,259.90\n', 'QCV4: 0.04,55.04\n', 'QCV5: 0.01,17.49\n', 'QCV6: 0.03,19.13']
arduino_recv_queue: ['QCV1: 0.49,119.19\n', 'QCV2: 0.04,32.84\n', 'QCV3: 1.31,259.90\n', 'QCV4: 0.04,55.04\n', 'QCV5: 0.01,17.49\n', 'QCV6: 0.03,19.13']
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"12,15,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (10, 5, 10, 4, 3, 10)
West: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (12, 4, 3)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 13,2
Checking arrow @ 12,2
Arrow Not Possible @ Robot Position: (12, 4, 'WEST')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 12,2
Checking arrow @ 11,2
Arrow Not Possible @ Robot Position: (11, 4, 'WEST')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"11,15,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"11,4,3","ARrobotPosition":"11,15,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,0,0,0,0,
Data from Arduino: ['0,1,0,0,0,0,']
arduino_recv_queue: ['0,1,0,0,0,0,']
RECEIVED ARDUINO 0,1,0,0,0,0,
RECEIVED PRi: ARQCV1: 0.03,40.98
ARQCV2: 0.01,11.09
ARQCV3: 0.67,124.19
ARQCV4: 0.73,104.64
ARQCV5: 0.12,34.21
ARQCV6: 0.20,119.03
Sensor 0
Data from Arduino: ['QCV1: 0.03,40.98\n', 'QCV2: 0.01,11.09\n', 'QCV3: 0.67,124.19\n', 'QCV4: 0.73,104.64\n', 'QCV5: 0.12,34.21\n', 'QCV6: 0.20,119.03']
No Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.03,40.98\n', 'QCV2: 0.01,11.09\n', 'QCV3: 0.67,124.19\n', 'QCV4: 0.73,104.64\n', 'QCV5: 0.12,34.21\n', 'QCV6: 0.20,119.03']
Current Sesnsor Reading: x, y, count, total: (12, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 1, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 2, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 22.0, 22.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 3, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (8, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 3, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 4, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 4, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 5, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 5, 0.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 7, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 8, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 9, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (10, 10, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 145
Checking Whether Calibration Possible...
Robot Position @ (11, 4, 3)
cells_left: [0, 0]
cells_right: [1, 1]
Checking arrow @ 12,2
Checking arrow @ 11,2
Arrow Not Possible @ Robot Position: (11, 4, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"11,15,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (10, 2, 11, 2, 12, 2)
South: False
Checking Free towards FORWARD
Cell to check : (9, 5, 9, 4, 3, 9)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 11,2
Checking arrow @ 10,2
Mark Arrow Taken @ (11, 2, 'SOUTH')
Mark Arrow Taken @ (10, 2, 'SOUTH')
Arrow Possible @ Robot Position: (10, 4, 'WEST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (10, 4, 'WEST')
Check Arrow @ (11, 2, 'SOUTH')
Check Arrow @ (10, 2, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"10,15,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f80ff01fff3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10100080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"10,4,3","ARrobotPosition":"10,15,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,2,0,0,0,0,
Data from Arduino: ['0,2,0,0,0,0,']
arduino_recv_queue: ['0,2,0,0,0,0,']
RECEIVED ARDUINO 0,2,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 1, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 1, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 2.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 3, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (7, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 3, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 4, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 5, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 5, 0.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 9, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (9, 10, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 146
Checking Whether Calibration Possible...
Robot Position @ (10, 4, 3)
cells_left: [0, 0]
cells_right: [0, 1]
Checking arrow @ 11,2
Checking arrow @ 10,2
Arrow Not Possible @ Robot Position: (10, 4, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {40: 0, 25: 1}
RECEIVED PRi: ARQCV1: 0.03,40.64
Data from Arduino: ['QCV1: 0.03,40.64']
arduino_recv_queue: ['QCV1: 0.03,40.64']
RECEIVED PRi: ARQCV2: 0.04,20.40
ARQCV3: 0.50,124.19
ARQCV4: 1.98,85.93
ARQCV5: 0.08,36.22
ARQCV6: 0.89,177.34
Data from Arduino: ['QCV2: 0.04,20.40\n', 'QCV3: 0.50,124.19\n', 'QCV4: 1.98,85.93\n', 'QCV5: 0.08,36.22\n', 'QCV6: 0.89,177.34']
arduino_recv_queue: ['QCV1: 0.03,40.64', 'QCV2: 0.04,20.40\n', 'QCV3: 0.50,124.19\n', 'QCV4: 1.98,85.93\n', 'QCV5: 0.08,36.22\n', 'QCV6: 0.89,177.34']
SENDING AN{"exploreMap":"f80ff03fff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"1018002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"10,15,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (9, 2, 10, 2, 11, 2)
South: False
Checking Free towards FORWARD
Cell to check : (8, 5, 8, 4, 3, 8)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 10,2
Checking arrow @ 9,2
Arrow Not Possible @ Robot Position: (9, 4, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f80ff03fff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"1018002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"9,15,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f80ff03fff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"1018002000000000e000400000802040408001e01c020004000000000200002000400080","robotPosition":"9,4,3","ARrobotPosition":"9,15,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,1,
Data from Arduino: ['1,0,0,0,0,1,']
arduino_recv_queue: ['1,0,0,0,0,1,']
RECEIVED ARDUINO 1,0,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 2, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 26.0, 26.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 5, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 8.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 147
Checking Whether Calibration Possible...
Robot Position @ (9, 4, 3)
cells_left: [1, 1]
cells_right: [0, 0]
RECEIVED PRi: ARQCV1: 0.01,11.18
Checking arrow @ 10,2
Checking arrow @ 9,2
Data from Arduino: ['QCV1: 0.01,11.18']
Arrow Not Possible @ Robot Position: (9, 4, 'WEST')
arduino_recv_queue: ['QCV1: 0.01,11.18']
--------------------------------------------------
RECEIVED PRi: ARQCV2: 0.06,29.95
ARQCV3: 0.45,102.78
ARQCV4: 0.42,65.00
ARQCV5: 0.03,31.10
ARQCV6: 0.03,24.98
updated_cells (sensor_readings): {24: 0, 39: 0}
Data from Arduino: ['QCV2: 0.06,29.95\n', 'QCV3: 0.45,102.78\n', 'QCV4: 0.42,65.00\n', 'QCV5: 0.03,31.10\n', 'QCV6: 0.03,24.98']
arduino_recv_queue: ['QCV1: 0.01,11.18', 'QCV2: 0.06,29.95\n', 'QCV3: 0.45,102.78\n', 'QCV4: 0.42,65.00\n', 'QCV5: 0.03,31.10\n', 'QCV6: 0.03,24.98']
SENDING AN{"exploreMap":"f80ff07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"100c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"9,15,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (8, 2, 9, 2, 10, 2)
South: False
Checking Free towards FORWARD
Cell to check : (7, 5, 7, 4, 3, 7)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,2
Checking arrow @ 8,2
Arrow Not Possible @ Robot Position: (8, 4, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f80ff07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"100c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"8,15,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f80ff07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"100c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"8,4,3","ARrobotPosition":"8,15,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR2,0,0,0,2,0,
Data from Arduino: ['2,0,0,0,2,0,']
arduino_recv_queue: ['2,0,0,0,2,0,']
RECEIVED ARDUINO 2,0,0,0,2,0,
RECEIVED PRi: ARQCV1: 0.07,20.60
ARQCV2: 0.06,32.84
ARQCV3: 0.37,77.72
ARQCV4: 0.30,64.21
ARQCV5: 0.01,20.69
ARQCV6: 0.56,359.10
Sensor 0
Data from Arduino: ['QCV1: 0.07,20.60\n', 'QCV2: 0.06,32.84\n', 'QCV3: 0.37,77.72\n', 'QCV4: 0.30,64.21\n', 'QCV5: 0.01,20.69\n', 'QCV6: 0.56,359.10']
Has Obstacle in Covered Range
arduino_recv_queue: ['QCV1: 0.07,20.60\n', 'QCV2: 0.06,32.84\n', 'QCV3: 0.37,77.72\n', 'QCV4: 0.30,64.21\n', 'QCV5: 0.01,20.69\n', 'QCV6: 0.56,359.10']
Current Sesnsor Reading: x, y, count, total: (9, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 1, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 4.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (7, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 4.0)
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (5, 5, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 5, 4.0, 4.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (7, 10, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 14.0)
br
--------------------------------------------------
Total move counts: 148
Checking Whether Calibration Possible...
Robot Position @ (8, 4, 3)
cells_left: [0, 1]
cells_right: [0, 0]
Checking arrow @ 9,2
Checking arrow @ 8,2
Arrow Not Possible @ Robot Position: (8, 4, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {23: 0}
SENDING AN{"exploreMap":"f80ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10060004000000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"8,15,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (7, 2, 8, 2, 9, 2)
South: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (8, 4, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 10,5
Checking arrow @ 10,4
Arrow Not Possible @ Robot Position: (8, 4, 'SOUTH')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 10,4
Checking arrow @ 10,3
Arrow Not Possible @ Robot Position: (8, 3, 'SOUTH')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f80ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10060004000000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"8,16,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f80ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"10060004000000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"8,3,2","ARrobotPosition":"8,16,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 0, 0, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,1,0,0,0,
Data from Arduino: ['0,1,1,0,0,0,']
arduino_recv_queue: ['0,1,1,0,0,0,']
RECEIVED ARDUINO 0,1,1,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 4, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 2, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 30.0, 30.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 1, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 8.0, 8.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (8, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (5, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (3, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (2, 2, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 150
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (8, 3, 2)
cells_left: [0, 0]
cells_right: [1, 0]
Time to Calibrate
Getting cell status surrounding robot...
Robot Position @ (8, 3, 2)
Status of cells surrounding robot: {0: [1, 0, 0], 1: [0, 0, 0], 2: [0, 0, 0], 3: [0, 0, 1]}
Calibrating Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.19,67.46
Data from Arduino: ['QCV1: 0.19,67.46']
arduino_recv_queue: ['QCV1: 0.19,67.46']
RECEIVED PRi: ARQCV2: 0.01,7.50
ARQCV3: 0.02,11.31
ARQCV4: 0.03,30.54
ARQCV5: 0.12,30.94
ARQCV6: 0.09,67.44
Data from Arduino: ['QCV2: 0.01,7.50\n', 'QCV3: 0.02,11.31\n', 'QCV4: 0.03,30.54\n', 'QCV5: 0.12,30.94\n', 'QCV6: 0.09,67.44']
arduino_recv_queue: ['QCV2: 0.01,7.50\n', 'QCV3: 0.02,11.31\n', 'QCV4: 0.03,30.54\n', 'QCV5: 0.12,30.94\n', 'QCV6: 0.09,67.44']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (8, 3, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front T
SENDING ART

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (8, 3, 2)
cells_left: [0, 0]
cells_right: [1, 0]
Checking arrow @ 10,4
Checking arrow @ 10,3
Arrow Not Possible @ Robot Position: (8, 3, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {8: 0, 9: 0}
SENDING AN{"exploreMap":"f86ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"040180010000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"8,16,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (10, 4, 10, 3, 10, 2)
East: False
Checking Free towards FORWARD
Cell to check : (7, 1, 8, 1, 9, 1)
South: False
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (8, 3, 3)
cells_left: [1, 2]
cells_right: [0, 0]
Checking arrow @ 9,1
Checking arrow @ 8,1
Mark Arrow Taken @ (9, 1, 'SOUTH')
Mark Arrow Taken @ (8, 1, 'SOUTH')
Arrow Possible @ Robot Position: (8, 3, 'WEST')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (8, 3, 'WEST')
Check Arrow @ (9, 1, 'SOUTH')
Check Arrow @ (8, 1, 'SOUTH')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"f86ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"040180010000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"8,16,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f86ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"040180010000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"8,3,3","ARrobotPosition":"8,16,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 0, 0, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 0, 0, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR1,0,0,0,0,0,
Data from Arduino: ['1,0,0,0,0,0,']
arduino_recv_queue: ['1,0,0,0,0,0,']
RECEIVED ARDUINO 1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 1, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 12.0, 12.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (5, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (5, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 6, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 12.0)
br
--------------------------------------------------
Total move counts: 153
Checking Whether Calibration Possible...
Robot Position @ (8, 3, 3)
cells_left: [1, 2]
cells_right: [0, 0]
Checking arrow @ 9,1
Checking arrow @ 8,1
Arrow Not Possible @ Robot Position: (8, 3, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {}
SENDING AN{"exploreMap":"f86ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"040180010000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"8,16,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (7, 1, 8, 1, 9, 1)
South: False
Checking Free towards FORWARD
Cell to check : (6, 4, 6, 3, 2, 6)
West: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.01,9.93
Data from Arduino: ['QCV1: 0.01,9.93']
arduino_recv_queue: ['QCV1: 0.01,9.93']
RECEIVED PRi: ARQCV2: 0.05,27.69
ARQCV3: 0.43,77.72
ARQCV4: 0.42,56.72
ARQCV5: 0.18,37.87
ARQCV6: 3.40,1641.62
Data from Arduino: ['QCV2: 0.05,27.69\n', 'QCV3: 0.43,77.72\n', 'QCV4: 0.42,56.72\n', 'QCV5: 0.18,37.87\n', 'QCV6: 3.40,1641.62']
arduino_recv_queue: ['QCV2: 0.05,27.69\n', 'QCV3: 0.43,77.72\n', 'QCV4: 0.42,56.72\n', 'QCV5: 0.18,37.87\n', 'QCV6: 3.40,1641.62']
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 8,1
Checking arrow @ 7,1
Arrow Not Possible @ Robot Position: (7, 3, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f86ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"040180010000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"7,16,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f86ff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"040180010000000007000200000401020204000f00e010002000000000100001000200040","robotPosition":"7,3,3","ARrobotPosition":"7,16,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 0, 0, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 2, 0, 0, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,0,0,0,0,0,
Data from Arduino: ['0,0,0,0,0,0,']
arduino_recv_queue: ['0,0,0,0,0,0,']
RECEIVED ARDUINO 0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 0, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (4, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (4, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 3, 0.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 4, 0.0, 8.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (6, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (6, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 154
Checking Whether Calibration Possible...
Robot Position @ (7, 3, 3)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 8,1
Checking arrow @ 7,1
Arrow Not Possible @ Robot Position: (7, 3, 'WEST')
--------------------------------------------------
updated_cells (sensor_readings): {22: 0, 7: 0}
RECEIVED PRi: ARQCV1: 0.08,28.52
ARQCV2: 0.03,27.04
Data from Arduino: ['QCV1: 0.08,28.52\n', 'QCV2: 0.03,27.04']
arduino_recv_queue: ['QCV1: 0.08,28.52\n', 'QCV2: 0.03,27.04']
RECEIVED PRi: ARQCV3: 0.19,66.62
ARQCV4: 0.49,63.44
ARQCV5: 0.06,38.17
ARQCV6: 5.41,261.08
Data from Arduino: ['QCV3: 0.19,66.62\n', 'QCV4: 0.49,63.44\n', 'QCV5: 0.06,38.17\n', 'QCV6: 5.41,261.08']
arduino_recv_queue: ['QCV1: 0.08,28.52\n', 'QCV2: 0.03,27.04', 'QCV3: 0.19,66.62\n', 'QCV4: 0.49,63.44\n', 'QCV5: 0.06,38.17\n', 'QCV6: 5.41,261.08']
SENDING AN{"exploreMap":"f8eff1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"020060004000000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"7,16,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (6, 1, 7, 1, 8, 1)
South: True
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (7, 3, 2)
cells_left: [0, 0]
cells_right: [0, 1]
Checking arrow @ 9,4
Checking arrow @ 9,3
Arrow Not Possible @ Robot Position: (7, 3, 'SOUTH')
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,3
Checking arrow @ 9,2
Arrow Not Possible @ Robot Position: (7, 2, 'SOUTH')
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
SENDING AN{"exploreMap":"f8eff1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"020060004000000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"7,17,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8eff1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"020060004000000001c000800001004080810003c038040008000000000400004000800100","robotPosition":"7,2,2","ARrobotPosition":"7,17,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR0,1,2,2,2,0,
Data from Arduino: ['0,1,2,2,2,0,']
arduino_recv_queue: ['0,1,2,2,2,0,']
RECEIVED ARDUINO 0,1,2,2,2,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 3, 0.0, 2.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 1, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 16.0, 16.0)
br
Sensor 2
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 8.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 8.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 0, 0.0, 6.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 1, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (3, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 1, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (2, 1, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (1, 1, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 156
Checking Whether Calibration Possible...
Robot Position @ (7, 2, 2)
cells_left: [0, 0]
cells_right: [1, 1]
Checking arrow @ 9,3
Checking arrow @ 9,2
Arrow Not Possible @ Robot Position: (7, 2, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {19: 0, 20: 0, 21: 0}
RECEIVED PRi: ARQCV1: 0.22,79.98
ARQCV2: 0.01,8.68
ARQCV3: 0.01,20.31
ARQCV4: 0.01,19.18
ARQCV5: 0.03,18.84
ARQCV6: 0.05,63.15
Data from Arduino: ['QCV1: 0.22,79.98\n', 'QCV2: 0.01,8.68\n', 'QCV3: 0.01,20.31\n', 'QCV4: 0.01,19.18\n', 'QCV5: 0.03,18.84\n', 'QCV6: 0.05,63.15']
arduino_recv_queue: ['QCV1: 0.22,79.98\n', 'QCV2: 0.01,8.68\n', 'QCV3: 0.01,20.31\n', 'QCV4: 0.01,19.18\n', 'QCV5: 0.03,18.84\n', 'QCV6: 0.05,63.15']
SENDING AN{"exploreMap":"f8efffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"02000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,17,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (9, 3, 9, 2, 9, 1)
East: False
Checking Free towards FORWARD
Cell to check : (6, 0, 7, 0, 8, 0)
South: True
Forward Free
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,2
Checking arrow @ 9,1
Mark Arrow Taken @ (9, 2, 'EAST')
Mark Arrow Taken @ (9, 1, 'EAST')
Arrow Possible @ Robot Position: (7, 1, 'SOUTH')
SENDING RPI

WAITING re.compile('[01]{2}') from RPi
RECEIVED PRi: RP00
Data from RPi: ['00']
rpi_recv_queue: ['00']
RECEIVED RPI 00
Recognizing Image taken with robot position @ (7, 1, 'SOUTH')
Check Arrow @ (9, 2, 'EAST')
Check Arrow @ (9, 1, 'EAST')
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
SENDING AN{"exploreMap":"f8efffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"02000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,18,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"f8efffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"02000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,1,2","ARrobotPosition":"7,18,2","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 1, 1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

====================================================================================================
SENDING ARR

WAITING re.compile('^(\\d*,){6}$') from Arduino
RECEIVED PRi: AR2,2,1,1,1,4,
Data from Arduino: ['2,2,1,1,1,4,']
arduino_recv_queue: ['2,2,1,1,1,4,']
RECEIVED ARDUINO 2,2,1,1,1,4,
Sensor 0
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 2, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 32.0, 32.0)
br
Sensor 1
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 0, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 0, 12.0, 12.0)
br
Sensor 2
Has Obstacle in Covered Range
ie
br
Sensor 3
Has Obstacle in Covered Range
ie
br
Sensor 4
Has Obstacle in Covered Range
ie
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 0, 4, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 0, 0.0, 2.0)
perm
br
--------------------------------------------------
Total move counts: 157
Checking Whether Calibration Possible...
Robot Position @ (7, 1, 2)
cells_left: [0, 1]
cells_right: [0, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARQCV1: 0.02,19.77
Data from Arduino: ['QCV1: 0.02,19.77']
arduino_recv_queue: ['QCV1: 0.02,19.77']
RECEIVED PRi: ARQCV2: 0.05,17.22
ARQCV3: 0.01,10.65
ARQCV4: 0.01,9.28
ARQCV5: 0.01,8.62
ARQCV6: 0.03,30.37
Data from Arduino: ['QCV2: 0.05,17.22\n', 'QCV3: 0.01,10.65\n', 'QCV4: 0.01,9.28\n', 'QCV5: 0.01,8.62\n', 'QCV6: 0.03,30.37']
arduino_recv_queue: ['QCV2: 0.05,17.22\n', 'QCV3: 0.01,10.65\n', 'QCV4: 0.01,9.28\n', 'QCV5: 0.01,8.62\n', 'QCV6: 0.03,30.37']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking arrow @ 9,2
Checking arrow @ 9,1
Arrow Not Possible @ Robot Position: (7, 1, 'SOUTH')
--------------------------------------------------
updated_cells (sensor_readings): {10: 0, 4: 0, 5: 0, 6: 0}
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,18,2","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Checking Free towards LEFT
Cell to check : (9, 2, 9, 1, 9, 0)
East: False
Checking Free towards FORWARD
Cell to check : (6, -1, 7, -1, 8, -1)
ie
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (7, 1, 3)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (7, 1, 'WEST')
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,1,3","ARrobotPosition":"7,18,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 1, 1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,1,3","ARrobotPosition":"7,18,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 1, 1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

Returning to Start...
Exploration complete!
==================================================
Fast Path Cell List from (1, 7) to (1, 1):
[(1, 6), (1, 5), (1, 4), (1, 3), (1, 2), (1, 1)]
y_diff: 0
x_diff: -1
y_diff: 0
x_diff: -1
y_diff: 0
x_diff: -1
y_diff: 0
x_diff: -1
y_diff: 0
x_diff: -1
y_diff: 0
x_diff: -1
Fast Path Move List from (1, 7) to (1, 1):
[0, 0, 0, 0, 0, 0]
SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (6, 1, 'WEST')
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"6,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (5, 1, 'WEST')
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"5,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (4, 1, 'WEST')
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"4,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (3, 1, 'WEST')
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"3,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (2, 1, 'WEST')
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"2,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Arrow Not Possible @ Robot Position: (1, 1, 'WEST')
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"1,18,3","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"1,1,3","ARrobotPosition":"1,18,3","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 1, 1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

Exploration Done
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Getting cell status surrounding robot...
Robot Position @ (1, 1, 3)
Status of cells surrounding robot: {0: [1, 1, 1], 1: [0, 0, 0], 2: [0, 0, 0], 3: [1, 1, 1]}
Calibrating Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Left to Calibrate Front
SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 1, 2)
cells_left: [0, 0]
cells_right: [0, 0]
Calibrating Side Front L
SENDING ARL

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Turn Right after Calibrate Front
SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 1, 3)
cells_left: [1, 1]
cells_right: [1, 1]
Calibrating Side
SENDING ARC

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Calibrating Done!
Calibrating for fast path...
==================================================
Fast Path Cell List from (1, 1) to (8, 10):
[(1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (2, 7), (3, 7), (4, 7), (5, 7), (6, 7), (6, 8), (6, 9), (6, 10), (7, 10), (8, 10)]
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 1
y_diff: 1
Fast Path Move List from (1, 1) to (8, 10):
[2, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, -1, 0]
Checking Whether Calibration Side Possible...
Robot Position @ (1, 1, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking Whether Calibration Side Possible...
Robot Position @ (7, 1, 0)
cells_left: [0, 0]
cells_right: [0, 0]
Checking Whether Calibration Side Possible...
Robot Position @ (7, 6, 1)
cells_left: [0, 0]
cells_right: [1, 1]
Checking Whether Calibration Side Possible...
Robot Position @ (10, 6, 0)
cells_left: [0, 0]
cells_right: [0, 0]
==================================================
Fast Path Cell List from (8, 10) to (18, 13):
[(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10), (15, 10), (15, 11), (15, 12), (15, 13), (16, 13), (17, 13), (18, 13)]
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
Fast Path Move List from (8, 10) to (18, 13):
[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, -1, 0, 0]
Turning Robot
SENDING ARS

WAITING M from Arduino
RECEIVED PRi: ARMoving Backward
Data from Arduino: ['Moving Backward']
arduino_recv_queue: ['Moving Backward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
Checking Whether Calibration Possible...
Robot Position @ (1, 1, 1)
cells_left: [0, 0]
cells_right: [0, 0]
Checking arrow @ 0,3
Checking arrow @ 1,3
Arrow Not Possible @ Robot Position: (1, 1, 'EAST')
Robot Turned
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"1,18,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

Calibrating Done!
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"1,18,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"1,1,1","ARrobotPosition":"1,18,1","arrowPosition":"11,2,0,11,2,0,18,9,1,18,9,3","ARarrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
Arrow Taken Status Map:
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [1, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[1, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 1], [0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0], [0, 1, 1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

RECEIVED PRi: ANfp
Data from Android: ['fp']
android_recv_queue: ['fp']
Pop Andoird Command: fp
arduino_recv_queue: []
Original Commands: ['WWWWWW', 'A', 'WWWWW', 'D', 'WWW', 'A', 'WWWWWWWWW', 'D', 'WWW', 'A', 'WWW']
Arduino Commands: ['WWWWW', 'W', 'A', 'WWWWW', 'D', 'WWW', 'A', 'WWWWW', 'WWWW', 'D', 'WWW', 'A', 'WWW']
Start FAST PATH
SENDING ARWWWWW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"2,18,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"3,18,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"4,18,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"5,18,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"6,18,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

SENDING ARW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,18,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

SENDING ARA

WAITING M from Arduino
RECEIVED PRi: ARTurning Left
Data from Arduino: ['Turning Left']
arduino_recv_queue: ['Turning Left']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,18,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

SENDING ARWWWWW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,17,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,16,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,15,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

WAITING M from Arduino
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,14,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,13,0","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

SENDING ARD

WAITING M from Arduino
RECEIVED PRi: ARTurning Right
Data from Arduino: ['Turning Right']
arduino_recv_queue: ['Turning Right']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"7,13,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

SENDING ARWWW

WAITING M from Arduino
RECEIVED PRi: ARMoving Forward
Data from Arduino: ['Moving Forward']
arduino_recv_queue: ['Moving Forward']
RECEIVED PRi: ARM
Data from Arduino: ['M']
arduino_recv_queue: ['M']
RECEIVED ARDUINO M
SENDING AN{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","obstacleMap":"002000c00080000000038001000002008101020007807008001000000000080000800100020","robotPosition":"8,13,1","arrowPosition":"2,8,0;2,8,0;9,1,1;9,1,3"}

WAITING M from Arduino
^CTraceback (most recent call last):
  File "run_controller_gui.py", line 19, in <module>
    top.mainloop()
  File "/Users/anqitu/.pyenv/versions/3.5.2/lib/python3.5/tkinter/__init__.py", line 1131, in mainloop
    self.tk.mainloop(n)
KeyboardInterrupt
Anqis-MacBook-Pro:MDPTeam15-Algo anqitu$
