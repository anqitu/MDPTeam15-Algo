Anqis-MBP:MDPTeam15-Algo anqitu$ python run_gui.py
Init window starting
Init window completed
objc[85978]: Class FIFinderSyncExtensionHost is implemented in both /System/Library/PrivateFrameworks/FinderKit.framework/Versions/A/FinderKit (0x7fff9f8ce210) and /System/Library/PrivateFrameworks/FileProvider.framework/OverrideBundles/FinderSyncCollaborationFileProviderOverride.bundle/Contents/MacOS/FinderSyncCollaborationFileProviderOverride (0x116c86dc8). One of the two will be used. Which one is undefined.
/Users/anqitu/Workspaces/NTU/MDPTeam15-Algo/Maps/our_maps/sample22.txt
====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (0, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 5, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 5, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (2, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 5, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 1
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 1, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 76: 0, 77: 0, 78: 0, 47: 0, 48: 0, 46: 0, 61: 0, 62: 0, 63: 0}
Checking Free towards LEFT
Cell to check : (-1, 2, -1, 1, 0, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 3, 1, 3, 2, 3)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"f8007000ff01c003800700000000000000000000000000000000000000000000000000000003","obstacleMap":"000000","robotPosition":"1,2,0","ARrobotPosition":"1,17,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 3
Sensor 3
Obstacle @ Cell 3
Sensor 4
Obstacle @ Cell 3
Sensor 5
1,1,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 5, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (0, 6, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 1.0, 1.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 5, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (1, 6, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 1.0, 1.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (2, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 5, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (2, 6, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 1.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 3, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 2
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 2, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 91: 1, 92: 1, 93: 1}
Checking Free towards LEFT
Cell to check : (-1, 3, -1, 2, 1, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 4, 1, 4, 2, 4)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"f8007000ff01fe038007000e0000000000000000000000000000000000000000000000000003","obstacleMap":"0000000e","robotPosition":"1,3,0","ARrobotPosition":"1,16,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 2
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (0, 6, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 3.0, 3.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (1, 6, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 3.0, 3.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (2, 6, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 3.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 3
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 3, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {64: 0, 65: 0, 66: 0, 67: 0, 68: 0}
Checking Free towards LEFT
Cell to check : (-1, 4, -1, 3, 2, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 5, 1, 5, 2, 5)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07000e0000000000000000000000000000000000000000000000000003","obstacleMap":"000000007","robotPosition":"1,4,0","ARrobotPosition":"1,15,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
Obstacle @ Cell 5
1,1,1,1,1,5,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 7.0, 7.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 7.0, 7.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 7.0, 7.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 5, 0.0, 4.0)
br
Current Sesnsor Reading: x, y, count, total: (6, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 5, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 5, 2.0, 2.0)
br
--------------------------------------------------
Total move counts: 4
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 4, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {80: 0, 81: 0, 82: 0, 83: 1, 79: 0}
Checking Free towards LEFT
Cell to check : (-1, 5, -1, 4, 3, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 6, 1, 6, 2, 6)
North: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07f80e0000000000000000000000000000000000000000000000000003","obstacleMap":"00000000078","robotPosition":"1,4,1","ARrobotPosition":"1,15,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
ie
1,1,0,0,0,4,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 11.0, 11.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 11.0, 11.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 5, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 5, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 5, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 2.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 0, 0, 4)
perm
br
ie
br
--------------------------------------------------
Total move counts: 5
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 4, 1)
cells_left: [1, 2, 2]
cells_right: [1, 2, 2]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (0, 6, 1, 6, 2, 6)
North: False
Checking Free towards FORWARD
Cell to check : (3, 5, 3, 4, 3, 3)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07f80e0000000000000000000000000000000000000000000000000003","obstacleMap":"00000000078","robotPosition":"2,4,1","ARrobotPosition":"2,15,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
ie
1,0,0,0,0,4,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 11.0, 11.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (3, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 8, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 5, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (5, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 2.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (3, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 0, 0.0, 4.0)
br
ie
br
--------------------------------------------------
Total move counts: 6
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 4, 1)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {4: 0, 19: 0, 124: 0, 109: 0, 94: 0}
Checking Free towards LEFT
Cell to check : (1, 6, 2, 6, 3, 6)
North: False
Checking Free towards FORWARD
Cell to check : (4, 5, 4, 4, 4, 3)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"fc007800ff01fe03fc07f80f0002000400000000000000000000000000000000000000000003","obstacleMap":"0000000001e0","robotPosition":"3,4,1","ARrobotPosition":"3,15,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Obstacle @ Cell 3
Sensor 3
Sensor 4
Sensor 5
ie
1,0,3,0,0,4,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 15.0, 15.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (4, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 8, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (5, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 5, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (7, 5, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 5, 3.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 3, 0.0, 2.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (4, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 0, 0.0, 4.0)
br
ie
br
--------------------------------------------------
Total move counts: 7
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 4, 1)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {5: 0, 20: 0, 125: 0, 110: 0, 95: 0}
Checking Free towards LEFT
Cell to check : (2, 6, 3, 6, 4, 6)
North: False
Checking Free towards FORWARD
Cell to check : (5, 5, 5, 4, 5, 3)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"fe007c00ff01fe03fc07f80f8003000600000000000000000000000000000000000000000003","obstacleMap":"0000000000780","robotPosition":"4,4,1","ARrobotPosition":"4,15,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 2
Sensor 3
Sensor 4
Sensor 5
ie
0,0,2,0,0,4,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (3, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 8, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (6, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (7, 5, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 5, 5.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 4, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 3, 0.0, 1.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (5, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 0, 0.0, 4.0)
br
ie
br
--------------------------------------------------
Total move counts: 8
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 4, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {96: 0, 69: 0, 54: 0, 6: 0, 21: 0, 126: 0, 111: 0}
Checking Free towards LEFT
Cell to check : (3, 6, 4, 6, 5, 6)
North: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80fc003800700000000000000000000000000000000000000000003","obstacleMap":"000000000007800","robotPosition":"4,5,0","ARrobotPosition":"4,14,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,1,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 4, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 19.0, 19.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (3, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 9, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 7, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (4, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 8, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 9, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 7, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 9, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (8, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 6, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (9, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 10
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 5, 0)
cells_left: [0, 0, 0]
cells_right: [1, 1, 1]
--------------------------------------------------
updated_cells (sensor_readings): {97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 139: 0, 140: 0, 141: 0}
Checking Free towards LEFT
Cell to check : (2, 6, 2, 5, 4, 2)
West: False
Checking Free towards FORWARD
Cell to check : (3, 7, 4, 7, 5, 7)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe038007000e0000000000000000000000000000000000000003","obstacleMap":"00000000000780000","robotPosition":"4,6,0","ARrobotPosition":"4,13,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Obstacle @ Cell 3
Sensor 3
Sensor 4
Sensor 5
0,1,3,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 5, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 7, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 7, 4.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 8, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (3, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 9, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (3, 10, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 1.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 8, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 9, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 9, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 11
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 6, 0)
cells_left: [0, 0, 0]
cells_right: [1, 2, 2]
--------------------------------------------------
updated_cells (sensor_readings): {112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 108: 1, 154: 1, 155: 0, 156: 0}
Checking Free towards LEFT
Cell to check : (2, 7, 2, 6, 5, 2)
West: False
Checking Free towards FORWARD
Cell to check : (3, 8, 4, 8, 5, 8)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc07000e001c000000000000000000000000000000000003","obstacleMap":"0000000000078040008","robotPosition":"4,7,0","ARrobotPosition":"4,12,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Obstacle @ Cell 2
Sensor 3
Sensor 4
Sensor 5
1,0,2,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 23.0, 23.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 8, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (0, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 8, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (3, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 3.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 11, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 11, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 11, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (9, 8, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 8, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 8, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 12
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 7, 0)
cells_left: [1, 1, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {128: 0, 129: 0, 130: 0, 123: 0, 131: 0, 121: 0, 122: 0, 171: 0, 170: 0, 127: 0}
Checking Free towards LEFT
Cell to check : (2, 8, 2, 7, 6, 2)
West: False
Checking Free towards FORWARD
Cell to check : (3, 9, 4, 9, 5, 9)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff80e001c001800000000000000000000000000000003","obstacleMap":"0000000000078040000080","robotPosition":"4,8,0","ARrobotPosition":"4,11,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Sensor 4
Sensor 5
1,0,1,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 7, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 7, 8.0, 8.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 9, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (0, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 9, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 7.0, 7.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 11, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 12, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 13
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 8, 0)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {144: 0, 145: 0, 146: 0, 185: 0, 136: 0, 137: 0, 138: 0, 186: 0, 142: 0, 143: 0}
Checking Free towards LEFT
Cell to check : (2, 9, 2, 8, 7, 2)
West: False
Checking Free towards FORWARD
Cell to check : (3, 10, 4, 10, 5, 10)
North: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01c001800300000000000000000000000000003","obstacleMap":"000000000007804000000080","robotPosition":"4,8,1","ARrobotPosition":"4,11,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 11.0, 11.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (5, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 11, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 12, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 8, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 3, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (5, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 6.0)
br
--------------------------------------------------
Total move counts: 14
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 8, 1)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 10, 4, 10, 5, 10)
North: False
Checking Free towards FORWARD
Cell to check : (6, 9, 6, 8, 6, 7)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01c001800300000000000000000000000000003","obstacleMap":"000000000007804000000080","robotPosition":"5,8,1","ARrobotPosition":"5,11,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (4, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 11, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 12, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 15
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 8, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {187: 0, 172: 0, 157: 0}
Checking Free towards LEFT
Cell to check : (4, 10, 5, 10, 6, 10)
North: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01e001c00380000000000000000000000000003","obstacleMap":"0000000000078040000000800","robotPosition":"5,9,0","ARrobotPosition":"5,10,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,1,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 8, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 8, 0.0, 3.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 15.0, 15.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 13, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 11, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 13, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 11, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 12, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 13, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 10, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 10, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 10, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 10, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 17
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 9, 0)
cells_left: [0, 0, 0]
cells_right: [1, 2, 2]
--------------------------------------------------
updated_cells (sensor_readings): {160: 0, 161: 0, 162: 0, 200: 0, 201: 0, 202: 0, 158: 0, 159: 0}
Checking Free towards LEFT
Cell to check : (3, 10, 3, 9, 8, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 11, 5, 11, 6, 11)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01ff01c00380070000000000000000000000003","obstacleMap":"000000000007804000000080000","robotPosition":"5,10,0","ARrobotPosition":"5,9,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 5
0,1,0,0,0,5,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 9, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 9, 0.0, 3.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 4.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 13, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 14, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 13, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 14, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 12, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 13, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 14, 0.0, 1.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 11, 0.0, 4.0)
br
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 2.0, 2.0)
br
--------------------------------------------------
Total move counts: 18
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 10, 0)
cells_left: [0, 0, 0]
cells_right: [1, 2, 2]
--------------------------------------------------
updated_cells (sensor_readings): {176: 0, 177: 1, 217: 0, 216: 0, 169: 1, 215: 0, 173: 0, 174: 0, 175: 0}
Checking Free towards LEFT
Cell to check : (3, 11, 3, 10, 9, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 12, 5, 12, 6, 12)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01ff03fe038007000e000000000000000000003","obstacleMap":"00000000000780400000008040400","robotPosition":"5,11,0","ARrobotPosition":"5,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 19.0, 19.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 19
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 11, 0)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {192: 0, 232: 0, 182: 0, 230: 0, 231: 0, 184: 0, 183: 0, 188: 0, 189: 0, 190: 0, 191: 0}
Checking Free towards LEFT
Cell to check : (3, 12, 3, 11, 10, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 13, 5, 13, 6, 13)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01ff03fe1ffc07000e001c00000000000000003","obstacleMap":"00000000000780400000008040400000","robotPosition":"5,12,0","ARrobotPosition":"5,7,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 8.0, 8.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 13, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 13, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 16, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 20
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 12, 0)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {198: 0, 203: 0, 207: 0, 245: 0, 246: 0, 199: 0, 247: 0, 204: 0, 205: 0, 206: 0, 197: 0}
Checking Free towards LEFT
Cell to check : (3, 13, 3, 12, 11, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 14, 5, 14, 6, 14)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01ff03fe1ffc3ff80e001c00380000000000003","obstacleMap":"00000000000780400000008040400000000","robotPosition":"5,13,0","ARrobotPosition":"5,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 14, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 21
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 13, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {262: 0, 260: 0, 213: 0, 214: 0, 212: 0, 218: 0, 219: 0, 220: 0, 221: 0, 222: 0, 261: 0}
Checking Free towards LEFT
Cell to check : (3, 14, 3, 13, 12, 3)
West: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01ff03fe1ffc3ff87ff01c00380070000000003","obstacleMap":"0000000000078040000000804040000000000","robotPosition":"4,13,3","ARrobotPosition":"4,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
0,1,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 12.0, 12.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 13, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (0, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 13, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 14, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (0, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 23
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 13, 3)
cells_left: [0, 0, 0]
cells_right: [1, 1, 0]
--------------------------------------------------
updated_cells (sensor_readings): {211: 0, 196: 0, 181: 0}
Checking Free towards LEFT
Cell to check : (3, 11, 4, 11, 5, 11)
South: False
Checking Free towards FORWARD
Cell to check : (2, 14, 2, 13, 12, 2)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01ff03fe3ffc7ff8fff01c00380070000000003","obstacleMap":"00000000000780400000008040400000000000","robotPosition":"4,13,0","ARrobotPosition":"4,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Sensor 4
Sensor 5
0,0,1,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (0, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 4.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 24
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 13, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {229: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01ff03fe3ffc7ff8fff03c00380070000000003","obstacleMap":"00000000000780400000008040400000000200","robotPosition":"4,13,3","ARrobotPosition":"4,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 11, 4, 11, 5, 11)
South: False
Checking Free towards FORWARD
Cell to check : (2, 14, 2, 13, 12, 2)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff01ff03fe3ffc7ff8fff03c00380070000000003","obstacleMap":"00000000000780400000008040400000000200","robotPosition":"3,13,3","ARrobotPosition":"3,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 2
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 2
0,2,3,3,3,2,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 2.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (0, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 4.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (0, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 13, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (0, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 4.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 26
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 13, 3)
cells_left: [0, 0, 0]
cells_right: [0, 1, 0]
--------------------------------------------------
updated_cells (sensor_readings): {168: 0, 153: 1}
Checking Free towards LEFT
Cell to check : (2, 11, 3, 11, 4, 11)
South: False
Checking Free towards FORWARD
Cell to check : (1, 14, 1, 13, 12, 1)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff03ff07fe3ffc7ff8fff03c00380070000000003","obstacleMap":"0000000000078040000000c0101000000000800","robotPosition":"3,13,0","ARrobotPosition":"3,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 1
Sensor 4
Sensor 5
3,3,2,1,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (0, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 6.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (0, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 6.0)
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 8.0, 8.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 3.0)
br
--------------------------------------------------
Total move counts: 27
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 13, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {243: 1, 228: 0}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff03ff07fe3ffc7ff8fff07c00b80070000000003","obstacleMap":"0000000000078040000000c0101000000000440","robotPosition":"3,13,3","ARrobotPosition":"3,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 11, 3, 11, 4, 11)
South: False
Checking Free towards FORWARD
Cell to check : (1, 14, 1, 13, 12, 1)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff03ff07fe3ffc7ff8fff07c00b80070000000003","obstacleMap":"0000000000078040000000c0101000000000440","robotPosition":"2,13,3","ARrobotPosition":"2,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 2
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 2
1,2,2,2,2,2,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 16.0, 16.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 2.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 10.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 13, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 10.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 29
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 13, 3)
cells_left: [1, 1, 0]
cells_right: [0, 1, 0]
--------------------------------------------------
updated_cells (sensor_readings): {152: 1, 167: 0}
Checking Free towards LEFT
Cell to check : (1, 11, 2, 11, 3, 11)
South: False
Checking Free towards FORWARD
Cell to check : (0, 14, 0, 13, 12, 0)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff07ff0ffe3ffc7ff8fff07c00b80070000000003","obstacleMap":"0000000000078040000000e00404000000001100","robotPosition":"2,13,0","ARrobotPosition":"2,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 1
Sensor 5
2,2,2,2,1,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 14.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 14.0)
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 4.0, 4.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 12.0, 12.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 5.0)
br
--------------------------------------------------
Total move counts: 30
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 13, 0)
cells_left: [0, 1, 1]
cells_right: [0, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {242: 1, 227: 0}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff07ff0ffe3ffc7ff8fff0fc01b80070000000003","obstacleMap":"0000000000078040000000e004040000000008c0","robotPosition":"2,13,3","ARrobotPosition":"2,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, 11, 2, 11, 3, 11)
South: False
Checking Free towards FORWARD
Cell to check : (0, 14, 0, 13, 12, 0)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff07ff0ffe3ffc7ff8fff0fc01b80070000000003","obstacleMap":"0000000000078040000000e004040000000008c0","robotPosition":"1,13,3","ARrobotPosition":"1,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 2
Sensor 1
Obstacle @ Cell 2
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 2
2,2,1,1,1,2,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 4.0, 4.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 2.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 32
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 13, 3)
cells_left: [0, 1, 0]
cells_right: [0, 1, 0]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {166: 0, 151: 1}
Checking Free towards LEFT
Cell to check : (0, 11, 1, 11, 2, 11)
South: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff0fc01b80070000000003","obstacleMap":"0000000000078040000000f001010000000002300","robotPosition":"1,13,0","ARrobotPosition":"1,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 2
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 4.0, 4.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 6.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 9.0)
br
--------------------------------------------------
Total move counts: 33
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 13, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {241: 1, 226: 0}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"1,13,3","ARrobotPosition":"1,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (0, 11, 1, 11, 2, 11)
South: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"1,12,2","ARrobotPosition":"1,7,2"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
ie
0,1,1,1,1,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 20.0, 20.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 8.0, 8.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 6.0, 6.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 6.0, 6.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 36
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 12, 2)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 13, 3, 12, 3, 11)
East: False
Checking Free towards FORWARD
Cell to check : (0, 10, 1, 10, 2, 10)
South: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"1,12,3","ARrobotPosition":"1,7,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 3
1,1,1,1,1,3,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 12.0, 12.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 10.0, 10.0)
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 37
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 12, 3)
cells_left: [1, 0, 0]
cells_right: [1, 0, 0]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (0, 10, 1, 10, 2, 10)
South: False
Checking Free towards FORWARD
Cell to check : (-1, 13, -1, 12, 11, -1)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"1,12,0","ARrobotPosition":"1,7,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 3
Sensor 3
Obstacle @ Cell 3
Sensor 4
Obstacle @ Cell 3
Sensor 5
1,1,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 15, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 3.0, 3.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (1, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 5.0, 5.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 7.0, 7.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 5.0)
br
--------------------------------------------------
Total move counts: 38
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 12, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (-1, 13, -1, 12, 11, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 14, 1, 14, 2, 14)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"1,13,0","ARrobotPosition":"1,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 2
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (0, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 5.0, 5.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 15, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (1, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 7.0, 7.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 9.0, 9.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 10.0)
br
--------------------------------------------------
Total move counts: 39
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 13, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (-1, 14, -1, 13, 12, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 15, 1, 15, 2, 15)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"1,14,0","ARrobotPosition":"1,5,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
Obstacle @ Cell 1
1,1,1,1,1,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 9.0, 9.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 11.0, 11.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 13.0, 13.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 40
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 14, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (-1, 15, -1, 14, 13, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 16, 1, 16, 2, 16)
North: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"1,14,1","ARrobotPosition":"1,5,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,1,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 13.0, 13.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 17.0, 17.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 16.0, 16.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 41
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 14, 1)
cells_left: [1, 2, 2]
cells_right: [1, 2, 2]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (0, 16, 1, 16, 2, 16)
North: False
Checking Free towards FORWARD
Cell to check : (3, 15, 3, 14, 3, 13)
East: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"1,14,2","ARrobotPosition":"1,5,2"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Obstacle @ Cell 3
Sensor 3
Obstacle @ Cell 3
Sensor 4
Obstacle @ Cell 3
Sensor 5
ie
1,0,3,3,3,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 20.0, 20.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (2, 10, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 13.0, 13.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 10, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 7.0, 7.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 10, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 11.0, 11.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 42
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 14, 2)
cells_left: [1, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 15, 3, 14, 3, 13)
East: False
Checking Free towards FORWARD
Cell to check : (0, 12, 1, 12, 2, 12)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"1,13,2","ARrobotPosition":"1,6,2"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 2
Sensor 5
ie
0,0,2,2,2,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 15.0, 15.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 9.0, 9.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 13.0, 13.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 43
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 13, 2)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 14, 3, 13, 3, 12)
East: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"2,13,1","ARrobotPosition":"2,6,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 2
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
2,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 13.0, 13.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 24.0, 24.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 1, 0]
--------------------------------------------------
Total move counts: 45
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 13, 1)
cells_left: [0, 1, 2]
cells_right: [1, 2, 2]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, 15, 2, 15, 3, 15)
North: False
Checking Free towards FORWARD
Cell to check : (4, 14, 4, 13, 4, 12)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"3,13,1","ARrobotPosition":"3,6,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 2
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
2,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 19.0, 19.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 19.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 11.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 5.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (4, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 46
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 13, 1)
cells_left: [0, 1, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 15, 3, 15, 4, 15)
North: False
Checking Free towards FORWARD
Cell to check : (5, 14, 5, 13, 5, 12)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"4,13,1","ARrobotPosition":"4,6,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 28.0, 28.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 3.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 6.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (5, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 47
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 13, 1)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 15, 4, 15, 5, 15)
North: False
Checking Free towards FORWARD
Cell to check : (6, 14, 6, 13, 6, 12)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"5,13,1","ARrobotPosition":"5,6,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 23.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 5.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (6, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 48
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 13, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (4, 15, 5, 15, 6, 15)
North: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"0000000000078040000000f0010100000000011c0","robotPosition":"5,14,0","ARrobotPosition":"5,5,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 2
0,1,0,0,0,2,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 32.0, 32.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (5, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 18, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 50
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 14, 0)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {275: 0, 276: 0, 277: 0}
Checking Free towards LEFT
Cell to check : (3, 15, 3, 14, 13, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 16, 5, 16, 6, 16)
North: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1fc03b8007000e000003","obstacleMap":"0000000000078040000000f0010100000000011c00","robotPosition":"5,14,1","ARrobotPosition":"5,5,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 2
Sensor 3
Sensor 4
Sensor 5
0,0,2,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 19.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (4, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (7, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 15, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 15, 2.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 21.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 10, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 51
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 14, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {233: 0, 234: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03b8007000e000003","obstacleMap":"0000000000078040000000f0010100000000010f000","robotPosition":"5,14,0","ARrobotPosition":"5,5,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 15, 3, 14, 13, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 16, 5, 16, 6, 16)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03b8007000e000003","obstacleMap":"0000000000078040000000f0010100000000010f000","robotPosition":"5,15,0","ARrobotPosition":"5,4,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 2
0,1,0,0,0,2,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 16, 4.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (4, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (5, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 18, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 19, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 53
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 15, 0)
cells_left: [0, 0, 0]
cells_right: [1, 1, 1]
--------------------------------------------------
updated_cells (sensor_readings): {292: 0, 290: 0, 291: 0, 244: 1}
Checking Free towards LEFT
Cell to check : (3, 16, 3, 15, 14, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 17, 5, 17, 6, 17)
North: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03f8007000e001c03","obstacleMap":"0000000000078040000000f0010100000000010f8000","robotPosition":"5,15,1","ARrobotPosition":"5,4,1"}
Exploration Status Map:
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Sensor 5
0,0,2,2,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (4, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (4, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (7, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 16, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (7, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 15, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 15, 4.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 25.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 11, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 10, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 54
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 15, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {248: 0, 249: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe007000e001c03","obstacleMap":"0000000000078040000000f0010100000000010f8400","robotPosition":"5,15,0","ARrobotPosition":"5,4,0"}
Exploration Status Map:
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 16, 3, 15, 14, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 17, 5, 17, 6, 17)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe007000e001c03","obstacleMap":"0000000000078040000000f0010100000000010f8400","robotPosition":"5,16,0","ARrobotPosition":"5,3,0"}
Exploration Status Map:
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,0,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 36.0, 36.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 17, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (4, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (4, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 4.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (5, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 19, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (6, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 4.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 17, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 17, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 56
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 16, 0)
cells_left: [1, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {257: 0, 258: 0, 259: 0, 263: 0, 264: 0, 265: 0, 266: 0, 267: 0}
Checking Free towards LEFT
Cell to check : (3, 17, 3, 16, 15, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 18, 5, 18, 6, 18)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe03ff80e001c03","obstacleMap":"0000000000078040000000f0010100000000010f840000","robotPosition":"5,17,0","ARrobotPosition":"5,2,0"}
Exploration Status Map:
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 3
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,3,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 16, 8.0, 8.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 18, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 18, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 18, 1.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (4, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 8.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (5, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 19, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (6, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 8.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 18, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 18, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 18, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 57
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 17, 0)
cells_left: [1, 1, 1]
cells_right: [0, 0, 1]
--------------------------------------------------
updated_cells (sensor_readings): {272: 1, 273: 0, 274: 0, 278: 0, 279: 0, 280: 0, 281: 0, 282: 0}
Checking Free towards LEFT
Cell to check : (3, 18, 3, 17, 16, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 19, 5, 19, 6, 19)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe03ff87ff01c03","obstacleMap":"0000000000078040000000f0010100000000010f84004000","robotPosition":"5,18,0","ARrobotPosition":"5,1,0"}
Exploration Status Map:
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
0,0,1,1,1,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 19, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 58
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 18, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {288: 0, 289: 0, 293: 0, 294: 0, 295: 0, 296: 0, 297: 0, 287: 0}
Checking Free towards LEFT
Cell to check : (3, 19, 3, 18, 17, 3)
West: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe03ff87ff0ffe3","obstacleMap":"0000000000078040000000f0010100000000010f8400400000","robotPosition":"4,18,3","ARrobotPosition":"4,1,3"}
Exploration Status Map:
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Sensor 5
ie
0,1,0,2,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 16, 12.0, 12.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 17, 0.0, 1.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 18, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 18, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 18, 3.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 19, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (0, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 19, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 60
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 18, 3)
cells_left: [0, 0, 0]
cells_right: [1, 1, 0]
--------------------------------------------------
updated_cells (sensor_readings): {256: 0, 286: 0}
Checking Free towards LEFT
Cell to check : (3, 16, 4, 16, 5, 16)
South: False
Checking Free towards FORWARD
Cell to check : (2, 19, 2, 18, 17, 2)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"0000000000078040000000f0010100000000010f84002000000","robotPosition":"3,18,3","ARrobotPosition":"3,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
Obstacle @ Cell 1
Sensor 4
ie
Sensor 5
ie
0,1,3,1,3,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 23.0, 23.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (0, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 17, 0.0, 3.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 18, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 18, 7.0, 7.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (0, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 19, 0.0, 3.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 61
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 18, 3)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 16, 3, 16, 4, 16)
South: False
Checking Free towards FORWARD
Cell to check : (1, 19, 1, 18, 17, 1)
West: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"0000000000078040000000f0010100000000010f84002000000","robotPosition":"3,18,0","ARrobotPosition":"3,1,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
3,3,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (0, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 17, 0.0, 5.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (0, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 19, 0.0, 5.0)
ie
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 19, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (8, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (9, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 62
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 18, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, 19, 1, 18, 17, 1)
West: False
Checking Free towards FORWARD
Cell to check : (2, 20, 3, 20, 4, 20)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"0000000000078040000000f0010100000000010f84002000000","robotPosition":"3,18,1","ARrobotPosition":"3,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 19, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 6.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 5.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (4, 12, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 63
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 20, 3, 20, 4, 20)
ie
Checking Free towards FORWARD
Cell to check : (5, 19, 5, 18, 5, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"0000000000078040000000f0010100000000010f84002000000","robotPosition":"4,18,1","ARrobotPosition":"4,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 19, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 18, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 17, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 64
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 20, 4, 20, 5, 20)
ie
Checking Free towards FORWARD
Cell to check : (6, 19, 6, 18, 6, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"0000000000078040000000f0010100000000010f84002000000","robotPosition":"5,18,1","ARrobotPosition":"5,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 18, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 17, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 65
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (4, 20, 5, 20, 6, 20)
ie
Checking Free towards FORWARD
Cell to check : (7, 19, 7, 18, 7, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"0000000000078040000000f0010100000000010f84002000000","robotPosition":"6,18,1","ARrobotPosition":"6,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (10, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 18, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 17, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 26.0)
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 12.0)
br
--------------------------------------------------
Total move counts: 66
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (6, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (5, 20, 6, 20, 7, 20)
ie
Checking Free towards FORWARD
Cell to check : (8, 19, 8, 18, 8, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"0000000000078040000000f0010100000000010f84002000000","robotPosition":"7,18,1","ARrobotPosition":"7,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (10, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 18, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 1, 0]
--------------------------------------------------
Total move counts: 67
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (7, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (6, 20, 7, 20, 8, 20)
ie
Checking Free towards FORWARD
Cell to check : (9, 19, 9, 18, 9, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"0000000000078040000000f0010100000000010f84002000000","robotPosition":"8,18,1","ARrobotPosition":"8,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (11, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (11, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 18, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 17, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 0]
--------------------------------------------------
Total move counts: 68
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (8, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {298: 0, 283: 0, 268: 0}
Checking Free towards LEFT
Cell to check : (7, 20, 8, 20, 9, 20)
ie
Checking Free towards FORWARD
Cell to check : (10, 19, 10, 18, 10, 17)
East: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ffc7ff9fff3","obstacleMap":"0000000000078040000000f0010100000000010f84001000000","robotPosition":"8,18,2","ARrobotPosition":"8,1,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Sensor 5
0,0,1,1,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (11, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (12, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 17, 0.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (9, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 4.0, 4.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (8, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 16, 6.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 16, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (7, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 27.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 17, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (2, 17, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 69
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (8, 18, 2)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {250: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03ff07ffc7ff9fff3","obstacleMap":"0000000000078040000000f0010100000000010f860008000000","robotPosition":"8,18,1","ARrobotPosition":"8,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (7, 20, 8, 20, 9, 20)
ie
Checking Free towards FORWARD
Cell to check : (10, 19, 10, 18, 10, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff03ff07ffc7ff9fff3","obstacleMap":"0000000000078040000000f0010100000000010f860008000000","robotPosition":"9,18,1","ARrobotPosition":"9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (12, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 19, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 18, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 18, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (13, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 18, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 17, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 71
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {236: 0, 299: 0, 284: 0, 269: 0, 251: 0}
Checking Free towards LEFT
Cell to check : (8, 20, 9, 20, 10, 20)
ie
Checking Free towards FORWARD
Cell to check : (11, 19, 11, 18, 11, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff43ff87ffe7ffdfffb","obstacleMap":"0000000000078040000000f0010100000000010bc300010000000","robotPosition":"10,18,1","ARrobotPosition":"10,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 19, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 19, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (13, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 18, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 18, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 17, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 17, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (11, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 72
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {252: 0, 300: 0, 285: 0, 270: 0, 237: 0}
Checking Free towards LEFT
Cell to check : (9, 20, 10, 20, 11, 20)
ie
Checking Free towards FORWARD
Cell to check : (12, 19, 12, 18, 12, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffc7ff8fff1ff63ffc7fff7fffffff","obstacleMap":"0000000000078040000000f00101000000000109e1800020000000","robotPosition":"11,18,1","ARrobotPosition":"11,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 19, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 19, 0.0, 3.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 18, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 17, 0.0, 3.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 15, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 73
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {208: 0, 193: 0, 253: 0, 238: 0, 223: 0}
Checking Free towards LEFT
Cell to check : (10, 20, 11, 20, 12, 20)
ie
Checking Free towards FORWARD
Cell to check : (13, 19, 13, 18, 13, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffe7ffcfff9ff73ffe7fff7fffffff","obstacleMap":"0000000000078040000000f001010000000000211e1800010000000","robotPosition":"12,18,1","ARrobotPosition":"12,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 19, 0.0, 7.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 18, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 17, 0.0, 7.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (13, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (13, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 74
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (12, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {224: 0, 209: 0, 194: 0, 254: 0, 239: 0}
Checking Free towards LEFT
Cell to check : (11, 20, 12, 20, 13, 20)
ie
Checking Free towards FORWARD
Cell to check : (14, 19, 14, 18, 14, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3fff7ffefffdff7bfff7fff7fffffff","obstacleMap":"0000000000078040000000f0010100000000000421e18000080000000","robotPosition":"13,18,1","ARrobotPosition":"13,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 75
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {240: 0, 225: 0, 210: 0, 195: 0, 255: 0}
Checking Free towards LEFT
Cell to check : (12, 20, 13, 20, 14, 20)
ie
Checking Free towards FORWARD
Cell to check : (15, 19, 15, 18, 15, 17)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3fffffffffffff7ffffffff7fffffff","obstacleMap":"0000000000078040000000f00101000000000000841e18000040000000","robotPosition":"13,18,2","ARrobotPosition":"13,1,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 17, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 17, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 76
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 18, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 19, 15, 18, 15, 17)
ie
Checking Free towards FORWARD
Cell to check : (12, 16, 13, 16, 14, 16)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3fffffffffffff7ffffffff7fffffff","obstacleMap":"0000000000078040000000f00101000000000000841e18000040000000","robotPosition":"13,17,2","ARrobotPosition":"13,2,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 77
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 18, 15, 17, 15, 16)
ie
Checking Free towards FORWARD
Cell to check : (12, 15, 13, 15, 14, 15)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3fffffffffffff7ffffffff7fffffff","obstacleMap":"0000000000078040000000f00101000000000000841e18000040000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 2]
--------------------------------------------------
Total move counts: 78
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 17, 15, 16, 15, 15)
ie
Checking Free towards FORWARD
Cell to check : (12, 14, 13, 14, 14, 14)
South: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3fffffffffffff7ffffffff7fffffff","obstacleMap":"0000000000078040000000f00101000000000000841e18000040000000","robotPosition":"13,16,3","ARrobotPosition":"13,3,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 3
Sensor 3
Obstacle @ Cell 3
Sensor 4
Sensor 5
ie
0,0,3,3,0,3,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 3.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 3.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 15, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 15, 1.0, 1.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 5.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [0, 0]
--------------------------------------------------
Total move counts: 79
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 3)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {235: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 17, 15, 16, 15, 15)
ie
Checking Free towards FORWARD
Cell to check : (12, 14, 13, 14, 14, 14)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffe3ffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101000000000000860f0c000020000000","robotPosition":"13,15,2","ARrobotPosition":"13,4,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 3
Sensor 3
Obstacle @ Cell 3
Sensor 4
Obstacle @ Cell 3
Sensor 5
1,1,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (14, 11, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 1.0, 1.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 11, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 1.0, 1.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (12, 11, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 1.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 28.0)
br
--------------------------------------------------
Total move counts: 81
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 15, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {178: 1, 179: 1, 180: 1}
Checking Free towards LEFT
Cell to check : (15, 16, 15, 15, 15, 14)
ie
Checking Free towards FORWARD
Cell to check : (12, 13, 13, 13, 14, 13)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101e0000000000010c1e18000040000000","robotPosition":"13,14,2","ARrobotPosition":"13,5,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 2
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (14, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 3.0, 3.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 3.0, 3.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (12, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 3.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 18.0)
br
--------------------------------------------------
Total move counts: 82
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 14, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 15, 15, 14, 15, 13)
ie
Checking Free towards FORWARD
Cell to check : (12, 12, 13, 12, 14, 12)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101e0000000000010c1e18000040000000","robotPosition":"13,13,2","ARrobotPosition":"13,6,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
1,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 7.0, 7.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 7.0, 7.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 7.0, 7.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 13.0)
br
--------------------------------------------------
Total move counts: 83
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 13, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 14, 15, 13, 15, 12)
ie
Checking Free towards FORWARD
Cell to check : (12, 11, 13, 11, 14, 11)
South: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101e0000000000010c1e18000040000000","robotPosition":"13,13,3","ARrobotPosition":"13,6,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 11.0, 11.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 11.0, 11.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 8.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 18, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 84
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 13, 3)
cells_left: [1, 2, 2]
cells_right: [1, 2, 2]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (12, 11, 13, 11, 14, 11)
South: False
Checking Free towards FORWARD
Cell to check : (11, 14, 11, 13, 12, 11)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101e0000000000010c1e18000040000000","robotPosition":"12,13,3","ARrobotPosition":"12,6,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 11.0, 11.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 6.0, 6.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 7.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 9.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 14.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (11, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 19, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 85
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (12, 13, 3)
cells_left: [1, 2, 2]
cells_right: [1, 0, 2]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (11, 11, 12, 11, 13, 11)
South: False
Checking Free towards FORWARD
Cell to check : (10, 14, 10, 13, 12, 10)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101e0000000000010c1e18000040000000","robotPosition":"11,13,3","ARrobotPosition":"11,6,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 15.0, 15.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (10, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (7, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 14.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (7, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 19.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 29.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 86
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 13, 3)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (10, 11, 11, 11, 12, 11)
South: False
Checking Free towards FORWARD
Cell to check : (9, 14, 9, 13, 12, 9)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101e0000000000010c1e18000040000000","robotPosition":"10,13,3","ARrobotPosition":"10,6,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,0,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 10.0, 10.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 10, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 3.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (7, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (7, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 21.0)
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 20.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 31.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 1, 0]
--------------------------------------------------
Total move counts: 87
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 13, 3)
cells_left: [1, 0, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (9, 11, 10, 11, 11, 11)
South: False
Checking Free towards FORWARD
Cell to check : (8, 14, 8, 13, 12, 8)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101e0000000000010c1e18000040000000","robotPosition":"9,13,3","ARrobotPosition":"9,6,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 11, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (10, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (10, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 3.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 5.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 20.0)
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 25.0)
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 35.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 1, 0]
--------------------------------------------------
Total move counts: 88
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 13, 3)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (8, 11, 9, 11, 10, 11)
South: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101e0000000000010c1e18000040000000","robotPosition":"9,12,2","ARrobotPosition":"9,7,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 5
0,1,0,0,0,5,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 14.0, 14.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (10, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (10, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 8, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 10, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 5.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 22.0, 22.0)
br
--------------------------------------------------
Total move counts: 90
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 12, 2)
cells_left: [0, 0, 0]
cells_right: [1, 1, 1]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (11, 13, 11, 12, 11, 11)
East: False
Checking Free towards FORWARD
Cell to check : (8, 10, 9, 10, 10, 10)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f00101e0000000000010c1e18000040000000","robotPosition":"9,11,2","ARrobotPosition":"9,8,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 5
0,0,0,0,0,5,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 10, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (12, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 10, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (13, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (10, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 5.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 10, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 21.0, 21.0)
br
--------------------------------------------------
Total move counts: 91
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 11, 2)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {163: 0, 164: 0}
Checking Free towards LEFT
Cell to check : (11, 12, 11, 11, 11, 10)
East: False
Checking Free towards FORWARD
Cell to check : (8, 9, 9, 9, 10, 9)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ff0fffdffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000078040000000f000407800000000000430786000010000000","robotPosition":"9,10,2","ARrobotPosition":"9,9,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 18.0, 18.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 9, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (13, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 9, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 8, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 6, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 9, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 92
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 10, 2)
cells_left: [1, 1, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {147: 0, 148: 0, 149: 0}
Checking Free towards LEFT
Cell to check : (11, 11, 11, 10, 11, 9)
East: False
Checking Free towards FORWARD
Cell to check : (8, 8, 9, 8, 10, 8)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe07fc3ff87ffefffdffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780400000001e00080f000000000000860f0c000020000000","robotPosition":"9,9,2","ARrobotPosition":"9,10,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Obstacle @ Cell 3
Sensor 4
Obstacle @ Cell 3
Sensor 5
0,0,0,3,3,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 10, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (12, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 8, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (13, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 8, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 5, 0.0, 1.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (9, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (9, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 5, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 5, 1.0, 1.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (8, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 5, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 5, 1.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (6, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 93
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 9, 2)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {132: 0, 133: 0, 86: 0, 84: 1, 134: 0, 85: 1}
Checking Free towards LEFT
Cell to check : (11, 10, 11, 9, 11, 8)
East: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07ff0ffe07fc3fff7ffefffdffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000077008000000007800203c000000000002183c30000080000000","robotPosition":"10,9,1","ARrobotPosition":"10,10,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 5
0,1,0,0,0,5,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 22.0, 22.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 10, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 9, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (13, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 9, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 9, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 8, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (13, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 8, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 8, 0.0, 1.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 5, 0.0, 4.0)
br
Current Sesnsor Reading: x, y, count, total: (11, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 3, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 2.0, 2.0)
br
--------------------------------------------------
Total move counts: 95
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 9, 1)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {117: 0, 102: 0, 135: 0, 72: 0, 57: 1, 87: 0, 150: 0, 165: 0}
Checking Free towards LEFT
Cell to check : (9, 11, 10, 11, 11, 11)
North: False
Checking Free towards FORWARD
Cell to check : (12, 10, 12, 9, 12, 8)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff23fe47ff8fff07fe3fffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000040001ce008000000000f000203c000000000002183c30000080000000","robotPosition":"11,9,1","ARrobotPosition":"11,10,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
0,1,3,3,3,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 19.0, 19.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 10, 0.0, 3.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 9, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 8, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 8, 0.0, 3.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (12, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 96
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 9, 1)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {88: 0, 73: 0, 58: 0, 118: 0, 103: 0}
Checking Free towards LEFT
Cell to check : (10, 11, 11, 11, 12, 11)
North: False
Checking Free towards FORWARD
Cell to check : (13, 10, 13, 9, 13, 8)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff33fe67ffcfff87ff3fffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000004000071c0080000000007800101e0000000000010c1e18000040000000","robotPosition":"12,9,1","ARrobotPosition":"12,10,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 26.0, 26.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 15.0, 15.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 10, 0.0, 7.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 9, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 8, 0.0, 7.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (13, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 5, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (13, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (13, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 97
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (12, 9, 1)
cells_left: [1, 0, 0]
cells_right: [1, 0, 0]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {104: 0, 89: 0, 74: 0, 59: 0, 119: 0}
Checking Free towards LEFT
Cell to check : (11, 11, 12, 11, 13, 11)
North: False
Checking Free towards FORWARD
Cell to check : (14, 10, 14, 9, 14, 8)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff3bfe77ffefffc7ffbfffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000400001c380080000000003c00080f000000000000860f0c000020000000","robotPosition":"13,9,1","ARrobotPosition":"13,10,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 23.0, 23.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 15.0, 15.0)
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (14, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 98
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 9, 1)
cells_left: [1, 0, 0]
cells_right: [1, 0, 0]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {120: 0, 105: 0, 90: 0, 75: 0, 60: 0}
Checking Free towards LEFT
Cell to check : (12, 11, 13, 11, 14, 11)
North: False
Checking Free towards FORWARD
Cell to check : (15, 10, 15, 9, 15, 8)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff3ffe7fffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000040000070700080000000001e000407800000000000430786000010000000","robotPosition":"13,9,2","ARrobotPosition":"13,10,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 5, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 13.0)
br
--------------------------------------------------
Total move counts: 99
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 9, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 10, 15, 9, 15, 8)
ie
Checking Free towards FORWARD
Cell to check : (12, 7, 13, 7, 14, 7)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff3ffe7fffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000040000070700080000000001e000407800000000000430786000010000000","robotPosition":"13,8,2","ARrobotPosition":"13,11,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 4, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 9.0)
br
--------------------------------------------------
Total move counts: 100
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 8, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 9, 15, 8, 15, 7)
ie
Checking Free towards FORWARD
Cell to check : (12, 6, 13, 6, 14, 6)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff3ffe7fffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000040000070700080000000001e000407800000000000430786000010000000","robotPosition":"13,7,2","ARrobotPosition":"13,12,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 5, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 3, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (8, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 6, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (7, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 6, 0.0, 3.0)
br
--------------------------------------------------
Total move counts: 101
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 7, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 8, 15, 7, 15, 6)
ie
Checking Free towards FORWARD
Cell to check : (12, 5, 13, 5, 14, 5)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff3ffe7fffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000040000070700080000000001e000407800000000000430786000010000000","robotPosition":"13,6,2","ARrobotPosition":"13,13,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 2, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 2, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 2, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 102
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 6, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {43: 0, 44: 0, 45: 0}
Checking Free towards LEFT
Cell to check : (15, 7, 15, 6, 15, 5)
ie
Checking Free towards FORWARD
Cell to check : (12, 4, 13, 4, 14, 4)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff0fff3ffe7fffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000800000e0e00100000000003c00080f000000000000860f0c000020000000","robotPosition":"13,5,2","ARrobotPosition":"13,14,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 2, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 1, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 2, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (13, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 1, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 2, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (12, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 1, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (8, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 5.0)
br
--------------------------------------------------
Total move counts: 103
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 5, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {70: 0, 28: 0, 29: 0, 30: 0, 71: 0}
Checking Free towards LEFT
Cell to check : (15, 6, 15, 5, 15, 4)
ie
Checking Free towards FORWARD
Cell to check : (12, 3, 13, 3, 14, 3)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e07ff0fff3fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000100000070700080000000001e000407800000000000430786000010000000","robotPosition":"13,4,2","ARrobotPosition":"13,15,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 2, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 1, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 0, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 2, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (13, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 1, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (13, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 0, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 2, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (12, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 1, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (12, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 0, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 2, 2]
--------------------------------------------------
Total move counts: 104
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 4, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {13: 0, 14: 0, 15: 0}
Checking Free towards LEFT
Cell to check : (15, 5, 15, 4, 15, 3)
ie
Checking Free towards FORWARD
Cell to check : (12, 2, 13, 2, 14, 2)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff03fe07ff0fff3fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000002000000e0e00100000000003c00080f000000000000860f0c000020000000","robotPosition":"13,3,2","ARrobotPosition":"13,16,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 0, 0.0, 3.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (13, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 0, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (12, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 0, 0.0, 3.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (8, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 105
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 3, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {40: 0, 41: 0, 42: 0, 39: 0}
Checking Free towards LEFT
Cell to check : (15, 4, 15, 3, 15, 2)
ie
Checking Free towards FORWARD
Cell to check : (12, 1, 13, 1, 14, 1)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff03fe07ffffff3fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000002000000e0e00100000000003c00080f000000000000860f0c000020000000","robotPosition":"13,2,2","ARrobotPosition":"13,17,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 0, 0.0, 7.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 0, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 0, 0.0, 7.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 1, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (8, 1, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 1, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 106
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 2, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {24: 0, 25: 0, 26: 0, 27: 0, 23: 0}
Checking Free towards LEFT
Cell to check : (15, 3, 15, 2, 15, 1)
ie
Checking Free towards FORWARD
Cell to check : (12, 0, 13, 0, 14, 0)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff03feffffffff3fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000100000070700080000000001e000407800000000000430786000010000000","robotPosition":"13,1,2","ARrobotPosition":"13,18,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 0, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (8, 0, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 107
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 1, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {8: 0, 9: 0, 10: 0, 11: 0, 12: 0}
Checking Free towards LEFT
Cell to check : (15, 2, 15, 1, 15, 0)
ie
Checking Free towards FORWARD
Cell to check : (12, -1, 13, -1, 14, -1)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff3fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000000000080000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"13,1,3","ARrobotPosition":"13,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 0, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 6, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 108
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (12, -1, 13, -1, 14, -1)
ie
Checking Free towards FORWARD
Cell to check : (11, 2, 11, 1, 0, 11)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff3fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000000000080000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"12,1,3","ARrobotPosition":"12,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 0, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 109
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (12, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (11, -1, 12, -1, 13, -1)
ie
Checking Free towards FORWARD
Cell to check : (10, 2, 10, 1, 0, 10)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff3fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000000000080000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"11,1,3","ARrobotPosition":"11,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 3.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 0, 0]
--------------------------------------------------
Total move counts: 110
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (10, -1, 11, -1, 12, -1)
ie
Checking Free towards FORWARD
Cell to check : (9, 2, 9, 1, 0, 9)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff3fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000000000080000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"11,1,0","ARrobotPosition":"11,18,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Sensor 5
ie
0,0,1,1,0,3,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 3.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (10, 3, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 3, 4.0, 4.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 3, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 6.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [0, 0]
--------------------------------------------------
Total move counts: 111
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 1, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {56: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff7fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000c000001c1c00200000000007800101e0000000000010c1e18000040000000","robotPosition":"11,1,3","ARrobotPosition":"11,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (10, -1, 11, -1, 12, -1)
ie
Checking Free towards FORWARD
Cell to check : (9, 2, 9, 1, 0, 9)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff7fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000c000001c1c00200000000007800101e0000000000010c1e18000040000000","robotPosition":"10,1,3","ARrobotPosition":"10,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (6, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 0, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 1, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 3.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 0, 1]
--------------------------------------------------
Total move counts: 113
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {22: 0, 7: 0}
Checking Free towards LEFT
Cell to check : (9, -1, 10, -1, 11, -1)
ie
Checking Free towards FORWARD
Cell to check : (8, 2, 8, 1, 0, 8)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffff7fffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000300000070700080000000001e000407800000000000430786000010000000","robotPosition":"10,1,0","ARrobotPosition":"10,18,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
ie
0,0,1,1,1,4,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 0, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (9, 3, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 3, 4.0, 4.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (10, 3, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 3, 8.0, 8.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 3, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 10.0, 10.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 2, 0, 4)
perm
br
ie
br
--------------------------------------------------
Total move counts: 114
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 1, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {55: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"10,1,3","ARrobotPosition":"10,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (9, -1, 10, -1, 11, -1)
ie
Checking Free towards FORWARD
Cell to check : (8, 2, 8, 1, 0, 8)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"9,1,3","ARrobotPosition":"9,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (6, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 0, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 1, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 1, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 7.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 116
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (8, -1, 9, -1, 10, -1)
ie
Checking Free towards FORWARD
Cell to check : (7, 2, 7, 1, 0, 7)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"8,1,3","ARrobotPosition":"8,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 0, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 0, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 0, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 1, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (5, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (4, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 7.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 117
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (8, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (7, -1, 8, -1, 9, -1)
ie
Checking Free towards FORWARD
Cell to check : (6, 2, 6, 1, 0, 6)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"7,1,3","ARrobotPosition":"7,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 0, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (4, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 0, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (3, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 0, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 1, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (4, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (3, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 1, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (4, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (3, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 9.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (6, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 118
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (7, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (6, -1, 7, -1, 8, -1)
ie
Checking Free towards FORWARD
Cell to check : (5, 2, 5, 1, 0, 5)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"6,1,3","ARrobotPosition":"6,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 0, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (3, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 0, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (2, 0, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 1, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (3, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (2, 1, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (3, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (2, 2, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 5, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 6, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (5, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 119
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (6, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (5, -1, 6, -1, 7, -1)
ie
Checking Free towards FORWARD
Cell to check : (4, 2, 4, 1, 0, 4)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"5,1,3","ARrobotPosition":"5,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 0, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (2, 0, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 0, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 1, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (2, 1, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 1, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (2, 2, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 2, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 5, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 6, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (4, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 120
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (4, -1, 5, -1, 6, -1)
ie
Checking Free towards FORWARD
Cell to check : (3, 2, 3, 1, 0, 3)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"4,1,3","ARrobotPosition":"4,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 0, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 0, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 0, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 1, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 1, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 2, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 2, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 5, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (3, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 121
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, -1, 4, -1, 5, -1)
ie
Checking Free towards FORWARD
Cell to check : (2, 2, 2, 1, 0, 2)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"3,1,3","ARrobotPosition":"3,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 4
1,1,3,3,3,4,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 0, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 0, 0.0, 2.0)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 1, 0.0, 2.0)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 2, 0.0, 2.0)
perm
ie
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 5, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 27.0, 27.0)
br
--------------------------------------------------
Total move counts: 122
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, -1, 3, -1, 4, -1)
ie
Checking Free towards FORWARD
Cell to check : (1, 2, 1, 1, 0, 1)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"2,1,3","ARrobotPosition":"2,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 4
1,1,2,2,2,4,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 0, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 1, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 2, 0, 4)
perm
ie
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 5, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (1, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 15.0, 15.0)
br
--------------------------------------------------
Total move counts: 123
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, -1, 2, -1, 3, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 2, 0, 1, 0, 0)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"1,1,3","ARrobotPosition":"1,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Back to start......
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"1,1,3","ARrobotPosition":"1,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (7, 1)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (1, 1) to (7, 1):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (1, 1) to (6, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (6, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (6, 2):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (7, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (7, 2):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (8, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (8, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (8, 2):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (1, 1) to (6, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (7, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (5, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (4, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (5, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (5, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (7, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (7, 3):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (6, 3):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (5, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (5, 2):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (5, 3):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (8, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (9, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (9, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (7, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (6, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (7, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (9, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (9, 2):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (9, 3):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (8, 3):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (7, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (7, 3):
WARNING: No Path Found!
WARNING: Cannot find shortest path moves to unexplored
Valid path not found!
--------------------------------------------------
Returning to Start...
==================================================
Fast Path Cell List from (1, 1) to (1, 1):
WARNING: No Path Found!
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffe7ffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000380000038380040000000000f000203c000000000002183c30000080000000","robotPosition":"1,1,3","ARrobotPosition":"1,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Exploration Done
Filepath: /Users/anqitu/Workspaces/NTU/MDPTeam15-Algo/Maps/our_maps/sample22.txt
Calibrating for fast path...
Exception in Tkinter callback
Traceback (most recent call last):
  File "/Users/anqitu/.pyenv/versions/3.5.2/lib/python3.5/tkinter/__init__.py", line 1550, in __call__
    return self.func(*args)
  File "/Users/anqitu/Workspaces/NTU/MDPTeam15-Algo/Controllers/gui.py", line 216, in _explore
    self._calibrate_after_exploration()
  File "/Users/anqitu/Workspaces/NTU/MDPTeam15-Algo/Controllers/gui.py", line 239, in _calibrate_after_exploration
    self._fastest_path = self._find_fastest_path()
  File "/Users/anqitu/Workspaces/NTU/MDPTeam15-Algo/Controllers/gui.py", line 261, in _find_fastest_path
    goal=self._way_point)
AttributeError: 'Window' object has no attribute '_way_point'
Anqis-MBP:MDPTeam15-Algo anqitu$ python run_gui.py
Init window starting
Init window completed
objc[86009]: Class FIFinderSyncExtensionHost is implemented in both /System/Library/PrivateFrameworks/FinderKit.framework/Versions/A/FinderKit (0x7fff9f8ce210) and /System/Library/PrivateFrameworks/FileProvider.framework/OverrideBundles/FinderSyncCollaborationFileProviderOverride.bundle/Contents/MacOS/FinderSyncCollaborationFileProviderOverride (0x1153d6dc8). One of the two will be used. Which one is undefined.
/Users/anqitu/Workspaces/NTU/MDPTeam15-Algo/Maps/our_maps/sample22.txt
====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (0, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 5, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 5, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (2, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 5, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 1
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 1, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 76: 0, 77: 0, 78: 0, 47: 0, 48: 0, 46: 0, 61: 0, 62: 0, 63: 0}
Checking Free towards LEFT
Cell to check : (-1, 2, -1, 1, 0, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 3, 1, 3, 2, 3)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"f8007000ff01c003800700000000000000000000000000000000000000000000000000000003","obstacleMap":"000000","robotPosition":"1,2,0","ARrobotPosition":"1,17,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 3
Sensor 3
Obstacle @ Cell 3
Sensor 4
Obstacle @ Cell 3
Sensor 5
1,1,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 5, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (0, 6, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 1.0, 1.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 5, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (1, 6, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 1.0, 1.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 4, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (2, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 5, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (2, 6, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 1.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 3, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 2
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 2, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 91: 1, 92: 1, 93: 1}
Checking Free towards LEFT
Cell to check : (-1, 3, -1, 2, 1, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 4, 1, 4, 2, 4)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"f8007000ff01fe038007000e0000000000000000000000000000000000000000000000000003","obstacleMap":"0000000e","robotPosition":"1,3,0","ARrobotPosition":"1,16,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 2
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (0, 6, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 3.0, 3.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (1, 6, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 3.0, 3.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (2, 6, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 3.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 3
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 3, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {64: 0, 65: 0, 66: 0, 67: 0, 68: 0}
Checking Free towards LEFT
Cell to check : (-1, 4, -1, 3, 2, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 5, 1, 5, 2, 5)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07000e0000000000000000000000000000000000000000000000000003","obstacleMap":"000000007","robotPosition":"1,4,0","ARrobotPosition":"1,15,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
Obstacle @ Cell 5
1,1,1,1,1,5,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 7.0, 7.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 7.0, 7.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 7.0, 7.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 5, 0.0, 4.0)
br
Current Sesnsor Reading: x, y, count, total: (6, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 5, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 5, 2.0, 2.0)
br
--------------------------------------------------
Total move counts: 4
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 4, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {80: 0, 81: 0, 82: 0, 83: 1, 79: 0}
Checking Free towards LEFT
Cell to check : (-1, 5, -1, 4, 3, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 6, 1, 6, 2, 6)
North: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07f80e0000000000000000000000000000000000000000000000000003","obstacleMap":"00000000078","robotPosition":"1,4,1","ARrobotPosition":"1,15,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
ie
1,1,0,0,0,4,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 11.0, 11.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 11.0, 11.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 5, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 5, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 5, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (4, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 2.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 0, 0, 4)
perm
br
ie
br
--------------------------------------------------
Total move counts: 5
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 4, 1)
cells_left: [1, 2, 2]
cells_right: [1, 2, 2]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (0, 6, 1, 6, 2, 6)
North: False
Checking Free towards FORWARD
Cell to check : (3, 5, 3, 4, 3, 3)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"f8007000ff01fe03fc07f80e0000000000000000000000000000000000000000000000000003","obstacleMap":"00000000078","robotPosition":"2,4,1","ARrobotPosition":"2,15,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
ie
1,0,0,0,0,4,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 11.0, 11.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (3, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 8, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 5, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (5, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 2.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (3, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 0, 0.0, 4.0)
br
ie
br
--------------------------------------------------
Total move counts: 6
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 4, 1)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {4: 0, 19: 0, 124: 0, 109: 0, 94: 0}
Checking Free towards LEFT
Cell to check : (1, 6, 2, 6, 3, 6)
North: False
Checking Free towards FORWARD
Cell to check : (4, 5, 4, 4, 4, 3)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"fc007800ff01fe03fc07f80f0002000400000000000000000000000000000000000000000003","obstacleMap":"0000000001e0","robotPosition":"3,4,1","ARrobotPosition":"3,15,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Obstacle @ Cell 3
Sensor 3
Sensor 4
Sensor 5
ie
1,0,3,0,0,4,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 15.0, 15.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (4, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 8, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (5, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 5, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (7, 5, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 5, 3.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 3, 0.0, 2.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (4, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 0, 0.0, 4.0)
br
ie
br
--------------------------------------------------
Total move counts: 7
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 4, 1)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {5: 0, 20: 0, 125: 0, 110: 0, 95: 0}
Checking Free towards LEFT
Cell to check : (2, 6, 3, 6, 4, 6)
North: False
Checking Free towards FORWARD
Cell to check : (5, 5, 5, 4, 5, 3)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"fe007c00ff01fe03fc07f80f8003000600000000000000000000000000000000000000000003","obstacleMap":"0000000000780","robotPosition":"4,4,1","ARrobotPosition":"4,15,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 2
Sensor 3
Sensor 4
Sensor 5
ie
0,0,2,0,0,4,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (3, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 8, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (6, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (7, 5, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 5, 5.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 4, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 3, 0.0, 1.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (5, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 0, 0.0, 4.0)
br
ie
br
--------------------------------------------------
Total move counts: 8
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 4, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {96: 0, 69: 0, 54: 0, 6: 0, 21: 0, 126: 0, 111: 0}
Checking Free towards LEFT
Cell to check : (3, 6, 4, 6, 5, 6)
North: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80fc003800700000000000000000000000000000000000000000003","obstacleMap":"000000000007800","robotPosition":"4,5,0","ARrobotPosition":"4,14,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,1,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 4, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 19.0, 19.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (3, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (3, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 9, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 7, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (4, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 8, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 9, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 7, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 9, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (8, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 6, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (9, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 10
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 5, 0)
cells_left: [0, 0, 0]
cells_right: [1, 1, 1]
--------------------------------------------------
updated_cells (sensor_readings): {97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 139: 0, 140: 0, 141: 0}
Checking Free towards LEFT
Cell to check : (2, 6, 2, 5, 4, 2)
West: False
Checking Free towards FORWARD
Cell to check : (3, 7, 4, 7, 5, 7)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe038007000e0000000000000000000000000000000000000003","obstacleMap":"00000000000780000","robotPosition":"4,6,0","ARrobotPosition":"4,13,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 3
Sensor 3
Sensor 4
Sensor 5
0,0,3,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 5, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (0, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 7, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 8, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (3, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 9, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (3, 10, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 1.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 8, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 9, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 8, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 9, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 11
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 6, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {112: 0, 113: 0, 114: 0, 107: 0, 116: 0, 115: 0, 156: 0, 106: 0, 155: 0, 108: 0, 154: 1}
Checking Free towards LEFT
Cell to check : (2, 7, 2, 6, 5, 2)
West: False
Checking Free towards FORWARD
Cell to check : (3, 8, 4, 8, 5, 8)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc07000e001c000000000000000000000000000000000003","obstacleMap":"00000000000780000020","robotPosition":"4,7,0","ARrobotPosition":"4,12,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Obstacle @ Cell 2
Sensor 3
Sensor 4
Sensor 5
1,0,2,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 23.0, 23.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 8, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (0, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 8, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (3, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 3.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 11, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 11, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 11, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (9, 8, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 8, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 8, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 12
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 7, 0)
cells_left: [1, 1, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {128: 0, 129: 0, 130: 0, 123: 0, 131: 0, 121: 0, 122: 0, 171: 0, 170: 0, 127: 0}
Checking Free towards LEFT
Cell to check : (2, 8, 2, 7, 6, 2)
West: False
Checking Free towards FORWARD
Cell to check : (3, 9, 4, 9, 5, 9)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff80e001c001800000000000000000000000000000003","obstacleMap":"0000000000078000000020","robotPosition":"4,8,0","ARrobotPosition":"4,11,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Sensor 4
Sensor 5
0,0,1,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 7, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 9, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (0, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 9, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 7.0, 7.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 11, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 12, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 13
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 8, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {144: 0, 145: 0, 146: 0, 185: 0, 136: 0, 137: 0, 138: 0, 186: 0, 142: 0, 143: 0}
Checking Free towards LEFT
Cell to check : (2, 9, 2, 8, 7, 2)
West: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff01c001800300000000000000000000000000003","obstacleMap":"0000000000078000000000200","robotPosition":"3,8,3","ARrobotPosition":"3,11,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 1
0,1,3,3,3,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 27.0, 27.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (0, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 7, 0.0, 4.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 8, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 8, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 9, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 9, 0.0, 3.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 15
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 8, 3)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 6, 3, 6, 4, 6)
South: False
Checking Free towards FORWARD
Cell to check : (1, 9, 1, 8, 7, 1)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff01c001800300000000000000000000000000003","obstacleMap":"0000000000078000000000200","robotPosition":"3,8,0","ARrobotPosition":"3,11,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Sensor 5
3,3,1,1,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 7, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (0, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 7, 0.0, 6.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 9, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (0, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 9, 0.0, 5.0)
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 4.0, 4.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 11.0, 11.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (4, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 16
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 8, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {153: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff03c001800300000000000000000000000000003","obstacleMap":"0000000000078000000000300","robotPosition":"3,8,3","ARrobotPosition":"3,11,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 6, 3, 6, 4, 6)
South: False
Checking Free towards FORWARD
Cell to check : (1, 9, 1, 8, 7, 1)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff03c001800300000000000000000000000000003","obstacleMap":"0000000000078000000000300","robotPosition":"2,8,3","ARrobotPosition":"2,11,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 1
0,1,2,2,2,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 4, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 15.0, 15.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 7, 0.0, 10.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 8, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 9, 0.0, 9.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 18
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 8, 3)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, 6, 2, 6, 3, 6)
South: False
Checking Free towards FORWARD
Cell to check : (0, 9, 0, 8, 7, 0)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff03c001800300000000000000000000000000003","obstacleMap":"0000000000078000000000300","robotPosition":"2,8,0","ARrobotPosition":"2,11,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
2,2,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 7, 0.0, 14.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 9, 0.0, 13.0)
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 4.0, 4.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 8.0, 8.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 15.0, 15.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 3.0)
br
--------------------------------------------------
Total move counts: 19
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 8, 0)
cells_left: [0, 1, 1]
cells_right: [0, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {152: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff07c001800300000000000000000000000000003","obstacleMap":"0000000000078000000000380","robotPosition":"2,8,3","ARrobotPosition":"2,11,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, 6, 2, 6, 3, 6)
South: False
Checking Free towards FORWARD
Cell to check : (0, 9, 0, 8, 7, 0)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff07c001800300000000000000000000000000003","obstacleMap":"0000000000078000000000380","robotPosition":"1,8,3","ARrobotPosition":"1,11,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 1
1,1,1,1,1,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 31.0, 31.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 15.0, 15.0)
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 21
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 8, 3)
cells_left: [1, 0, 0]
cells_right: [1, 0, 0]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (0, 6, 1, 6, 2, 6)
South: False
Checking Free towards FORWARD
Cell to check : (-1, 9, -1, 8, 7, -1)
ie
Checking Free towards LEFT
Cell to check : (0, 6, 1, 6, 2, 6)
South: False
Checking Free towards FORWARD
Cell to check : (-1, 9, -1, 8, 7, -1)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff07c001800300000000000000000000000000003","obstacleMap":"0000000000078000000000380","robotPosition":"1,8,0","ARrobotPosition":"1,11,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
1,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 4.0, 4.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 8.0, 8.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 12.0, 12.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 5.0)
br
--------------------------------------------------
Total move counts: 22
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 8, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {151: 1}
Checking Free towards LEFT
Cell to check : (-1, 9, -1, 8, 7, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 10, 1, 10, 2, 10)
North: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fc001800300000000000000000000000000003","obstacleMap":"00000000000780000000003c0","robotPosition":"1,8,1","ARrobotPosition":"1,11,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 8.0, 8.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 16.0, 16.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 7, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 7, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 23
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 8, 1)
cells_left: [1, 2, 2]
cells_right: [1, 2, 2]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (0, 10, 1, 10, 2, 10)
North: False
Checking Free towards FORWARD
Cell to check : (3, 9, 3, 8, 3, 7)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fc001800300000000000000000000000000003","obstacleMap":"00000000000780000000003c0","robotPosition":"2,8,1","ARrobotPosition":"2,11,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 12.0, 12.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 19.0, 19.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 9.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 8, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 7, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 5.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 4, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (3, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 9.0)
br
--------------------------------------------------
Total move counts: 24
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 8, 1)
cells_left: [1, 2, 2]
cells_right: [1, 2, 2]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, 10, 2, 10, 3, 10)
North: False
Checking Free towards FORWARD
Cell to check : (4, 9, 4, 8, 4, 7)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fc001800300000000000000000000000000003","obstacleMap":"00000000000780000000003c0","robotPosition":"3,8,1","ARrobotPosition":"3,11,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 20.0, 20.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (4, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 3.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 6.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 8, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (7, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 3, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (4, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 7.0)
br
--------------------------------------------------
Total move counts: 25
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 8, 1)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 10, 3, 10, 4, 10)
North: False
Checking Free towards FORWARD
Cell to check : (5, 9, 5, 8, 5, 7)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fc001800300000000000000000000000000003","obstacleMap":"00000000000780000000003c0","robotPosition":"4,8,1","ARrobotPosition":"4,11,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 23.0, 23.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 10, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (5, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 11, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 12, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 9, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 8, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (7, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 7, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 3, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (5, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 6.0)
br
--------------------------------------------------
Total move counts: 26
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 8, 1)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 10, 4, 10, 5, 10)
North: False
Checking Free towards FORWARD
Cell to check : (6, 9, 6, 8, 6, 7)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fc001800300000000000000000000000000003","obstacleMap":"00000000000780000000003c0","robotPosition":"5,8,1","ARrobotPosition":"5,11,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 10, 0.0, 19.0)
Current Sesnsor Reading: x, y, count, total: (4, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 4.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 11, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 11, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 12, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 27
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 8, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {187: 0, 172: 0, 157: 0}
Checking Free towards LEFT
Cell to check : (4, 10, 5, 10, 6, 10)
North: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fe001c00380000000000000000000000000003","obstacleMap":"00000000000780000000003c00","robotPosition":"5,9,0","ARrobotPosition":"5,10,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,1,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 8, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 27.0, 27.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 11, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 13, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 11, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 13, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 11, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 12, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 13, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 10, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 10, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 10, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 10, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 29
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 9, 0)
cells_left: [0, 0, 0]
cells_right: [1, 1, 1]
--------------------------------------------------
updated_cells (sensor_readings): {160: 0, 161: 0, 162: 0, 200: 0, 201: 0, 202: 0, 158: 0, 159: 0}
Checking Free towards LEFT
Cell to check : (3, 10, 3, 9, 8, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 11, 5, 11, 6, 11)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff01c00380070000000000000000000000003","obstacleMap":"00000000000780000000003c0000","robotPosition":"5,10,0","ARrobotPosition":"5,9,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 5
0,1,0,0,0,5,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 9, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 4.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 12, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 13, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 14, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 13, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 14, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 12, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 13, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 14, 0.0, 1.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 11, 0.0, 4.0)
br
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 2.0, 2.0)
br
--------------------------------------------------
Total move counts: 30
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 10, 0)
cells_left: [0, 0, 0]
cells_right: [1, 2, 2]
--------------------------------------------------
updated_cells (sensor_readings): {176: 0, 177: 1, 217: 0, 216: 0, 169: 1, 215: 0, 173: 0, 174: 0, 175: 0}
Checking Free towards LEFT
Cell to check : (3, 11, 3, 10, 9, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 12, 5, 12, 6, 12)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff03fe038007000e000000000000000000003","obstacleMap":"00000000000780000000003c020200","robotPosition":"5,11,0","ARrobotPosition":"5,8,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 31.0, 31.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 31
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 11, 0)
cells_left: [1, 1, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {192: 0, 232: 0, 182: 0, 230: 0, 231: 0, 184: 0, 183: 0, 188: 0, 189: 0, 190: 0, 191: 0}
Checking Free towards LEFT
Cell to check : (3, 12, 3, 11, 10, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 13, 5, 13, 6, 13)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff03fe1ffc07000e001c00000000000000003","obstacleMap":"00000000000780000000003c020200000","robotPosition":"5,12,0","ARrobotPosition":"5,7,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 8.0, 8.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 13, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 13, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 16, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 32
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 12, 0)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {198: 0, 203: 0, 207: 0, 245: 0, 246: 0, 199: 0, 247: 0, 204: 0, 205: 0, 206: 0, 197: 0}
Checking Free towards LEFT
Cell to check : (3, 13, 3, 12, 11, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 14, 5, 14, 6, 14)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff03fe1ffc3ff80e001c00380000000000003","obstacleMap":"00000000000780000000003c020200000000","robotPosition":"5,13,0","ARrobotPosition":"5,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 14, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 33
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 13, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {262: 0, 260: 0, 213: 0, 214: 0, 212: 0, 218: 0, 219: 0, 220: 0, 221: 0, 222: 0, 261: 0}
Checking Free towards LEFT
Cell to check : (3, 14, 3, 13, 12, 3)
West: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff03fe1ffc3ff87ff01c00380070000000003","obstacleMap":"00000000000780000000003c020200000000000","robotPosition":"4,13,3","ARrobotPosition":"4,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
0,1,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 12.0, 12.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 13, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (0, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 13, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 14, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (0, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 35
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 13, 3)
cells_left: [0, 0, 0]
cells_right: [1, 1, 0]
--------------------------------------------------
updated_cells (sensor_readings): {211: 0, 196: 0, 181: 0}
Checking Free towards LEFT
Cell to check : (3, 11, 4, 11, 5, 11)
South: False
Checking Free towards FORWARD
Cell to check : (2, 14, 2, 13, 12, 2)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff03fe3ffc7ff8fff01c00380070000000003","obstacleMap":"00000000000780000000003c020200000000000","robotPosition":"4,13,0","ARrobotPosition":"4,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Sensor 4
Sensor 5
0,0,1,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 12, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (0, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 4.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 36
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 13, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {229: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff03fe3ffc7ff8fff03c00380070000000003","obstacleMap":"00000000000780000000003c0202000000001000","robotPosition":"4,13,3","ARrobotPosition":"4,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 11, 4, 11, 5, 11)
South: False
Checking Free towards FORWARD
Cell to check : (2, 14, 2, 13, 12, 2)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff03fe3ffc7ff8fff03c00380070000000003","obstacleMap":"00000000000780000000003c0202000000001000","robotPosition":"3,13,3","ARrobotPosition":"3,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 2
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 2
0,2,3,3,3,2,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 22.0, 22.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (0, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 4.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (0, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 13, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (0, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 4.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 38
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 13, 3)
cells_left: [0, 0, 0]
cells_right: [0, 1, 0]
--------------------------------------------------
updated_cells (sensor_readings): {168: 0}
Checking Free towards LEFT
Cell to check : (2, 11, 3, 11, 4, 11)
South: False
Checking Free towards FORWARD
Cell to check : (1, 14, 1, 13, 12, 1)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff07fe3ffc7ff8fff03c00380070000000003","obstacleMap":"00000000000780000000003c0101000000000800","robotPosition":"3,13,0","ARrobotPosition":"3,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 1
Sensor 4
Sensor 5
3,3,2,1,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 12, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (0, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 6.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 14, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (0, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 6.0)
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 8.0, 8.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 3.0)
br
--------------------------------------------------
Total move counts: 39
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 13, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {243: 1, 228: 0}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff07fe3ffc7ff8fff07c00b80070000000003","obstacleMap":"00000000000780000000003c0101000000000440","robotPosition":"3,13,3","ARrobotPosition":"3,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 11, 3, 11, 4, 11)
South: False
Checking Free towards FORWARD
Cell to check : (1, 14, 1, 13, 12, 1)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff07fe3ffc7ff8fff07c00b80070000000003","obstacleMap":"00000000000780000000003c0101000000000440","robotPosition":"2,13,3","ARrobotPosition":"2,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 2
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 2
1,2,2,2,2,2,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 16.0, 16.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 14.0, 14.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 10.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 13, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 10.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 41
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 13, 3)
cells_left: [1, 1, 0]
cells_right: [0, 1, 0]
--------------------------------------------------
updated_cells (sensor_readings): {167: 0}
Checking Free towards LEFT
Cell to check : (1, 11, 2, 11, 3, 11)
South: False
Checking Free towards FORWARD
Cell to check : (0, 14, 0, 13, 12, 0)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff0ffe3ffc7ff8fff07c00b80070000000003","obstacleMap":"00000000000780000000003c00808000000002200","robotPosition":"2,13,0","ARrobotPosition":"2,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 1
Sensor 5
2,2,2,2,1,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 12, 0.0, 14.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 14, 0.0, 14.0)
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 4.0, 4.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 12.0, 12.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 5.0)
br
--------------------------------------------------
Total move counts: 42
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 13, 0)
cells_left: [0, 1, 1]
cells_right: [0, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {242: 1, 227: 0}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff0ffe3ffc7ff8fff0fc01b80070000000003","obstacleMap":"00000000000780000000003c00808000000001180","robotPosition":"2,13,3","ARrobotPosition":"2,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, 11, 2, 11, 3, 11)
South: False
Checking Free towards FORWARD
Cell to check : (0, 14, 0, 13, 12, 0)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff0ffe3ffc7ff8fff0fc01b80070000000003","obstacleMap":"00000000000780000000003c00808000000001180","robotPosition":"1,13,3","ARrobotPosition":"1,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 2
Sensor 1
Obstacle @ Cell 2
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 2
2,2,1,1,1,2,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 24.0, 24.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 11, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 10.0, 10.0)
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 44
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 13, 3)
cells_left: [0, 1, 0]
cells_right: [0, 1, 0]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {166: 0}
Checking Free towards LEFT
Cell to check : (0, 11, 1, 11, 2, 11)
South: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff0fc01b80070000000003","obstacleMap":"00000000000780000000003c004040000000008c0","robotPosition":"1,13,0","ARrobotPosition":"1,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 2
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 4.0, 4.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 6.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 9.0)
br
--------------------------------------------------
Total move counts: 45
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 13, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {241: 1, 226: 0}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"1,13,3","ARrobotPosition":"1,6,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (0, 11, 1, 11, 2, 11)
South: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"1,12,2","ARrobotPosition":"1,7,2"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
ie
0,1,1,1,1,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 20.0, 20.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 28.0, 28.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 18.0, 18.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 14.0, 14.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 48
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 12, 2)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 13, 3, 12, 3, 11)
East: False
Checking Free towards FORWARD
Cell to check : (0, 10, 1, 10, 2, 10)
South: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"1,12,3","ARrobotPosition":"1,7,3"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 3
1,1,1,1,1,3,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 32.0, 32.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 18.0, 18.0)
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 49
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 12, 3)
cells_left: [1, 0, 0]
cells_right: [1, 0, 0]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (0, 10, 1, 10, 2, 10)
South: False
Checking Free towards FORWARD
Cell to check : (-1, 13, -1, 12, 11, -1)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"1,12,0","ARrobotPosition":"1,7,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 3
Sensor 3
Obstacle @ Cell 3
Sensor 4
Obstacle @ Cell 3
Sensor 5
1,1,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 15, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (0, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 3.0, 3.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (1, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 5.0, 5.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 7.0, 7.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 5.0)
br
--------------------------------------------------
Total move counts: 50
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 12, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (-1, 13, -1, 12, 11, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 14, 1, 14, 2, 14)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"1,13,0","ARrobotPosition":"1,6,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 2
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (0, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 5.0, 5.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 15, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (1, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 7.0, 7.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 15, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (2, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 9.0, 9.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 10.0)
br
--------------------------------------------------
Total move counts: 51
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 13, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (-1, 14, -1, 13, 12, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 15, 1, 15, 2, 15)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"1,14,0","ARrobotPosition":"1,5,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
Obstacle @ Cell 1
1,1,1,1,1,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 9.0, 9.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 11.0, 11.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 13.0, 13.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 52
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 14, 0)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (-1, 15, -1, 14, 13, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 16, 1, 16, 2, 16)
North: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"1,14,1","ARrobotPosition":"1,5,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,1,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 16, 13.0, 13.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 17.0, 17.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 16.0, 16.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 53
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 14, 1)
cells_left: [1, 2, 2]
cells_right: [1, 2, 2]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (0, 16, 1, 16, 2, 16)
North: False
Checking Free towards FORWARD
Cell to check : (3, 15, 3, 14, 3, 13)
East: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"1,14,2","ARrobotPosition":"1,5,2"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Obstacle @ Cell 3
Sensor 3
Obstacle @ Cell 3
Sensor 4
Obstacle @ Cell 3
Sensor 5
ie
1,0,3,3,3,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 20.0, 20.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (2, 10, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 33.0, 33.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 10, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 19.0, 19.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 10, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 19.0, 19.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 54
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 14, 2)
cells_left: [1, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 15, 3, 14, 3, 13)
East: False
Checking Free towards FORWARD
Cell to check : (0, 12, 1, 12, 2, 12)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"1,13,2","ARrobotPosition":"1,6,2"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 2
Sensor 5
ie
0,0,2,2,2,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 10, 35.0, 35.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 10, 21.0, 21.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 10, 21.0, 21.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 55
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 13, 2)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 14, 3, 13, 3, 12)
East: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"2,13,1","ARrobotPosition":"2,6,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 2
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
2,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 16, 13.0, 13.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 24.0, 24.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 1, 0]
--------------------------------------------------
Total move counts: 57
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 13, 1)
cells_left: [0, 1, 2]
cells_right: [1, 2, 2]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, 15, 2, 15, 3, 15)
North: False
Checking Free towards FORWARD
Cell to check : (4, 14, 4, 13, 4, 12)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"3,13,1","ARrobotPosition":"3,6,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 2
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
2,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 19.0, 19.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 19.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 11.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 5.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (4, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 58
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 13, 1)
cells_left: [0, 1, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 15, 3, 15, 4, 15)
North: False
Checking Free towards FORWARD
Cell to check : (5, 14, 5, 13, 5, 12)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"4,13,1","ARrobotPosition":"4,6,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 28.0, 28.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 15, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 3.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 6.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (5, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 59
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 13, 1)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 15, 4, 15, 5, 15)
North: False
Checking Free towards FORWARD
Cell to check : (6, 14, 6, 13, 6, 12)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"5,13,1","ARrobotPosition":"5,6,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 15, 0.0, 23.0)
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 5.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 15, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (6, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 60
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 13, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (4, 15, 5, 15, 6, 15)
North: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b80070000000003","obstacleMap":"00000000000780000000003c004040000000004700","robotPosition":"5,14,0","ARrobotPosition":"5,5,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 2
0,1,0,0,0,2,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 32.0, 32.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 16, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (5, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 18, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 62
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 14, 0)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {275: 0, 276: 0, 277: 0}
Checking Free towards LEFT
Cell to check : (3, 15, 3, 14, 13, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 16, 5, 16, 6, 16)
North: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1fc03b8007000e000003","obstacleMap":"00000000000780000000003c0040400000000047000","robotPosition":"5,14,1","ARrobotPosition":"5,5,1"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 2
Sensor 3
Sensor 4
Sensor 5
0,0,2,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 16, 0.0, 19.0)
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (4, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 16, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (7, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 15, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 15, 2.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 21.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 10, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 63
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 14, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {233: 0, 234: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03b8007000e000003","obstacleMap":"00000000000780000000003c0040400000000043c00","robotPosition":"5,14,0","ARrobotPosition":"5,5,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 15, 3, 14, 13, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 16, 5, 16, 6, 16)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03b8007000e000003","obstacleMap":"00000000000780000000003c0040400000000043c00","robotPosition":"5,15,0","ARrobotPosition":"5,4,0"}
Exploration Status Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 2
0,1,0,0,0,2,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 16, 4.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (4, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (4, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 17, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (5, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 18, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 19, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 2]
--------------------------------------------------
Total move counts: 65
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 15, 0)
cells_left: [0, 0, 0]
cells_right: [1, 1, 1]
--------------------------------------------------
updated_cells (sensor_readings): {292: 0, 290: 0, 291: 0, 244: 1}
Checking Free towards LEFT
Cell to check : (3, 16, 3, 15, 14, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 17, 5, 17, 6, 17)
North: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03f8007000e001c03","obstacleMap":"00000000000780000000003c0040400000000043e000","robotPosition":"5,15,1","ARrobotPosition":"5,4,1"}
Exploration Status Map:
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Sensor 5
0,0,2,2,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 17, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (4, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (4, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 17, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (7, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 16, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 16, 2.0, 2.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (7, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 15, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 15, 4.0, 4.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 25.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 6.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 11, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 10, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 66
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 15, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {248: 0, 249: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe007000e001c03","obstacleMap":"00000000000780000000003c0040400000000043e1000","robotPosition":"5,15,0","ARrobotPosition":"5,4,0"}
Exploration Status Map:
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 16, 3, 15, 14, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 17, 5, 17, 6, 17)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe007000e001c03","obstacleMap":"00000000000780000000003c0040400000000043e1000","robotPosition":"5,16,0","ARrobotPosition":"5,3,0"}
Exploration Status Map:
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,0,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 15, 36.0, 36.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 17, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (4, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 18, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (4, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 4.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (5, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 19, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (6, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 18, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 4.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 17, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 17, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 68
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 16, 0)
cells_left: [1, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {257: 0, 258: 0, 259: 0, 263: 0, 264: 0, 265: 0, 266: 0, 267: 0}
Checking Free towards LEFT
Cell to check : (3, 17, 3, 16, 15, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 18, 5, 18, 6, 18)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe03ff80e001c03","obstacleMap":"00000000000780000000003c0040400000000043e100000","robotPosition":"5,17,0","ARrobotPosition":"5,2,0"}
Exploration Status Map:
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 3
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,3,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 16, 8.0, 8.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 18, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 18, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 18, 1.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (4, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 19, 0.0, 8.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (5, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 19, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (6, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 19, 0.0, 8.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 18, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 18, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 18, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 69
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 17, 0)
cells_left: [1, 1, 1]
cells_right: [0, 0, 1]
--------------------------------------------------
updated_cells (sensor_readings): {272: 1, 273: 0, 274: 0, 278: 0, 279: 0, 280: 0, 281: 0, 282: 0}
Checking Free towards LEFT
Cell to check : (3, 18, 3, 17, 16, 3)
West: False
Checking Free towards FORWARD
Cell to check : (4, 19, 5, 19, 6, 19)
North: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe03ff87ff01c03","obstacleMap":"00000000000780000000003c0040400000000043e10010000","robotPosition":"5,18,0","ARrobotPosition":"5,1,0"}
Exploration Status Map:
[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
0,0,1,1,1,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (2, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (1, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (2, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 19, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (1, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 1.0)
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (11, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 70
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 18, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {288: 0, 289: 0, 293: 0, 294: 0, 295: 0, 296: 0, 297: 0, 287: 0}
Checking Free towards LEFT
Cell to check : (3, 19, 3, 18, 17, 3)
West: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe03ff87ff0ffe3","obstacleMap":"00000000000780000000003c0040400000000043e1001000000","robotPosition":"4,18,3","ARrobotPosition":"4,1,3"}
Exploration Status Map:
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Sensor 5
ie
0,1,0,2,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 16, 12.0, 12.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (1, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (0, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 17, 0.0, 1.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 18, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 18, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 18, 3.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 19, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (1, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (0, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 19, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 72
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 18, 3)
cells_left: [0, 0, 0]
cells_right: [1, 1, 0]
--------------------------------------------------
updated_cells (sensor_readings): {256: 0, 286: 0}
Checking Free towards LEFT
Cell to check : (3, 16, 4, 16, 5, 16)
South: False
Checking Free towards FORWARD
Cell to check : (2, 19, 2, 18, 17, 2)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"00000000000780000000003c0040400000000043e1000800000","robotPosition":"3,18,3","ARrobotPosition":"3,1,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
Obstacle @ Cell 1
Sensor 4
ie
Sensor 5
ie
0,1,3,1,3,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (2, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 16, 23.0, 23.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (0, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 17, 0.0, 3.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 18, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 18, 7.0, 7.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (0, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 19, 0.0, 3.0)
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 73
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 18, 3)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 16, 3, 16, 4, 16)
South: False
Checking Free towards FORWARD
Cell to check : (1, 19, 1, 18, 17, 1)
West: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"00000000000780000000003c0040400000000043e1000800000","robotPosition":"3,18,0","ARrobotPosition":"3,1,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
3,3,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 17, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (0, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 17, 0.0, 5.0)
ie
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 19, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (0, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 19, 0.0, 5.0)
ie
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 19, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (8, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (9, 19, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 74
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 18, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, 19, 1, 18, 17, 1)
West: False
Checking Free towards FORWARD
Cell to check : (2, 20, 3, 20, 4, 20)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"00000000000780000000003c0040400000000043e1000800000","robotPosition":"3,18,1","ARrobotPosition":"3,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 19, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 19, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 6.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 5.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (4, 12, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 75
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, 20, 3, 20, 4, 20)
ie
Checking Free towards FORWARD
Cell to check : (5, 19, 5, 18, 5, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"00000000000780000000003c0040400000000043e1000800000","robotPosition":"4,18,1","ARrobotPosition":"4,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 19, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 18, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 17, 0.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 76
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, 20, 4, 20, 5, 20)
ie
Checking Free towards FORWARD
Cell to check : (6, 19, 6, 18, 6, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"00000000000780000000003c0040400000000043e1000800000","robotPosition":"5,18,1","ARrobotPosition":"5,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 19, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 0.0, 3.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 18, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 18, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 17, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 17, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 77
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (4, 20, 5, 20, 6, 20)
ie
Checking Free towards FORWARD
Cell to check : (7, 19, 7, 18, 7, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"00000000000780000000003c0040400000000043e1000800000","robotPosition":"6,18,1","ARrobotPosition":"6,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 19, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (10, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 18, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 17, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 26.0)
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 12.0)
br
--------------------------------------------------
Total move counts: 78
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (6, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (5, 20, 6, 20, 7, 20)
ie
Checking Free towards FORWARD
Cell to check : (8, 19, 8, 18, 8, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"00000000000780000000003c0040400000000043e1000800000","robotPosition":"7,18,1","ARrobotPosition":"7,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 19, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (10, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 18, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 18, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 1, 0]
--------------------------------------------------
Total move counts: 79
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (7, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (6, 20, 7, 20, 8, 20)
ie
Checking Free towards FORWARD
Cell to check : (9, 19, 9, 18, 9, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ff87ff1ffe3","obstacleMap":"00000000000780000000003c0040400000000043e1000800000","robotPosition":"8,18,1","ARrobotPosition":"8,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (11, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 18, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (11, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 18, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 18, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 17, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 2, 0]
--------------------------------------------------
Total move counts: 80
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (8, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {298: 0, 283: 0, 268: 0}
Checking Free towards LEFT
Cell to check : (7, 20, 8, 20, 9, 20)
ie
Checking Free towards FORWARD
Cell to check : (10, 19, 10, 18, 10, 17)
East: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03fe07ffc7ff9fff3","obstacleMap":"00000000000780000000003c0040400000000043e10004000000","robotPosition":"8,18,2","ARrobotPosition":"8,1,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Sensor 5
0,0,1,1,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 19, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (11, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (12, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 17, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 17, 0.0, 2.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (9, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 4.0, 4.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (8, 16, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 16, 6.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 16, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (7, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 27.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 17, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (2, 17, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 81
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (8, 18, 2)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {250: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03ff07ffc7ff9fff3","obstacleMap":"00000000000780000000003c0040400000000043e18002000000","robotPosition":"8,18,1","ARrobotPosition":"8,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (7, 20, 8, 20, 9, 20)
ie
Checking Free towards FORWARD
Cell to check : (10, 19, 10, 18, 10, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff03ff07ffc7ff9fff3","obstacleMap":"00000000000780000000003c0040400000000043e18002000000","robotPosition":"9,18,1","ARrobotPosition":"9,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 19, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (12, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 19, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 18, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 18, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (13, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 18, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 17, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 17, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 17, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 83
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {236: 0, 299: 0, 284: 0, 269: 0, 251: 0}
Checking Free towards LEFT
Cell to check : (8, 20, 9, 20, 10, 20)
ie
Checking Free towards FORWARD
Cell to check : (11, 19, 11, 18, 11, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff43ff87ffe7ffdfffb","obstacleMap":"00000000000780000000003c0040400000000042f0c0004000000","robotPosition":"10,18,1","ARrobotPosition":"10,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 2, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 19, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 19, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 19, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 19, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (13, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 18, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 18, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 18, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 17, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 17, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 17, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 17, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (11, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 84
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {252: 0, 300: 0, 285: 0, 270: 0, 237: 0}
Checking Free towards LEFT
Cell to check : (9, 20, 10, 20, 11, 20)
ie
Checking Free towards FORWARD
Cell to check : (12, 19, 12, 18, 12, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffc7ff8fff1ff63ffc7fff7fffffff","obstacleMap":"00000000000780000000003c0040400000000042786000080000000","robotPosition":"11,18,1","ARrobotPosition":"11,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 19, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 19, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 19, 0.0, 3.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 18, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 18, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 18, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 17, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 17, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 17, 0.0, 3.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 15, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 85
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {208: 0, 193: 0, 253: 0, 238: 0, 223: 0}
Checking Free towards LEFT
Cell to check : (10, 20, 11, 20, 12, 20)
ie
Checking Free towards FORWARD
Cell to check : (13, 19, 13, 18, 13, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffe7ffcfff9ff73ffe7fff7fffffff","obstacleMap":"00000000000780000000003c00404000000000084786000040000000","robotPosition":"12,18,1","ARrobotPosition":"12,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 19, 0.0, 7.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 18, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 18, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 17, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 17, 0.0, 7.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (13, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (13, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 86
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (12, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {224: 0, 209: 0, 194: 0, 254: 0, 239: 0}
Checking Free towards LEFT
Cell to check : (11, 20, 12, 20, 13, 20)
ie
Checking Free towards FORWARD
Cell to check : (14, 19, 14, 18, 14, 17)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3fff7ffefffdff7bfff7fff7fffffff","obstacleMap":"00000000000780000000003c004040000000000108786000020000000","robotPosition":"13,18,1","ARrobotPosition":"13,1,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 16, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 87
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 18, 1)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {240: 0, 225: 0, 210: 0, 195: 0, 255: 0}
Checking Free towards LEFT
Cell to check : (12, 20, 13, 20, 14, 20)
ie
Checking Free towards FORWARD
Cell to check : (15, 19, 15, 18, 15, 17)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3fffffffffffff7ffffffff7fffffff","obstacleMap":"00000000000780000000003c0040400000000000210786000010000000","robotPosition":"13,18,2","ARrobotPosition":"13,1,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 17, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 17, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 88
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 18, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 19, 15, 18, 15, 17)
ie
Checking Free towards FORWARD
Cell to check : (12, 16, 13, 16, 14, 16)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3fffffffffffff7ffffffff7fffffff","obstacleMap":"00000000000780000000003c0040400000000000210786000010000000","robotPosition":"13,17,2","ARrobotPosition":"13,2,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 89
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 18, 15, 17, 15, 16)
ie
Checking Free towards FORWARD
Cell to check : (12, 15, 13, 15, 14, 15)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3fffffffffffff7ffffffff7fffffff","obstacleMap":"00000000000780000000003c0040400000000000210786000010000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 2]
--------------------------------------------------
Total move counts: 90
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 17, 15, 16, 15, 15)
ie
Checking Free towards FORWARD
Cell to check : (12, 14, 13, 14, 14, 14)
South: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3fffffffffffff7ffffffff7fffffff","obstacleMap":"00000000000780000000003c0040400000000000210786000010000000","robotPosition":"13,16,3","ARrobotPosition":"13,3,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 3
Sensor 3
Obstacle @ Cell 3
Sensor 4
Sensor 5
ie
0,0,3,3,0,3,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 14, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 3.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 14, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 3.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 15, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 15, 1.0, 1.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 5.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [0, 0]
--------------------------------------------------
Total move counts: 91
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 3)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {235: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00404000000000002183c30000080000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 17, 15, 16, 15, 15)
ie
Checking Free towards FORWARD
Cell to check : (12, 14, 13, 14, 14, 14)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffe3ffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00404000000000002183c30000080000000","robotPosition":"13,15,2","ARrobotPosition":"13,4,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 3
Sensor 3
Obstacle @ Cell 3
Sensor 4
Obstacle @ Cell 3
Sensor 5
1,1,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 13, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (14, 11, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 1.0, 1.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 13, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 11, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 1.0, 1.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 13, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (12, 11, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 1.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 28.0)
br
--------------------------------------------------
Total move counts: 93
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 15, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {178: 1, 179: 1, 180: 1}
Checking Free towards LEFT
Cell to check : (15, 16, 15, 15, 15, 14)
ie
Checking Free towards FORWARD
Cell to check : (12, 13, 13, 13, 14, 13)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00407800000000000430786000010000000","robotPosition":"13,14,2","ARrobotPosition":"13,5,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 2
Sensor 3
Obstacle @ Cell 2
Sensor 4
Obstacle @ Cell 2
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 12, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (14, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 3.0, 3.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 12, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 3.0, 3.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 12, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (12, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 3.0, 3.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 18.0)
br
--------------------------------------------------
Total move counts: 94
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 14, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 15, 15, 14, 15, 13)
ie
Checking Free towards FORWARD
Cell to check : (12, 12, 13, 12, 14, 12)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00407800000000000430786000010000000","robotPosition":"13,13,2","ARrobotPosition":"13,6,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
1,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 7.0, 7.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 7.0, 7.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 7.0, 7.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 13.0)
br
--------------------------------------------------
Total move counts: 95
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 13, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 14, 15, 13, 15, 12)
ie
Checking Free towards FORWARD
Cell to check : (12, 11, 13, 11, 14, 11)
South: False
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00407800000000000430786000010000000","robotPosition":"13,13,3","ARrobotPosition":"13,6,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 11.0, 11.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 11.0, 11.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 12, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 4.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 13, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 8.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 18, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 96
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 13, 3)
cells_left: [1, 2, 2]
cells_right: [1, 2, 2]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (12, 11, 13, 11, 14, 11)
South: False
Checking Free towards FORWARD
Cell to check : (11, 14, 11, 13, 12, 11)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00407800000000000430786000010000000","robotPosition":"12,13,3","ARrobotPosition":"12,6,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 11.0, 11.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 6.0, 6.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 12, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 7.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 13, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 9.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 14, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 14.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (11, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 19, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 97
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (12, 13, 3)
cells_left: [1, 2, 2]
cells_right: [1, 0, 2]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (11, 11, 12, 11, 13, 11)
South: False
Checking Free towards FORWARD
Cell to check : (10, 14, 10, 13, 12, 10)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00407800000000000430786000010000000","robotPosition":"11,13,3","ARrobotPosition":"11,6,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 15.0, 15.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (10, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 2.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 12, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (7, 12, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 14.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 13, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (7, 13, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 19.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 14, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 29.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (10, 19, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 98
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 13, 3)
cells_left: [1, 2, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (10, 11, 11, 11, 12, 11)
South: False
Checking Free towards FORWARD
Cell to check : (9, 14, 9, 13, 12, 9)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00407800000000000430786000010000000","robotPosition":"10,13,3","ARrobotPosition":"10,6,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,0,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 10.0, 10.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 10, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 4.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 12, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (7, 12, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 13, 0.0, 15.0)
Current Sesnsor Reading: x, y, count, total: (7, 13, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 21.0)
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 14, 0.0, 20.0)
Current Sesnsor Reading: x, y, count, total: (7, 14, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 31.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 1, 0]
--------------------------------------------------
Total move counts: 99
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 13, 3)
cells_left: [1, 0, 2]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (9, 11, 10, 11, 11, 11)
South: False
Checking Free towards FORWARD
Cell to check : (8, 14, 8, 13, 12, 8)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00407800000000000430786000010000000","robotPosition":"9,13,3","ARrobotPosition":"9,6,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 11, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (10, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (10, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 3.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 7.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 20.0)
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 25.0)
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 35.0)
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 1, 0]
--------------------------------------------------
Total move counts: 100
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 13, 3)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (8, 11, 9, 11, 10, 11)
South: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00407800000000000430786000010000000","robotPosition":"9,12,2","ARrobotPosition":"9,7,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 5
0,1,0,0,0,5,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 14.0, 14.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 10, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (10, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (10, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 8, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 10, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (9, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 5.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 11, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 22.0, 22.0)
br
--------------------------------------------------
Total move counts: 102
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 12, 2)
cells_left: [0, 0, 0]
cells_right: [1, 1, 1]
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (11, 13, 11, 12, 11, 11)
East: False
Checking Free towards FORWARD
Cell to check : (8, 10, 9, 10, 10, 10)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fff1ffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00407800000000000430786000010000000","robotPosition":"9,11,2","ARrobotPosition":"9,8,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 5
0,0,0,0,0,5,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 10, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (12, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 10, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (13, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 9, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (10, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 9, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 3.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 9, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 5.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 10, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 10, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 33.0, 33.0)
br
--------------------------------------------------
Total move counts: 103
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 11, 2)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {163: 0, 164: 0}
Checking Free towards LEFT
Cell to check : (11, 12, 11, 11, 11, 10)
East: False
Checking Free towards FORWARD
Cell to check : (8, 9, 9, 9, 10, 9)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ff0fffdffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000780000000003c00101e0000000000010c1e18000040000000","robotPosition":"9,10,2","ARrobotPosition":"9,9,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 18.0, 18.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 9, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 9, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (13, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 9, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 8, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 8, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (9, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 8, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 6, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 9, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 104
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 10, 2)
cells_left: [1, 1, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {147: 0, 148: 0, 149: 0}
Checking Free towards LEFT
Cell to check : (11, 11, 11, 10, 11, 9)
East: False
Checking Free towards FORWARD
Cell to check : (8, 8, 9, 8, 10, 8)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07f80ffe1ffc3ff87ffefffdffffffffffffffffffffffffff7fffffff","obstacleMap":"000000000007800000000007800203c000000000002183c30000080000000","robotPosition":"9,9,2","ARrobotPosition":"9,10,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Obstacle @ Cell 3
Sensor 4
Obstacle @ Cell 3
Sensor 5
0,0,0,3,3,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 10, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (12, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 8, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 8, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (13, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 8, 0.0, 1.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 5, 0.0, 1.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (9, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (9, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 5, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 5, 1.0, 1.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (8, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (8, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 5, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 5, 1.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (6, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 105
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 9, 2)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {132: 0, 133: 0, 86: 0, 84: 1, 134: 0, 85: 1}
Checking Free towards LEFT
Cell to check : (11, 10, 11, 9, 11, 8)
East: True
LEFT Free
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff03fe07ff0ffe1ffc3fff7ffefffdffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000077000000000001e00080f000000000000860f0c000020000000","robotPosition":"10,9,1","ARrobotPosition":"10,10,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 5
0,1,0,0,0,5,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 22.0, 22.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 10, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 10, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 9, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (13, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 9, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 9, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 8, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (13, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 8, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 8, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 8, 0.0, 1.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 5, 0.0, 4.0)
br
Current Sesnsor Reading: x, y, count, total: (11, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (11, 3, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 2.0, 2.0)
br
--------------------------------------------------
Total move counts: 107
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 9, 1)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {117: 0, 102: 0, 135: 0, 72: 0, 57: 1, 87: 0, 150: 0, 165: 0}
Checking Free towards LEFT
Cell to check : (9, 11, 10, 11, 11, 11)
North: False
Checking Free towards FORWARD
Cell to check : (12, 10, 12, 9, 12, 8)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff23fe47ff8fff1ffe3fffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000040001ce0000000000003c00080f000000000000860f0c000020000000","robotPosition":"11,9,1","ARrobotPosition":"11,10,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
0,1,3,3,3,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 19.0, 19.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 10, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 10, 0.0, 3.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 9, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 9, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 9, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 8, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 8, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 8, 0.0, 3.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (12, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 108
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 9, 1)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {88: 0, 73: 0, 58: 0, 118: 0, 103: 0}
Checking Free towards LEFT
Cell to check : (10, 11, 11, 11, 12, 11)
North: False
Checking Free towards FORWARD
Cell to check : (13, 10, 13, 9, 13, 8)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff33fe67ffcfff9fff3fffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000004000071c0000000000001e000407800000000000430786000010000000","robotPosition":"12,9,1","ARrobotPosition":"12,10,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 2, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 26.0, 26.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 11, 15.0, 15.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 10, 0.0, 7.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 9, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 8, 0.0, 7.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (13, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 5, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (13, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (13, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 109
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (12, 9, 1)
cells_left: [1, 0, 0]
cells_right: [1, 0, 0]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {104: 0, 89: 0, 74: 0, 59: 0, 119: 0}
Checking Free towards LEFT
Cell to check : (11, 11, 12, 11, 13, 11)
North: False
Checking Free towards FORWARD
Cell to check : (14, 10, 14, 9, 14, 8)
East: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff3bfe77ffefffdfffbfffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000400001c380000000000000f000203c000000000002183c30000080000000","robotPosition":"13,9,1","ARrobotPosition":"13,10,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 2]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Obstacle @ Cell 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 11, 23.0, 23.0)
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 11, 15.0, 15.0)
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 7, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (14, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (14, 3, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 110
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 9, 1)
cells_left: [1, 0, 0]
cells_right: [1, 0, 0]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {120: 0, 105: 0, 90: 0, 75: 0, 60: 0}
Checking Free towards LEFT
Cell to check : (12, 11, 13, 11, 14, 11)
North: False
Checking Free towards FORWARD
Cell to check : (15, 10, 15, 9, 15, 8)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000400000707000000000000007800101e0000000000010c1e18000040000000","robotPosition":"13,9,2","ARrobotPosition":"13,10,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 5, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 14.0)
br
--------------------------------------------------
Total move counts: 111
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 9, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 10, 15, 9, 15, 8)
ie
Checking Free towards FORWARD
Cell to check : (12, 7, 13, 7, 14, 7)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000400000707000000000000007800101e0000000000010c1e18000040000000","robotPosition":"13,8,2","ARrobotPosition":"13,11,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 4, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 7, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 10.0)
br
--------------------------------------------------
Total move counts: 112
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 8, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 9, 15, 8, 15, 7)
ie
Checking Free towards FORWARD
Cell to check : (12, 6, 13, 6, 14, 6)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000400000707000000000000007800101e0000000000010c1e18000040000000","robotPosition":"13,7,2","ARrobotPosition":"13,12,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 5, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 5, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 3, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 5, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 3, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 6, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (9, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (8, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 6, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (7, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 6, 0.0, 3.0)
br
--------------------------------------------------
Total move counts: 113
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 7, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (15, 8, 15, 7, 15, 6)
ie
Checking Free towards FORWARD
Cell to check : (12, 5, 13, 5, 14, 5)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff01ff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000400000707000000000000007800101e0000000000010c1e18000040000000","robotPosition":"13,6,2","ARrobotPosition":"13,13,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (14, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 2, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (13, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 2, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 3, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (12, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 2, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 114
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 6, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {43: 0, 44: 0, 45: 0}
Checking Free towards LEFT
Cell to check : (15, 7, 15, 6, 15, 5)
ie
Checking Free towards FORWARD
Cell to check : (12, 4, 13, 4, 14, 4)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e00ff0fff3ffe7fffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000800000e0e00000000000000f000203c000000000002183c30000080000000","robotPosition":"13,5,2","ARrobotPosition":"13,14,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (14, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 2, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 1, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (13, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 2, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (13, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 1, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 3, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (12, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 2, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (12, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 1, 0.0, 1.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 4, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 4, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (8, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (7, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 5.0)
br
--------------------------------------------------
Total move counts: 115
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 5, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {70: 0, 28: 0, 29: 0, 30: 0, 71: 0}
Checking Free towards LEFT
Cell to check : (15, 6, 15, 5, 15, 4)
ie
Checking Free towards FORWARD
Cell to check : (12, 3, 13, 3, 14, 3)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff007e07ff0fff3fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000001000000707000000000000007800101e0000000000010c1e18000040000000","robotPosition":"13,4,2","ARrobotPosition":"13,15,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 2, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 1, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (14, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 0, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 2, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (13, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 1, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (13, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 0, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 2, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (12, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 1, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (12, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 0, 0.0, 1.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 2, 2]
--------------------------------------------------
Total move counts: 116
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 4, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {13: 0, 14: 0, 15: 0}
Checking Free towards LEFT
Cell to check : (15, 5, 15, 4, 15, 3)
ie
Checking Free towards FORWARD
Cell to check : (12, 2, 13, 2, 14, 2)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff03fe07ff0fff3fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000002000000e0e00000000000000f000203c000000000002183c30000080000000","robotPosition":"13,3,2","ARrobotPosition":"13,16,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,3,3,3,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (14, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 0, 0.0, 3.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (13, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 0, 0.0, 3.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (12, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 0, 0.0, 3.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (8, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 2.0)
br
--------------------------------------------------
Total move counts: 117
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 3, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {40: 0, 41: 0, 42: 0, 39: 0}
Checking Free towards LEFT
Cell to check : (15, 4, 15, 3, 15, 2)
ie
Checking Free towards FORWARD
Cell to check : (12, 1, 13, 1, 14, 1)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff03fe07ffffff3fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000002000000e0e00000000000000f000203c000000000002183c30000080000000","robotPosition":"13,2,2","ARrobotPosition":"13,17,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,2,2,2,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (14, 0, 0.0, 7.0)
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (13, 0, 0.0, 7.0)
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (12, 0, 0.0, 7.0)
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 1, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (8, 1, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 1, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 118
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 2, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {24: 0, 25: 0, 26: 0, 27: 0, 23: 0}
Checking Free towards LEFT
Cell to check : (15, 3, 15, 2, 15, 1)
ie
Checking Free towards FORWARD
Cell to check : (12, 0, 13, 0, 14, 0)
South: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff03feffffffff3fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"000000000001000000707000000000000007800101e0000000000010c1e18000040000000","robotPosition":"13,1,2","ARrobotPosition":"13,18,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
1,1,1,1,1,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (10, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 0, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (9, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (8, 0, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 1.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 1.0)
br
--------------------------------------------------
Total move counts: 119
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 1, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {8: 0, 9: 0, 10: 0, 11: 0, 12: 0}
Checking Free towards LEFT
Cell to check : (15, 2, 15, 1, 15, 0)
ie
Checking Free towards FORWARD
Cell to check : (12, -1, 13, -1, 14, -1)
ie
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff3fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,1,3","ARrobotPosition":"13,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 0, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (10, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 2.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 6, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (12, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 120
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (12, -1, 13, -1, 14, -1)
ie
Checking Free towards FORWARD
Cell to check : (11, 2, 11, 1, 0, 11)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff3fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"12,1,3","ARrobotPosition":"12,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 0, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (9, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (8, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 2.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 121
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (12, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (11, -1, 12, -1, 13, -1)
ie
Checking Free towards FORWARD
Cell to check : (10, 2, 10, 1, 0, 10)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff3fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"11,1,3","ARrobotPosition":"11,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 2.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 2.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (8, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 3.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 0, 0]
--------------------------------------------------
Total move counts: 122
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (10, -1, 11, -1, 12, -1)
ie
Checking Free towards FORWARD
Cell to check : (9, 2, 9, 1, 0, 9)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff3fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"11,1,0","ARrobotPosition":"11,18,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Sensor 5
ie
0,0,1,1,0,3,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 0, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 3.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 2, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (10, 3, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 3, 4.0, 4.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 3, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 6.0, 6.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 5, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: [0, 0]
--------------------------------------------------
Total move counts: 123
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 1, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {56: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000c000001c1c00000000000001e000407800000000000430786000010000000","robotPosition":"11,1,3","ARrobotPosition":"11,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (10, -1, 11, -1, 12, -1)
ie
Checking Free towards FORWARD
Cell to check : (9, 2, 9, 1, 0, 9)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ff7ffeffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"0000000000000c000001c1c00000000000001e000407800000000000430786000010000000","robotPosition":"10,1,3","ARrobotPosition":"10,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,1,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 5.0)
Current Sesnsor Reading: x, y, count, total: (6, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 0, 0.0, 1.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (7, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (6, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 1, 0.0, 1.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 3.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [2, 0, 1]
--------------------------------------------------
Total move counts: 125
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {22: 0, 7: 0}
Checking Free towards LEFT
Cell to check : (9, -1, 10, -1, 11, -1)
ie
Checking Free towards FORWARD
Cell to check : (8, 2, 8, 1, 0, 8)
West: True
Blind Range Undetected Obstacle Observed: Turn right to get sensor reading
direction, move_or_turn, updated_cells (robot standing): ('RIGHT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003000000707000000000000007800101e0000000000010c1e18000040000000","robotPosition":"10,1,0","ARrobotPosition":"10,18,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Obstacle @ Cell 1
Sensor 3
Obstacle @ Cell 1
Sensor 4
Obstacle @ Cell 1
Sensor 5
ie
0,0,1,1,1,4,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 0, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (6, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 0, 0.0, 2.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 2, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (7, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 4.0)
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (9, 3, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 3, 4.0, 4.0)
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (10, 3, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 3, 8.0, 8.0)
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 3, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 3, 10.0, 10.0)
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 2, 0, 4)
perm
br
ie
br
--------------------------------------------------
Total move counts: 126
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 1, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
updated_cells (sensor_readings): {55: 1}
Turn Left to get back to original track
direction, move_or_turn, updated_cells (robot standing): ('LEFT', 'TURN', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"10,1,3","ARrobotPosition":"10,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (9, -1, 10, -1, 11, -1)
ie
Checking Free towards FORWARD
Cell to check : (8, 2, 8, 1, 0, 8)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"9,1,3","ARrobotPosition":"9,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 0, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (6, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 0, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (5, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 0, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 1, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (6, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 1, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (5, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 1, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 2, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (6, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (5, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 7.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 128
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (8, -1, 9, -1, 10, -1)
ie
Checking Free towards FORWARD
Cell to check : (7, 2, 7, 1, 0, 7)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"8,1,3","ARrobotPosition":"8,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 0, 0.0, 8.0)
Current Sesnsor Reading: x, y, count, total: (5, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 0, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 0, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (5, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (4, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 1, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 2, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (5, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (4, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 8.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 129
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (8, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (7, -1, 8, -1, 9, -1)
ie
Checking Free towards FORWARD
Cell to check : (6, 2, 6, 1, 0, 6)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"7,1,3","ARrobotPosition":"7,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 0, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (4, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 0, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (3, 0, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 0, 0.0, 5.0)
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 1, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (4, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (3, 1, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 1, 0.0, 5.0)
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (5, 2, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (4, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (3, 2, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 10.0)
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (6, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 130
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (7, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (6, -1, 7, -1, 8, -1)
ie
Checking Free towards FORWARD
Cell to check : (5, 2, 5, 1, 0, 5)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"6,1,3","ARrobotPosition":"6,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 0, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (3, 0, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 0, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (2, 0, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 1, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (3, 1, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 1, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (2, 1, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (4, 2, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (3, 2, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (2, 2, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 5, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 6, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (5, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 131
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (6, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (5, -1, 6, -1, 7, -1)
ie
Checking Free towards FORWARD
Cell to check : (4, 2, 4, 1, 0, 4)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,1,3","ARrobotPosition":"5,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 0, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 0, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (2, 0, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 0, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 1, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 1, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (2, 1, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 1, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 2, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 2, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (2, 2, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 2, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 5, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 6, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (4, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 132
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (4, -1, 5, -1, 6, -1)
ie
Checking Free towards FORWARD
Cell to check : (3, 2, 3, 1, 0, 3)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"4,1,3","ARrobotPosition":"4,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,1,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 0, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 0, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 0, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 1, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 1, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 2, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (0, 2, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 5, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (3, 7, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 133
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (3, -1, 4, -1, 5, -1)
ie
Checking Free towards FORWARD
Cell to check : (2, 2, 2, 1, 0, 2)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"3,1,3","ARrobotPosition":"3,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 4
1,1,3,3,3,4,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 0, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 0, 0.0, 2.0)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 1, 0.0, 2.0)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (1, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 2, 0.0, 2.0)
perm
ie
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 5, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (2, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 35.0, 35.0)
br
--------------------------------------------------
Total move counts: 134
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (2, -1, 3, -1, 4, -1)
ie
Checking Free towards FORWARD
Cell to check : (1, 2, 1, 1, 0, 1)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"2,1,3","ARrobotPosition":"2,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 4
1,1,2,2,2,4,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 0, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 1, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (0, 2, 0, 4)
perm
ie
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 5, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (1, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (1, 6, 19.0, 19.0)
br
--------------------------------------------------
Total move counts: 135
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
updated_cells (sensor_readings): {}
Checking Free towards LEFT
Cell to check : (1, -1, 2, -1, 3, -1)
ie
Checking Free towards FORWARD
Cell to check : (0, 2, 0, 1, 0, 0)
West: True
Forward Free
direction, move_or_turn, updated_cells (robot standing): ('FORWARD', 'MOVE', {})
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"1,1,3","ARrobotPosition":"1,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Back to start......
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"1,1,3","ARrobotPosition":"1,18,3"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (1, 1) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (1, 1) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (1, 1) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (1, 1) to (17, 13):
[(1, 2), (1, 3), (1, 4), (1, 5), (2, 5), (3, 5), (4, 5), (5, 5), (6, 5), (7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5), (13, 6), (13, 7), (13, 8), (13, 9), (13, 10), (13, 11), (13, 12), (13, 13), (14, 13), (15, 13), (16, 13), (17, 13)]
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 0
x_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
y_diff: 1
Fast Path Move List from (1, 1) to (17, 13):
[2, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 4
1,1,1,1,1,4,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (0, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (0, 5, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (0, 6, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (0, 6, 19.0, 19.0)
br
--------------------------------------------------
Total move counts: 136
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (1, 1, 3)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"2,1,1","ARrobotPosition":"2,18,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
ie
0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (1, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (1, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 5, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 5, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 2, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 2, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 1, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 1, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 0, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 0, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 0, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 138
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (2, 1, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"3,1,1","ARrobotPosition":"3,18,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
ie
0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (2, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (2, 5, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 5, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 2, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 2, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 1, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 1, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 0, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 0, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 139
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (3, 1, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"4,1,1","ARrobotPosition":"4,18,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
ie
0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (3, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (3, 5, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 5, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 2, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 2, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 1, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 1, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 0, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (7, 0, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 0, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 140
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (4, 1, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,1,1","ARrobotPosition":"5,18,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
ie
0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 5, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 3, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 3, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (6, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 13.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 15.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 2, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 2, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 1, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 1, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 0, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 0, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 0, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 141
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 1, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: LEFT
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,2,0","ARrobotPosition":"5,17,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
0,0,0,0,0,3,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 1, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 1, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 1, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 3, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 3, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 6, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 6, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 4, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (6, 5, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 17.0)
Current Sesnsor Reading: x, y, count, total: (6, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 10.0)
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 143
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 2, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,3,0","ARrobotPosition":"5,16,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 2, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 2, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 2, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 4, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 6, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 7, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 6, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 7, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 5, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 5, 0.0, 21.0)
Current Sesnsor Reading: x, y, count, total: (6, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (6, 7, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 4, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 4, 0.0, 9.0)
Current Sesnsor Reading: x, y, count, total: (8, 4, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 4, 0.0, 4.0)
Current Sesnsor Reading: x, y, count, total: (9, 4, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 4, 0.0, 2.0)
Current Sesnsor Reading: x, y, count, total: (10, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 4, 0.0, 3.0)
Current Sesnsor Reading: x, y, count, total: (11, 4, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 4, 0.0, 9.0)
br
--------------------------------------------------
Total move counts: 144
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 3, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,4,0","ARrobotPosition":"5,15,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
0,0,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 3, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 3, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 3, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 5, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 7, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 8, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 7, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (6, 6, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (6, 7, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 8, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 1, 1]
--------------------------------------------------
Total move counts: 145
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 4, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,5,0","ARrobotPosition":"5,14,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 2
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,2,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 4, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 4, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 4, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 6, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 37.0, 37.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 6, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 6, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (8, 6, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 6, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (9, 6, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 6, 0.0, 6.0)
Current Sesnsor Reading: x, y, count, total: (10, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 6, 0.0, 7.0)
Current Sesnsor Reading: x, y, count, total: (11, 6, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 6, 0.0, 9.0)
br
--------------------------------------------------
Total move counts: 146
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 5, 0)
cells_left: [0, 0, 0]
cells_right: [0, 1, 1]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,6,0","ARrobotPosition":"5,13,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 5, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 5, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 5, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 7, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 7, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 10, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 7, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (8, 7, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (9, 7, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (10, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 11.0)
Current Sesnsor Reading: x, y, count, total: (11, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 7, 0.0, 9.0)
br
--------------------------------------------------
Total move counts: 147
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 6, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,7,0","ARrobotPosition":"5,12,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 2
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
2,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 6, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 6, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (2, 6, 39.0, 39.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 8, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 11, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 11, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 11, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (8, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 8, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 8, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 148
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 7, 0)
cells_left: [0, 1, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,8,0","ARrobotPosition":"5,11,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 7, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 7, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 7, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 9, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 10, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 11, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 9, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 20.0)
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 9, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 9, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 149
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 8, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,9,0","ARrobotPosition":"5,10,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,1,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 8, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 8, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 8, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 37.0, 37.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 10, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 10, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 10, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 10, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 150
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 9, 0)
cells_left: [0, 0, 0]
cells_right: [1, 1, 1]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,10,0","ARrobotPosition":"5,9,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 5
0,1,0,0,0,5,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 9, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 9, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 9, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 26.0, 26.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 1.0)
perm
br
Sensor 5
Has Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 11, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (8, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 11, 0, 4)
perm
br
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 11, 2.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 11, 28.0, 28.0)
br
--------------------------------------------------
Total move counts: 151
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 10, 0)
cells_left: [0, 0, 0]
cells_right: [1, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,11,0","ARrobotPosition":"5,8,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 10, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 10, 41.0, 41.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 12, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 12, 0.0, 24.0)
Current Sesnsor Reading: x, y, count, total: (8, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 12, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 152
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 11, 0)
cells_left: [1, 1, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,12,0","ARrobotPosition":"5,7,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (3, 11, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (3, 11, 30.0, 30.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 13, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 15, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 16, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 13, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 13, 0.0, 29.0)
Current Sesnsor Reading: x, y, count, total: (8, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 153
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 12, 0)
cells_left: [1, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"5,13,0","ARrobotPosition":"5,6,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 12, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (3, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (2, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (1, 14, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (4, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (4, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (4, 17, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 14, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 14, 0.0, 39.0)
Current Sesnsor Reading: x, y, count, total: (8, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 1)
perm
br
--------------------------------------------------
Total move counts: 154
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (5, 13, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: RIGHT
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"6,13,1","ARrobotPosition":"6,6,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,0,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (5, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (5, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (5, 17, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (7, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 16, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (7, 17, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 11, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 11, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (7, 10, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 10, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (7, 9, 0.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 9, 0.0, 21.0)
Current Sesnsor Reading: x, y, count, total: (7, 8, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 8, 0.0, 19.0)
Current Sesnsor Reading: x, y, count, total: (7, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 7, 0.0, 15.0)
br
--------------------------------------------------
Total move counts: 156
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (6, 13, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"7,13,1","ARrobotPosition":"7,6,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,1,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (6, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (6, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (6, 17, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (8, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 15, 8.0, 8.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 14, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (11, 12, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (8, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (8, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (8, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (8, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 7, 0.0, 15.0)
br
--------------------------------------------------
Total move counts: 157
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (7, 13, 1)
cells_left: [0, 0, 0]
cells_right: [1, 1, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"8,13,1","ARrobotPosition":"8,6,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
0,1,0,0,0,0,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (7, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 15, 0.0, 20.0)
Current Sesnsor Reading: x, y, count, total: (7, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (7, 16, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (7, 17, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (9, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 15, 5.0, 5.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (11, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (9, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (9, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (9, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 7, 0.0, 12.0)
br
--------------------------------------------------
Total move counts: 158
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (8, 13, 1)
cells_left: [0, 0, 0]
cells_right: [1, 1, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"9,13,1","ARrobotPosition":"9,6,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
1,0,0,0,0,0,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (8, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (8, 15, 12.0, 12.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 10.0)
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 5
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 11, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 10, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 9, 0.0, 1.0)
perm
Current Sesnsor Reading: x, y, count, total: (10, 8, 0, 1)
perm
Current Sesnsor Reading: x, y, count, total: (10, 7, 0, 1)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 7, 0.0, 12.0)
br
--------------------------------------------------
Total move counts: 159
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (9, 13, 1)
cells_left: [1, 1, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"10,13,1","ARrobotPosition":"10,6,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 1
Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 1
1,0,0,0,0,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (9, 15, 4, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 15, 9.0, 9.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (11, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 1.0)
perm
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 160
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (10, 13, 1)
cells_left: [1, 1, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"11,13,1","ARrobotPosition":"11,6,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 1
0,0,3,3,3,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (10, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 12.0)
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 14, 0.0, 2.0)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 12, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 2.0)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 161
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (11, 13, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"12,13,1","ARrobotPosition":"12,6,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 1
0,0,2,2,2,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (11, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (11, 17, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 17, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 13, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 12, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 162
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (12, 13, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,13,1","ARrobotPosition":"13,6,1"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
Obstacle @ Cell 1
0,0,1,1,1,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 1.0)
perm
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 15, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 16, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 17, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
ie
br
Sensor 3
Has Obstacle in Covered Range
br
ie
br
Sensor 4
Has Obstacle in Covered Range
br
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [1, 0, 0]
--------------------------------------------------
Total move counts: 163
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 13, 1)
cells_left: [0, 0, 0]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: LEFT
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,14,0","ARrobotPosition":"13,5,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 3
Sensor 2
Sensor 3
Sensor 4
Sensor 5
ie
0,3,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 13, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 13, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 22.0)
Current Sesnsor Reading: x, y, count, total: (10, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (9, 15, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 15, 10.0, 10.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 18, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 18, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 16, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 18, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 165
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 14, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 1]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,15,0","ARrobotPosition":"13,4,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Sensor 1
Obstacle @ Cell 3
Sensor 2
Sensor 3
Sensor 4
Sensor 5
ie
0,3,0,0,0,1,
Sensor 0
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 14, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 14, 0.0, 1.0)
perm
br
Sensor 1
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 14.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 6.0, 6.0)
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 19, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 19, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 19, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 166
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 15, 0)
cells_left: [0, 0, 0]
cells_right: [0, 0, 1]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,0","ARrobotPosition":"13,3,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,3,3,3,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 15, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 15, 0.0, 26.0)
Current Sesnsor Reading: x, y, count, total: (10, 15, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 15, 0.0, 20.0)
Current Sesnsor Reading: x, y, count, total: (9, 15, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 15, 11.0, 11.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 17, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 17, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 17, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 19, 0.0, 2.0)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 19, 0.0, 2.0)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 19, 0.0, 2.0)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 167
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: FORWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 22.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 16.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 7.0, 7.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 168
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 170
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 26.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 18.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 8.0, 8.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 172
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 174
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 30.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 20.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 9.0, 9.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 176
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 178
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 34.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 22.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 10.0, 10.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 180
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 182
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 38.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 24.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 11.0, 11.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 184
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 186
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 42.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 26.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 12.0, 12.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 188
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 190
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 46.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 28.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 13.0, 13.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 192
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 194
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 50.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 30.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 14.0, 14.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 196
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 198
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 54.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 32.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 15.0, 15.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 200
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 202
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 58.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 34.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 16.0, 16.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 204
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 206
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 62.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 36.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 17.0, 17.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 208
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 210
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 66.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 38.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 18.0, 18.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 212
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 214
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 70.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 40.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 19.0, 19.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 216
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 218
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 74.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 42.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 20.0, 20.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 220
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 222
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 78.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 44.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 21.0, 21.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 224
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 226
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 82.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 46.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 22.0, 22.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 228
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 230
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 86.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 48.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 23.0, 23.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 232
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 234
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 90.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 50.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 24.0, 24.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 236
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 238
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 94.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 52.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 25.0, 25.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 240
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 242
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 98.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 54.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 26.0, 26.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 244
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 246
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 102.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 56.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 27.0, 27.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 248
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,16,2","ARrobotPosition":"13,3,2"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (16, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (16, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (16, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (16, 13) to (17, 13):
[(17, 13)]
y_diff: 1
Fast Path Move List from (16, 13) to (17, 13):
[2]
Return Sensor Readings...
Sensor 0
ie
Sensor 1
ie
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Obstacle @ Cell 3
1,1,0,0,0,3,
Sensor 0
Has Obstacle in Covered Range
br
ie
br
Sensor 1
Has Obstacle in Covered Range
br
ie
br
Sensor 2
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (14, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (14, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (14, 12, 0.0, 1.0)
perm
br
Sensor 3
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (13, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (13, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (13, 12, 0.0, 1.0)
perm
br
Sensor 4
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (12, 14, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (12, 13, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (12, 12, 0.0, 1.0)
perm
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
br
blind_range_obstacle_status: [0, 0, 1]
--------------------------------------------------
Total move counts: 250
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 16, 2)
cells_left: [1, 1, 1]
cells_right: [1, 1, 1]
Calibrating
--------------------------------------------------
moved robot: BACKWARD
--------------------------------------------------
{"exploreMap":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffff","obstacleMap":"00000000000003800000383800000000000003c00080f000000000000860f0c000020000000","robotPosition":"13,17,0","ARrobotPosition":"13,2,0"}
Exploration Status Map:
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Discovered Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Real Map:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

====================================================================================================
nearest_unexplored_y, nearest_unexplored_x: (18, 0)
Finding shortest path moves to nearest unexplored......
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
Shortest path moaves to nearest unexplored: []
WARNING: Cannot find shortest path moves to nearest unexplored
Finding shortest valid path moves to adjacent cells......
==================================================
Fast Path Cell List from (17, 13) to (16, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (17, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 1):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 14):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (19, 1):
WARNING: No Path Found!
WARNING: Cannot find shortest valid path moves to adjacent cells
Finding shortest valid path moves to adjacent cells of SW/SE/NW/NE cells......
==================================================
Fast Path Cell List from (17, 13) to (17, 13):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (18, 0):
WARNING: No Path Found!
==================================================
Fast Path Cell List from (17, 13) to (16, 13):
[(16, 13)]
y_diff: -1
Fast Path Move List from (17, 13) to (16, 13):
[2]
Return Sensor Readings...
Sensor 0
Obstacle @ Cell 3
Sensor 1
Sensor 2
ie
Sensor 3
ie
Sensor 4
ie
Sensor 5
ie
3,0,2,2,2,1,
Sensor 0
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (11, 16, 0, 4)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (11, 16, 0.0, 106.0)
Current Sesnsor Reading: x, y, count, total: (10, 16, 0.0, 2.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (10, 16, 0.0, 58.0)
Current Sesnsor Reading: x, y, count, total: (9, 16, 1.0, 1.0)
Cumulative Sesnsor Reading: x, y, prob_obstacle, prob_total: (9, 16, 28.0, 28.0)
br
Sensor 1
No Obstacle in Covered Range
Current Sesnsor Reading: x, y, count, total: (11, 18, 0, 4)
perm
Current Sesnsor Reading: x, y, count, total: (10, 18, 0.0, 2.0)
perm
Current Sesnsor Reading: x, y, count, total: (9, 18, 0.0, 1.0)
perm
br
Sensor 2
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (12, 19, 0, 4)
perm
ie
br
Sensor 3
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (13, 19, 0, 4)
perm
ie
br
Sensor 4
Has Obstacle in Covered Range
br
Current Sesnsor Reading: x, y, count, total: (14, 19, 0, 4)
perm
ie
br
Sensor 5
Long Range Sensor: Obstacle observed in blind range
ie
br
blind_range_obstacle_status: []
--------------------------------------------------
Total move counts: 252
Time to Calibrate
Checking Whether Calibration Possible...
Robot Position @ (13, 17, 0)
cells_left: [0, 0, 1]
cells_right: [0, 0, 0]
Exception in Tkinter callback
Traceback (most recent call last):
  File "/Users/anqitu/.pyenv/versions/3.5.2/lib/python3.5/tkinter/__init__.py", line 1550, in __call__
    return self.func(*args)
  File "/Users/anqitu/Workspaces/NTU/MDPTeam15-Algo/Controllers/gui.py", line 171, in _explore
    self._time_spent_label.config(text="%.2f" % get_time_elapsed(start_time) + "s")
  File "/Users/anqitu/.pyenv/versions/3.5.2/lib/python3.5/tkinter/__init__.py", line 1330, in configure
    return self._configure('configure', cnf, kw)
  File "/Users/anqitu/.pyenv/versions/3.5.2/lib/python3.5/tkinter/__init__.py", line 1321, in _configure
    self.tk.call(_flatten((self._w, cmd)) + self._options(cnf))
_tkinter.TclError: invalid command name ".4471058160.4472105448.4472638152"
Anqis-MBP:MDPTeam15-Algo anqitu$
